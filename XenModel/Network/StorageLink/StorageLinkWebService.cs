/* Copyright (c) Citrix Systems Inc. 
 * All rights reserved. 
 * 
 * Redistribution and use in source and binary forms, 
 * with or without modification, are permitted provided 
 * that the following conditions are met: 
 * 
 * *   Redistributions of source code must retain the above 
 *     copyright notice, this list of conditions and the 
 *     following disclaimer. 
 * *   Redistributions in binary form must reproduce the above 
 *     copyright notice, this list of conditions and the 
 *     following disclaimer in the documentation and/or other 
 *     materials provided with the distribution. 
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
 * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
 * SUCH DAMAGE.
 */

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace XenAdmin.Network.StorageLink.Service
{
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service", Namespace="http://localhost:80/Service.wsdl")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(objectInfo))]
    public partial class StorageLinkWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getFabricConfigurationOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setFabricConfigurationOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumFabricsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFabricInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumSwitchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSwitchInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumZonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getZoneInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumZoneAliasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getZoneAliasInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumZoneSetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getZoneSetInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback autoZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback verifyZoningOperationCompleted;
        
        private System.Threading.SendOrPostCallback createHardwareProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyHardwareProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteHardwareProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumHardwareProfilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHardwareProfileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeHostGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumHostGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHostGroupInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback addHostOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeHostOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumHostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHostInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumVirtualMachinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVirtualMachineInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumHostInitiatorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addHostInitiatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeHostInitiatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback enableHostInitiatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback disableHostInitiatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumHostNetworksOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumHostDeviceIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteStorageManifestOperationCompleted;
        
        private System.Threading.SendOrPostCallback createStorageManifestOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyStorageManifestOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumStorageManifestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStorageManifestInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProvisionToManifestOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeProvisionFromManifestOperationCompleted;
        
        private System.Threading.SendOrPostCallback allocateStorageOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteStorageOperationCompleted;
        
        private System.Threading.SendOrPostCallback resizeStorageOperationCompleted;
        
        private System.Threading.SendOrPostCallback assignStorageOperationCompleted;
        
        private System.Threading.SendOrPostCallback unassignStorageOperationCompleted;
        
        private System.Threading.SendOrPostCallback mountStorageOperationCompleted;
        
        private System.Threading.SendOrPostCallback unmountStorageOperationCompleted;
        
        private System.Threading.SendOrPostCallback snapshotSetupOperationCompleted;
        
        private System.Threading.SendOrPostCallback snapshotPrepareOperationCompleted;
        
        private System.Threading.SendOrPostCallback snapshotCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback snapshotUpdateStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback snapshotRestoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback snapshotDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumStorageAdaptersOperationCompleted;
        
        private System.Threading.SendOrPostCallback customMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback addRemoteStorageAdapterOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeRemoteStorageAdapterOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumStorageManagementCredentialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStorageManagementCredentialInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback addStorageManagementCredentialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateStorageManagementCredentialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeStorageManagementCredentialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStorageVolumeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumStorageNodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStoragePoolInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback createStoragePoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteStoragePoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback enableStorageAdvancedOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumStoragePoolsOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumStorageSystemInitiatorPortsOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumStorageSystemTargetPortsOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumStorageSystemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback doesObjectExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumStorageAssignmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumSnapshotAssociationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStorageSystemInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback discoverVhdOnStorageVolumeOperationCompleted;
        
        private System.Threading.SendOrPostCallback createStorageProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteStorageProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyStorageProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumStorageProfilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStorageProfileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback addStorageToStorageProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeStorageFromStorageProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback createStorageRepositoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteStorageRepositoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback destroyStorageRepositoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyStorageRepositoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumStorageRepositoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStorageRepositoryInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback allocateStorageFromRepositoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback deallocateStorageFromRepositoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback addStorageToRepositoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeStorageFromRepositoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSysPrepProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifySysPrepProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSysPrepProfileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteSysPrepProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumSysPrepProfilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumSysPrepRepositoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumSysPrepMasterFileKeysOperationCompleted;
        
        private System.Threading.SendOrPostCallback importStorageToVMOperationCompleted;
        
        private System.Threading.SendOrPostCallback importStorageToVMExOperationCompleted;
        
        private System.Threading.SendOrPostCallback importStorageToHostOperationCompleted;
        
        private System.Threading.SendOrPostCallback createVirtualMachineFromTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback snapshotVirtualMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteVirtualMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback destroyVirtualMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback startVirtualMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback shutdownVirtualMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback pauseVirtualMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback rebootVirtualMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback stopVirtualMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveVirtualMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumVirtualMachineNetworksOperationCompleted;
        
        private System.Threading.SendOrPostCallback turnoffVirtualMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveVirtualMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback personalizeVirtualMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback createVirtualMachineTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteVirtualMachineTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyVirtualMachineTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVirtualMachineTemplateInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumVirtualMachineTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback deployTemplateAsVirtualMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDefaultExportPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback enableSRPOperationCompleted;
        
        private System.Threading.SendOrPostCallback destroySRPOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifySRPSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback switchSRPSiteModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback disableSRPOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSRPSiteInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSRPStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback addRemoteSRPSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRemoteSRPSiteInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyRemoteSRPSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeRemoteSRPSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSRPSiteInfoByUuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback addSRPStorageRepositoryAssociationOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumSRPStorageRepositoryAssociationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSRPStorageRepositoryAssociationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeSRPStorageRepositoryAssociationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSRPStorageRepositoryAssociationByUuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeSRPStorageVolumeAssociationOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumSRPStorageVolumeAssociationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSRPStorageVolumeAssociationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSRPStorageVolumeAssociationByUuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback addSecondaryStorageManagementCredentialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumSecondaryStorageManagementCredentialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSRPRecoveryPoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifySRPRecoveryPoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSRPRecoveryPoolInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumSRPRecoveryPoolsOperationCompleted;
        
        private System.Threading.SendOrPostCallback destroySRPRecoveryPoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSRPConsistencyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSRPConsistencyGroupInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumSRPConsistencyGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback activateSRPConsistencyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifySRPConsistencyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifySRPConsistencyGroupMappingOperationCompleted;
        
        private System.Threading.SendOrPostCallback deactivateSRPConsistencyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback destroySRPConsistencyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback synchronizeSRPConsistencyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumSRPConsistencyGroupsAvailableForUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSRPConsistencyGroupOnSecondaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSRPConsistencyGroupConfigSyncHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback addSRPConsistencyGroupAssociationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSRPConsistencyGroupAssociationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumSRPConsistencyGroupAssociationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeSRPConsistencyGroupAssociationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSRPConsistencyGroupAssociationByUuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateSRPConsistencyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSRPConsistencyGroupValidationHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback clearSRPConsistencyGroupValidationHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback prepareSRPConsistencyGroupForFailoverOperationCompleted;
        
        private System.Threading.SendOrPostCallback incarnateSRPConsistencyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback failoverSRPConsistencyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback testSRPConsistencyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback errorTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback logClientErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSupportLogDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumScsiDeviceProcessorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback pullEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerEventListenerOperationCompleted;
        
        private System.Threading.SendOrPostCallback setServicePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServiceVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback setServiceTraceLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServiceTraceLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback logRolloverOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback clearJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback restartJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback getJobInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback createLicenseGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteLicenseGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumLicenseGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTagOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeTagOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumTagsOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumAlertsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAlertInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback clearAlertsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLicenseServerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setLicenseServerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLocalizedMessageStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeUserOperationCompleted;
        
        /// <remarks/>
        public StorageLinkWebService() {
            this.Url = "http://localhost:80";
        }
        
        /// <remarks/>
        public event getFabricConfigurationOptionsCompletedEventHandler getFabricConfigurationOptionsCompleted;
        
        /// <remarks/>
        public event setFabricConfigurationOptionsCompletedEventHandler setFabricConfigurationOptionsCompleted;
        
        /// <remarks/>
        public event enumFabricsCompletedEventHandler enumFabricsCompleted;
        
        /// <remarks/>
        public event getFabricInfoCompletedEventHandler getFabricInfoCompleted;
        
        /// <remarks/>
        public event enumSwitchesCompletedEventHandler enumSwitchesCompleted;
        
        /// <remarks/>
        public event getSwitchInfoCompletedEventHandler getSwitchInfoCompleted;
        
        /// <remarks/>
        public event enumZonesCompletedEventHandler enumZonesCompleted;
        
        /// <remarks/>
        public event getZoneInfoCompletedEventHandler getZoneInfoCompleted;
        
        /// <remarks/>
        public event enumZoneAliasesCompletedEventHandler enumZoneAliasesCompleted;
        
        /// <remarks/>
        public event getZoneAliasInfoCompletedEventHandler getZoneAliasInfoCompleted;
        
        /// <remarks/>
        public event enumZoneSetsCompletedEventHandler enumZoneSetsCompleted;
        
        /// <remarks/>
        public event getZoneSetInfoCompletedEventHandler getZoneSetInfoCompleted;
        
        /// <remarks/>
        public event autoZoneCompletedEventHandler autoZoneCompleted;
        
        /// <remarks/>
        public event verifyZoningCompletedEventHandler verifyZoningCompleted;
        
        /// <remarks/>
        public event createHardwareProfileCompletedEventHandler createHardwareProfileCompleted;
        
        /// <remarks/>
        public event modifyHardwareProfileCompletedEventHandler modifyHardwareProfileCompleted;
        
        /// <remarks/>
        public event deleteHardwareProfileCompletedEventHandler deleteHardwareProfileCompleted;
        
        /// <remarks/>
        public event enumHardwareProfilesCompletedEventHandler enumHardwareProfilesCompleted;
        
        /// <remarks/>
        public event getHardwareProfileInfoCompletedEventHandler getHardwareProfileInfoCompleted;
        
        /// <remarks/>
        public event removeHostGroupCompletedEventHandler removeHostGroupCompleted;
        
        /// <remarks/>
        public event enumHostGroupsCompletedEventHandler enumHostGroupsCompleted;
        
        /// <remarks/>
        public event getHostGroupInfoCompletedEventHandler getHostGroupInfoCompleted;
        
        /// <remarks/>
        public event addHostCompletedEventHandler addHostCompleted;
        
        /// <remarks/>
        public event removeHostCompletedEventHandler removeHostCompleted;
        
        /// <remarks/>
        public event enumHostsCompletedEventHandler enumHostsCompleted;
        
        /// <remarks/>
        public event getHostInfoCompletedEventHandler getHostInfoCompleted;
        
        /// <remarks/>
        public event enumVirtualMachinesCompletedEventHandler enumVirtualMachinesCompleted;
        
        /// <remarks/>
        public event getVirtualMachineInfoCompletedEventHandler getVirtualMachineInfoCompleted;
        
        /// <remarks/>
        public event enumHostInitiatorsCompletedEventHandler enumHostInitiatorsCompleted;
        
        /// <remarks/>
        public event addHostInitiatorCompletedEventHandler addHostInitiatorCompleted;
        
        /// <remarks/>
        public event removeHostInitiatorCompletedEventHandler removeHostInitiatorCompleted;
        
        /// <remarks/>
        public event enableHostInitiatorCompletedEventHandler enableHostInitiatorCompleted;
        
        /// <remarks/>
        public event disableHostInitiatorCompletedEventHandler disableHostInitiatorCompleted;
        
        /// <remarks/>
        public event enumHostNetworksCompletedEventHandler enumHostNetworksCompleted;
        
        /// <remarks/>
        public event enumHostDeviceIDCompletedEventHandler enumHostDeviceIDCompleted;
        
        /// <remarks/>
        public event deleteStorageManifestCompletedEventHandler deleteStorageManifestCompleted;
        
        /// <remarks/>
        public event createStorageManifestCompletedEventHandler createStorageManifestCompleted;
        
        /// <remarks/>
        public event modifyStorageManifestCompletedEventHandler modifyStorageManifestCompleted;
        
        /// <remarks/>
        public event enumStorageManifestsCompletedEventHandler enumStorageManifestsCompleted;
        
        /// <remarks/>
        public event getStorageManifestInfoCompletedEventHandler getStorageManifestInfoCompleted;
        
        /// <remarks/>
        public event addProvisionToManifestCompletedEventHandler addProvisionToManifestCompleted;
        
        /// <remarks/>
        public event removeProvisionFromManifestCompletedEventHandler removeProvisionFromManifestCompleted;
        
        /// <remarks/>
        public event allocateStorageCompletedEventHandler allocateStorageCompleted;
        
        /// <remarks/>
        public event deleteStorageCompletedEventHandler deleteStorageCompleted;
        
        /// <remarks/>
        public event resizeStorageCompletedEventHandler resizeStorageCompleted;
        
        /// <remarks/>
        public event assignStorageCompletedEventHandler assignStorageCompleted;
        
        /// <remarks/>
        public event unassignStorageCompletedEventHandler unassignStorageCompleted;
        
        /// <remarks/>
        public event mountStorageCompletedEventHandler mountStorageCompleted;
        
        /// <remarks/>
        public event unmountStorageCompletedEventHandler unmountStorageCompleted;
        
        /// <remarks/>
        public event snapshotSetupCompletedEventHandler snapshotSetupCompleted;
        
        /// <remarks/>
        public event snapshotPrepareCompletedEventHandler snapshotPrepareCompleted;
        
        /// <remarks/>
        public event snapshotCreateCompletedEventHandler snapshotCreateCompleted;
        
        /// <remarks/>
        public event snapshotUpdateStatusCompletedEventHandler snapshotUpdateStatusCompleted;
        
        /// <remarks/>
        public event snapshotRestoreCompletedEventHandler snapshotRestoreCompleted;
        
        /// <remarks/>
        public event snapshotDeleteCompletedEventHandler snapshotDeleteCompleted;
        
        /// <remarks/>
        public event enumStorageAdaptersCompletedEventHandler enumStorageAdaptersCompleted;
        
        /// <remarks/>
        public event customMethodCompletedEventHandler customMethodCompleted;
        
        /// <remarks/>
        public event addRemoteStorageAdapterCompletedEventHandler addRemoteStorageAdapterCompleted;
        
        /// <remarks/>
        public event removeRemoteStorageAdapterCompletedEventHandler removeRemoteStorageAdapterCompleted;
        
        /// <remarks/>
        public event enumStorageManagementCredentialsCompletedEventHandler enumStorageManagementCredentialsCompleted;
        
        /// <remarks/>
        public event getStorageManagementCredentialInfoCompletedEventHandler getStorageManagementCredentialInfoCompleted;
        
        /// <remarks/>
        public event addStorageManagementCredentialsCompletedEventHandler addStorageManagementCredentialsCompleted;
        
        /// <remarks/>
        public event updateStorageManagementCredentialsCompletedEventHandler updateStorageManagementCredentialsCompleted;
        
        /// <remarks/>
        public event removeStorageManagementCredentialsCompletedEventHandler removeStorageManagementCredentialsCompleted;
        
        /// <remarks/>
        public event getStorageVolumeInfoCompletedEventHandler getStorageVolumeInfoCompleted;
        
        /// <remarks/>
        public event enumStorageNodesCompletedEventHandler enumStorageNodesCompleted;
        
        /// <remarks/>
        public event getStoragePoolInfoCompletedEventHandler getStoragePoolInfoCompleted;
        
        /// <remarks/>
        public event createStoragePoolCompletedEventHandler createStoragePoolCompleted;
        
        /// <remarks/>
        public event deleteStoragePoolCompletedEventHandler deleteStoragePoolCompleted;
        
        /// <remarks/>
        public event enableStorageAdvancedOptionCompletedEventHandler enableStorageAdvancedOptionCompleted;
        
        /// <remarks/>
        public event enumStoragePoolsCompletedEventHandler enumStoragePoolsCompleted;
        
        /// <remarks/>
        public event enumStorageSystemInitiatorPortsCompletedEventHandler enumStorageSystemInitiatorPortsCompleted;
        
        /// <remarks/>
        public event enumStorageSystemTargetPortsCompletedEventHandler enumStorageSystemTargetPortsCompleted;
        
        /// <remarks/>
        public event enumStorageSystemsCompletedEventHandler enumStorageSystemsCompleted;
        
        /// <remarks/>
        public event doesObjectExistCompletedEventHandler doesObjectExistCompleted;
        
        /// <remarks/>
        public event enumStorageAssignmentsCompletedEventHandler enumStorageAssignmentsCompleted;
        
        /// <remarks/>
        public event enumSnapshotAssociationsCompletedEventHandler enumSnapshotAssociationsCompleted;
        
        /// <remarks/>
        public event getStorageSystemInfoCompletedEventHandler getStorageSystemInfoCompleted;
        
        /// <remarks/>
        public event discoverVhdOnStorageVolumeCompletedEventHandler discoverVhdOnStorageVolumeCompleted;
        
        /// <remarks/>
        public event createStorageProfileCompletedEventHandler createStorageProfileCompleted;
        
        /// <remarks/>
        public event deleteStorageProfileCompletedEventHandler deleteStorageProfileCompleted;
        
        /// <remarks/>
        public event modifyStorageProfileCompletedEventHandler modifyStorageProfileCompleted;
        
        /// <remarks/>
        public event enumStorageProfilesCompletedEventHandler enumStorageProfilesCompleted;
        
        /// <remarks/>
        public event getStorageProfileInfoCompletedEventHandler getStorageProfileInfoCompleted;
        
        /// <remarks/>
        public event addStorageToStorageProfileCompletedEventHandler addStorageToStorageProfileCompleted;
        
        /// <remarks/>
        public event removeStorageFromStorageProfileCompletedEventHandler removeStorageFromStorageProfileCompleted;
        
        /// <remarks/>
        public event createStorageRepositoryCompletedEventHandler createStorageRepositoryCompleted;
        
        /// <remarks/>
        public event deleteStorageRepositoryCompletedEventHandler deleteStorageRepositoryCompleted;
        
        /// <remarks/>
        public event destroyStorageRepositoryCompletedEventHandler destroyStorageRepositoryCompleted;
        
        /// <remarks/>
        public event modifyStorageRepositoryCompletedEventHandler modifyStorageRepositoryCompleted;
        
        /// <remarks/>
        public event enumStorageRepositoriesCompletedEventHandler enumStorageRepositoriesCompleted;
        
        /// <remarks/>
        public event getStorageRepositoryInfoCompletedEventHandler getStorageRepositoryInfoCompleted;
        
        /// <remarks/>
        public event allocateStorageFromRepositoryCompletedEventHandler allocateStorageFromRepositoryCompleted;
        
        /// <remarks/>
        public event deallocateStorageFromRepositoryCompletedEventHandler deallocateStorageFromRepositoryCompleted;
        
        /// <remarks/>
        public event addStorageToRepositoryCompletedEventHandler addStorageToRepositoryCompleted;
        
        /// <remarks/>
        public event removeStorageFromRepositoryCompletedEventHandler removeStorageFromRepositoryCompleted;
        
        /// <remarks/>
        public event createSysPrepProfileCompletedEventHandler createSysPrepProfileCompleted;
        
        /// <remarks/>
        public event modifySysPrepProfileCompletedEventHandler modifySysPrepProfileCompleted;
        
        /// <remarks/>
        public event getSysPrepProfileInfoCompletedEventHandler getSysPrepProfileInfoCompleted;
        
        /// <remarks/>
        public event deleteSysPrepProfileCompletedEventHandler deleteSysPrepProfileCompleted;
        
        /// <remarks/>
        public event enumSysPrepProfilesCompletedEventHandler enumSysPrepProfilesCompleted;
        
        /// <remarks/>
        public event enumSysPrepRepositoriesCompletedEventHandler enumSysPrepRepositoriesCompleted;
        
        /// <remarks/>
        public event enumSysPrepMasterFileKeysCompletedEventHandler enumSysPrepMasterFileKeysCompleted;
        
        /// <remarks/>
        public event importStorageToVMCompletedEventHandler importStorageToVMCompleted;
        
        /// <remarks/>
        public event importStorageToVMExCompletedEventHandler importStorageToVMExCompleted;
        
        /// <remarks/>
        public event importStorageToHostCompletedEventHandler importStorageToHostCompleted;
        
        /// <remarks/>
        public event createVirtualMachineFromTemplateCompletedEventHandler createVirtualMachineFromTemplateCompleted;
        
        /// <remarks/>
        public event snapshotVirtualMachineCompletedEventHandler snapshotVirtualMachineCompleted;
        
        /// <remarks/>
        public event deleteVirtualMachineCompletedEventHandler deleteVirtualMachineCompleted;
        
        /// <remarks/>
        public event destroyVirtualMachineCompletedEventHandler destroyVirtualMachineCompleted;
        
        /// <remarks/>
        public event startVirtualMachineCompletedEventHandler startVirtualMachineCompleted;
        
        /// <remarks/>
        public event shutdownVirtualMachineCompletedEventHandler shutdownVirtualMachineCompleted;
        
        /// <remarks/>
        public event pauseVirtualMachineCompletedEventHandler pauseVirtualMachineCompleted;
        
        /// <remarks/>
        public event rebootVirtualMachineCompletedEventHandler rebootVirtualMachineCompleted;
        
        /// <remarks/>
        public event stopVirtualMachineCompletedEventHandler stopVirtualMachineCompleted;
        
        /// <remarks/>
        public event saveVirtualMachineCompletedEventHandler saveVirtualMachineCompleted;
        
        /// <remarks/>
        public event enumVirtualMachineNetworksCompletedEventHandler enumVirtualMachineNetworksCompleted;
        
        /// <remarks/>
        public event turnoffVirtualMachineCompletedEventHandler turnoffVirtualMachineCompleted;
        
        /// <remarks/>
        public event moveVirtualMachineCompletedEventHandler moveVirtualMachineCompleted;
        
        /// <remarks/>
        public event personalizeVirtualMachineCompletedEventHandler personalizeVirtualMachineCompleted;
        
        /// <remarks/>
        public event createVirtualMachineTemplateCompletedEventHandler createVirtualMachineTemplateCompleted;
        
        /// <remarks/>
        public event deleteVirtualMachineTemplateCompletedEventHandler deleteVirtualMachineTemplateCompleted;
        
        /// <remarks/>
        public event modifyVirtualMachineTemplateCompletedEventHandler modifyVirtualMachineTemplateCompleted;
        
        /// <remarks/>
        public event getVirtualMachineTemplateInfoCompletedEventHandler getVirtualMachineTemplateInfoCompleted;
        
        /// <remarks/>
        public event enumVirtualMachineTemplatesCompletedEventHandler enumVirtualMachineTemplatesCompleted;
        
        /// <remarks/>
        public event deployTemplateAsVirtualMachineCompletedEventHandler deployTemplateAsVirtualMachineCompleted;
        
        /// <remarks/>
        public event getDefaultExportPathCompletedEventHandler getDefaultExportPathCompleted;
        
        /// <remarks/>
        public event enableSRPCompletedEventHandler enableSRPCompleted;
        
        /// <remarks/>
        public event destroySRPCompletedEventHandler destroySRPCompleted;
        
        /// <remarks/>
        public event modifySRPSiteCompletedEventHandler modifySRPSiteCompleted;
        
        /// <remarks/>
        public event switchSRPSiteModeCompletedEventHandler switchSRPSiteModeCompleted;
        
        /// <remarks/>
        public event disableSRPCompletedEventHandler disableSRPCompleted;
        
        /// <remarks/>
        public event getSRPSiteInfoCompletedEventHandler getSRPSiteInfoCompleted;
        
        /// <remarks/>
        public event getSRPStateCompletedEventHandler getSRPStateCompleted;
        
        /// <remarks/>
        public event addRemoteSRPSiteCompletedEventHandler addRemoteSRPSiteCompleted;
        
        /// <remarks/>
        public event getRemoteSRPSiteInfoCompletedEventHandler getRemoteSRPSiteInfoCompleted;
        
        /// <remarks/>
        public event modifyRemoteSRPSiteCompletedEventHandler modifyRemoteSRPSiteCompleted;
        
        /// <remarks/>
        public event removeRemoteSRPSiteCompletedEventHandler removeRemoteSRPSiteCompleted;
        
        /// <remarks/>
        public event getSRPSiteInfoByUuidCompletedEventHandler getSRPSiteInfoByUuidCompleted;
        
        /// <remarks/>
        public event addSRPStorageRepositoryAssociationCompletedEventHandler addSRPStorageRepositoryAssociationCompleted;
        
        /// <remarks/>
        public event enumSRPStorageRepositoryAssociationsCompletedEventHandler enumSRPStorageRepositoryAssociationsCompleted;
        
        /// <remarks/>
        public event getSRPStorageRepositoryAssociationsCompletedEventHandler getSRPStorageRepositoryAssociationsCompleted;
        
        /// <remarks/>
        public event removeSRPStorageRepositoryAssociationCompletedEventHandler removeSRPStorageRepositoryAssociationCompleted;
        
        /// <remarks/>
        public event getSRPStorageRepositoryAssociationByUuidCompletedEventHandler getSRPStorageRepositoryAssociationByUuidCompleted;
        
        /// <remarks/>
        public event removeSRPStorageVolumeAssociationCompletedEventHandler removeSRPStorageVolumeAssociationCompleted;
        
        /// <remarks/>
        public event enumSRPStorageVolumeAssociationsCompletedEventHandler enumSRPStorageVolumeAssociationsCompleted;
        
        /// <remarks/>
        public event getSRPStorageVolumeAssociationsCompletedEventHandler getSRPStorageVolumeAssociationsCompleted;
        
        /// <remarks/>
        public event getSRPStorageVolumeAssociationByUuidCompletedEventHandler getSRPStorageVolumeAssociationByUuidCompleted;
        
        /// <remarks/>
        public event addSecondaryStorageManagementCredentialsCompletedEventHandler addSecondaryStorageManagementCredentialsCompleted;
        
        /// <remarks/>
        public event enumSecondaryStorageManagementCredentialsCompletedEventHandler enumSecondaryStorageManagementCredentialsCompleted;
        
        /// <remarks/>
        public event createSRPRecoveryPoolCompletedEventHandler createSRPRecoveryPoolCompleted;
        
        /// <remarks/>
        public event modifySRPRecoveryPoolCompletedEventHandler modifySRPRecoveryPoolCompleted;
        
        /// <remarks/>
        public event getSRPRecoveryPoolInfoCompletedEventHandler getSRPRecoveryPoolInfoCompleted;
        
        /// <remarks/>
        public event enumSRPRecoveryPoolsCompletedEventHandler enumSRPRecoveryPoolsCompleted;
        
        /// <remarks/>
        public event destroySRPRecoveryPoolCompletedEventHandler destroySRPRecoveryPoolCompleted;
        
        /// <remarks/>
        public event createSRPConsistencyGroupCompletedEventHandler createSRPConsistencyGroupCompleted;
        
        /// <remarks/>
        public event getSRPConsistencyGroupInfoCompletedEventHandler getSRPConsistencyGroupInfoCompleted;
        
        /// <remarks/>
        public event enumSRPConsistencyGroupsCompletedEventHandler enumSRPConsistencyGroupsCompleted;
        
        /// <remarks/>
        public event activateSRPConsistencyGroupCompletedEventHandler activateSRPConsistencyGroupCompleted;
        
        /// <remarks/>
        public event modifySRPConsistencyGroupCompletedEventHandler modifySRPConsistencyGroupCompleted;
        
        /// <remarks/>
        public event modifySRPConsistencyGroupMappingCompletedEventHandler modifySRPConsistencyGroupMappingCompleted;
        
        /// <remarks/>
        public event deactivateSRPConsistencyGroupCompletedEventHandler deactivateSRPConsistencyGroupCompleted;
        
        /// <remarks/>
        public event destroySRPConsistencyGroupCompletedEventHandler destroySRPConsistencyGroupCompleted;
        
        /// <remarks/>
        public event synchronizeSRPConsistencyGroupCompletedEventHandler synchronizeSRPConsistencyGroupCompleted;
        
        /// <remarks/>
        public event enumSRPConsistencyGroupsAvailableForUpdateCompletedEventHandler enumSRPConsistencyGroupsAvailableForUpdateCompleted;
        
        /// <remarks/>
        public event updateSRPConsistencyGroupOnSecondaryCompletedEventHandler updateSRPConsistencyGroupOnSecondaryCompleted;
        
        /// <remarks/>
        public event getSRPConsistencyGroupConfigSyncHistoryCompletedEventHandler getSRPConsistencyGroupConfigSyncHistoryCompleted;
        
        /// <remarks/>
        public event addSRPConsistencyGroupAssociationCompletedEventHandler addSRPConsistencyGroupAssociationCompleted;
        
        /// <remarks/>
        public event getSRPConsistencyGroupAssociationsCompletedEventHandler getSRPConsistencyGroupAssociationsCompleted;
        
        /// <remarks/>
        public event enumSRPConsistencyGroupAssociationsCompletedEventHandler enumSRPConsistencyGroupAssociationsCompleted;
        
        /// <remarks/>
        public event removeSRPConsistencyGroupAssociationCompletedEventHandler removeSRPConsistencyGroupAssociationCompleted;
        
        /// <remarks/>
        public event getSRPConsistencyGroupAssociationByUuidCompletedEventHandler getSRPConsistencyGroupAssociationByUuidCompleted;
        
        /// <remarks/>
        public event validateSRPConsistencyGroupCompletedEventHandler validateSRPConsistencyGroupCompleted;
        
        /// <remarks/>
        public event getSRPConsistencyGroupValidationHistoryCompletedEventHandler getSRPConsistencyGroupValidationHistoryCompleted;
        
        /// <remarks/>
        public event clearSRPConsistencyGroupValidationHistoryCompletedEventHandler clearSRPConsistencyGroupValidationHistoryCompleted;
        
        /// <remarks/>
        public event prepareSRPConsistencyGroupForFailoverCompletedEventHandler prepareSRPConsistencyGroupForFailoverCompleted;
        
        /// <remarks/>
        public event incarnateSRPConsistencyGroupCompletedEventHandler incarnateSRPConsistencyGroupCompleted;
        
        /// <remarks/>
        public event failoverSRPConsistencyGroupCompletedEventHandler failoverSRPConsistencyGroupCompleted;
        
        /// <remarks/>
        public event testSRPConsistencyGroupCompletedEventHandler testSRPConsistencyGroupCompleted;
        
        /// <remarks/>
        public event errorTestCompletedEventHandler errorTestCompleted;
        
        /// <remarks/>
        public event logClientErrorCompletedEventHandler logClientErrorCompleted;
        
        /// <remarks/>
        public event getSupportLogDataCompletedEventHandler getSupportLogDataCompleted;
        
        /// <remarks/>
        public event enumScsiDeviceProcessorsCompletedEventHandler enumScsiDeviceProcessorsCompleted;
        
        /// <remarks/>
        public event pullEventsCompletedEventHandler pullEventsCompleted;
        
        /// <remarks/>
        public event registerEventListenerCompletedEventHandler registerEventListenerCompleted;
        
        /// <remarks/>
        public event setServicePasswordCompletedEventHandler setServicePasswordCompleted;
        
        /// <remarks/>
        public event getServiceVersionCompletedEventHandler getServiceVersionCompleted;
        
        /// <remarks/>
        public event setServiceTraceLevelCompletedEventHandler setServiceTraceLevelCompleted;
        
        /// <remarks/>
        public event getServiceTraceLevelCompletedEventHandler getServiceTraceLevelCompleted;
        
        /// <remarks/>
        public event logRolloverCompletedEventHandler logRolloverCompleted;
        
        /// <remarks/>
        public event enumJobsCompletedEventHandler enumJobsCompleted;
        
        /// <remarks/>
        public event clearJobsCompletedEventHandler clearJobsCompleted;
        
        /// <remarks/>
        public event restartJobCompletedEventHandler restartJobCompleted;
        
        /// <remarks/>
        public event cancelJobCompletedEventHandler cancelJobCompleted;
        
        /// <remarks/>
        public event getJobInfoCompletedEventHandler getJobInfoCompleted;
        
        /// <remarks/>
        public event createLicenseGroupCompletedEventHandler createLicenseGroupCompleted;
        
        /// <remarks/>
        public event deleteLicenseGroupCompletedEventHandler deleteLicenseGroupCompleted;
        
        /// <remarks/>
        public event enumLicenseGroupsCompletedEventHandler enumLicenseGroupsCompleted;
        
        /// <remarks/>
        public event addTagCompletedEventHandler addTagCompleted;
        
        /// <remarks/>
        public event removeTagCompletedEventHandler removeTagCompleted;
        
        /// <remarks/>
        public event enumTagsCompletedEventHandler enumTagsCompleted;
        
        /// <remarks/>
        public event enumAlertsCompletedEventHandler enumAlertsCompleted;
        
        /// <remarks/>
        public event getAlertInfoCompletedEventHandler getAlertInfoCompleted;
        
        /// <remarks/>
        public event clearAlertsCompletedEventHandler clearAlertsCompleted;
        
        /// <remarks/>
        public event getLicenseServerInfoCompletedEventHandler getLicenseServerInfoCompleted;
        
        /// <remarks/>
        public event setLicenseServerInfoCompletedEventHandler setLicenseServerInfoCompleted;
        
        /// <remarks/>
        public event getLocalizedMessageStringCompletedEventHandler getLocalizedMessageStringCompleted;
        
        /// <remarks/>
        public event enumUsersCompletedEventHandler enumUsersCompleted;
        
        /// <remarks/>
        public event getUserInfoCompletedEventHandler getUserInfoCompleted;
        
        /// <remarks/>
        public event addUserCompletedEventHandler addUserCompleted;
        
        /// <remarks/>
        public event changeUserPasswordCompletedEventHandler changeUserPasswordCompleted;
        
        /// <remarks/>
        public event modifyUserCompletedEventHandler modifyUserCompleted;
        
        /// <remarks/>
        public event removeUserCompletedEventHandler removeUserCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public fabricConfigurationInfo getFabricConfigurationOptions([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getFabricConfigurationOptions", new object[] {
                        flags});
            return ((fabricConfigurationInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFabricConfigurationOptions(int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFabricConfigurationOptions", new object[] {
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public fabricConfigurationInfo EndgetFabricConfigurationOptions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((fabricConfigurationInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getFabricConfigurationOptionsAsync(int flags) {
            this.getFabricConfigurationOptionsAsync(flags, null);
        }
        
        /// <remarks/>
        public void getFabricConfigurationOptionsAsync(int flags, object userState) {
            if ((this.getFabricConfigurationOptionsOperationCompleted == null)) {
                this.getFabricConfigurationOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFabricConfigurationOptionsOperationCompleted);
            }
            this.InvokeAsync("getFabricConfigurationOptions", new object[] {
                        flags}, this.getFabricConfigurationOptionsOperationCompleted, userState);
        }
        
        private void OngetFabricConfigurationOptionsOperationCompleted(object arg) {
            if ((this.getFabricConfigurationOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFabricConfigurationOptionsCompleted(this, new getFabricConfigurationOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public fabricConfigurationInfo setFabricConfigurationOptions([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] fabricConfigurationInfo settings) {
            object[] results = this.Invoke("setFabricConfigurationOptions", new object[] {
                        settings});
            return ((fabricConfigurationInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetFabricConfigurationOptions(fabricConfigurationInfo settings, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setFabricConfigurationOptions", new object[] {
                        settings}, callback, asyncState);
        }
        
        /// <remarks/>
        public fabricConfigurationInfo EndsetFabricConfigurationOptions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((fabricConfigurationInfo)(results[0]));
        }
        
        /// <remarks/>
        public void setFabricConfigurationOptionsAsync(fabricConfigurationInfo settings) {
            this.setFabricConfigurationOptionsAsync(settings, null);
        }
        
        /// <remarks/>
        public void setFabricConfigurationOptionsAsync(fabricConfigurationInfo settings, object userState) {
            if ((this.setFabricConfigurationOptionsOperationCompleted == null)) {
                this.setFabricConfigurationOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFabricConfigurationOptionsOperationCompleted);
            }
            this.InvokeAsync("setFabricConfigurationOptions", new object[] {
                        settings}, this.setFabricConfigurationOptionsOperationCompleted, userState);
        }
        
        private void OnsetFabricConfigurationOptionsOperationCompleted(object arg) {
            if ((this.setFabricConfigurationOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setFabricConfigurationOptionsCompleted(this, new setFabricConfigurationOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumFabrics([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out fabricInfo[] list) {
            object[] results = this.Invoke("enumFabrics", new object[] {
                        flags});
            list = ((fabricInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumFabrics(int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumFabrics", new object[] {
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumFabrics(System.IAsyncResult asyncResult, out fabricInfo[] list) {
            object[] results = this.EndInvoke(asyncResult);
            list = ((fabricInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumFabricsAsync(int flags) {
            this.enumFabricsAsync(flags, null);
        }
        
        /// <remarks/>
        public void enumFabricsAsync(int flags, object userState) {
            if ((this.enumFabricsOperationCompleted == null)) {
                this.enumFabricsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumFabricsOperationCompleted);
            }
            this.InvokeAsync("enumFabrics", new object[] {
                        flags}, this.enumFabricsOperationCompleted, userState);
        }
        
        private void OnenumFabricsOperationCompleted(object arg) {
            if ((this.enumFabricsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumFabricsCompleted(this, new enumFabricsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public fabricInfo getFabricInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fabricId) {
            object[] results = this.Invoke("getFabricInfo", new object[] {
                        fabricId});
            return ((fabricInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFabricInfo(string fabricId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFabricInfo", new object[] {
                        fabricId}, callback, asyncState);
        }
        
        /// <remarks/>
        public fabricInfo EndgetFabricInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((fabricInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getFabricInfoAsync(string fabricId) {
            this.getFabricInfoAsync(fabricId, null);
        }
        
        /// <remarks/>
        public void getFabricInfoAsync(string fabricId, object userState) {
            if ((this.getFabricInfoOperationCompleted == null)) {
                this.getFabricInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFabricInfoOperationCompleted);
            }
            this.InvokeAsync("getFabricInfo", new object[] {
                        fabricId}, this.getFabricInfoOperationCompleted, userState);
        }
        
        private void OngetFabricInfoOperationCompleted(object arg) {
            if ((this.getFabricInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFabricInfoCompleted(this, new getFabricInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumSwitches([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fabricId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out switchInfo[] list) {
            object[] results = this.Invoke("enumSwitches", new object[] {
                        fabricId,
                        flags});
            list = ((switchInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumSwitches(string fabricId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumSwitches", new object[] {
                        fabricId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumSwitches(System.IAsyncResult asyncResult, out switchInfo[] list) {
            object[] results = this.EndInvoke(asyncResult);
            list = ((switchInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumSwitchesAsync(string fabricId, int flags) {
            this.enumSwitchesAsync(fabricId, flags, null);
        }
        
        /// <remarks/>
        public void enumSwitchesAsync(string fabricId, int flags, object userState) {
            if ((this.enumSwitchesOperationCompleted == null)) {
                this.enumSwitchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumSwitchesOperationCompleted);
            }
            this.InvokeAsync("enumSwitches", new object[] {
                        fabricId,
                        flags}, this.enumSwitchesOperationCompleted, userState);
        }
        
        private void OnenumSwitchesOperationCompleted(object arg) {
            if ((this.enumSwitchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumSwitchesCompleted(this, new enumSwitchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public switchInfo getSwitchInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fabricId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string switchId) {
            object[] results = this.Invoke("getSwitchInfo", new object[] {
                        fabricId,
                        switchId});
            return ((switchInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSwitchInfo(string fabricId, string switchId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSwitchInfo", new object[] {
                        fabricId,
                        switchId}, callback, asyncState);
        }
        
        /// <remarks/>
        public switchInfo EndgetSwitchInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((switchInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getSwitchInfoAsync(string fabricId, string switchId) {
            this.getSwitchInfoAsync(fabricId, switchId, null);
        }
        
        /// <remarks/>
        public void getSwitchInfoAsync(string fabricId, string switchId, object userState) {
            if ((this.getSwitchInfoOperationCompleted == null)) {
                this.getSwitchInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSwitchInfoOperationCompleted);
            }
            this.InvokeAsync("getSwitchInfo", new object[] {
                        fabricId,
                        switchId}, this.getSwitchInfoOperationCompleted, userState);
        }
        
        private void OngetSwitchInfoOperationCompleted(object arg) {
            if ((this.getSwitchInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSwitchInfoCompleted(this, new getSwitchInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumZones([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fabricId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string zoneSetId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out zoneInfo[] list) {
            object[] results = this.Invoke("enumZones", new object[] {
                        fabricId,
                        zoneSetId,
                        flags});
            list = ((zoneInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumZones(string fabricId, string zoneSetId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumZones", new object[] {
                        fabricId,
                        zoneSetId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumZones(System.IAsyncResult asyncResult, out zoneInfo[] list) {
            object[] results = this.EndInvoke(asyncResult);
            list = ((zoneInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumZonesAsync(string fabricId, string zoneSetId, int flags) {
            this.enumZonesAsync(fabricId, zoneSetId, flags, null);
        }
        
        /// <remarks/>
        public void enumZonesAsync(string fabricId, string zoneSetId, int flags, object userState) {
            if ((this.enumZonesOperationCompleted == null)) {
                this.enumZonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumZonesOperationCompleted);
            }
            this.InvokeAsync("enumZones", new object[] {
                        fabricId,
                        zoneSetId,
                        flags}, this.enumZonesOperationCompleted, userState);
        }
        
        private void OnenumZonesOperationCompleted(object arg) {
            if ((this.enumZonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumZonesCompleted(this, new enumZonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public zoneInfo getZoneInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fabricId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string zoneId) {
            object[] results = this.Invoke("getZoneInfo", new object[] {
                        fabricId,
                        zoneId});
            return ((zoneInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetZoneInfo(string fabricId, string zoneId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getZoneInfo", new object[] {
                        fabricId,
                        zoneId}, callback, asyncState);
        }
        
        /// <remarks/>
        public zoneInfo EndgetZoneInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((zoneInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getZoneInfoAsync(string fabricId, string zoneId) {
            this.getZoneInfoAsync(fabricId, zoneId, null);
        }
        
        /// <remarks/>
        public void getZoneInfoAsync(string fabricId, string zoneId, object userState) {
            if ((this.getZoneInfoOperationCompleted == null)) {
                this.getZoneInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetZoneInfoOperationCompleted);
            }
            this.InvokeAsync("getZoneInfo", new object[] {
                        fabricId,
                        zoneId}, this.getZoneInfoOperationCompleted, userState);
        }
        
        private void OngetZoneInfoOperationCompleted(object arg) {
            if ((this.getZoneInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getZoneInfoCompleted(this, new getZoneInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumZoneAliases([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fabricId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out zoneAliasInfo[] list) {
            object[] results = this.Invoke("enumZoneAliases", new object[] {
                        fabricId,
                        flags});
            list = ((zoneAliasInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumZoneAliases(string fabricId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumZoneAliases", new object[] {
                        fabricId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumZoneAliases(System.IAsyncResult asyncResult, out zoneAliasInfo[] list) {
            object[] results = this.EndInvoke(asyncResult);
            list = ((zoneAliasInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumZoneAliasesAsync(string fabricId, int flags) {
            this.enumZoneAliasesAsync(fabricId, flags, null);
        }
        
        /// <remarks/>
        public void enumZoneAliasesAsync(string fabricId, int flags, object userState) {
            if ((this.enumZoneAliasesOperationCompleted == null)) {
                this.enumZoneAliasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumZoneAliasesOperationCompleted);
            }
            this.InvokeAsync("enumZoneAliases", new object[] {
                        fabricId,
                        flags}, this.enumZoneAliasesOperationCompleted, userState);
        }
        
        private void OnenumZoneAliasesOperationCompleted(object arg) {
            if ((this.enumZoneAliasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumZoneAliasesCompleted(this, new enumZoneAliasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public zoneAliasInfo getZoneAliasInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fabricId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string zoneAliasId) {
            object[] results = this.Invoke("getZoneAliasInfo", new object[] {
                        fabricId,
                        zoneAliasId});
            return ((zoneAliasInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetZoneAliasInfo(string fabricId, string zoneAliasId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getZoneAliasInfo", new object[] {
                        fabricId,
                        zoneAliasId}, callback, asyncState);
        }
        
        /// <remarks/>
        public zoneAliasInfo EndgetZoneAliasInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((zoneAliasInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getZoneAliasInfoAsync(string fabricId, string zoneAliasId) {
            this.getZoneAliasInfoAsync(fabricId, zoneAliasId, null);
        }
        
        /// <remarks/>
        public void getZoneAliasInfoAsync(string fabricId, string zoneAliasId, object userState) {
            if ((this.getZoneAliasInfoOperationCompleted == null)) {
                this.getZoneAliasInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetZoneAliasInfoOperationCompleted);
            }
            this.InvokeAsync("getZoneAliasInfo", new object[] {
                        fabricId,
                        zoneAliasId}, this.getZoneAliasInfoOperationCompleted, userState);
        }
        
        private void OngetZoneAliasInfoOperationCompleted(object arg) {
            if ((this.getZoneAliasInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getZoneAliasInfoCompleted(this, new getZoneAliasInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumZoneSets([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fabricId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out zoneSetInfo[] list) {
            object[] results = this.Invoke("enumZoneSets", new object[] {
                        fabricId,
                        flags});
            list = ((zoneSetInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumZoneSets(string fabricId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumZoneSets", new object[] {
                        fabricId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumZoneSets(System.IAsyncResult asyncResult, out zoneSetInfo[] list) {
            object[] results = this.EndInvoke(asyncResult);
            list = ((zoneSetInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumZoneSetsAsync(string fabricId, int flags) {
            this.enumZoneSetsAsync(fabricId, flags, null);
        }
        
        /// <remarks/>
        public void enumZoneSetsAsync(string fabricId, int flags, object userState) {
            if ((this.enumZoneSetsOperationCompleted == null)) {
                this.enumZoneSetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumZoneSetsOperationCompleted);
            }
            this.InvokeAsync("enumZoneSets", new object[] {
                        fabricId,
                        flags}, this.enumZoneSetsOperationCompleted, userState);
        }
        
        private void OnenumZoneSetsOperationCompleted(object arg) {
            if ((this.enumZoneSetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumZoneSetsCompleted(this, new enumZoneSetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public zoneSetInfo getZoneSetInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fabricId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string zoneSetId) {
            object[] results = this.Invoke("getZoneSetInfo", new object[] {
                        fabricId,
                        zoneSetId});
            return ((zoneSetInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetZoneSetInfo(string fabricId, string zoneSetId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getZoneSetInfo", new object[] {
                        fabricId,
                        zoneSetId}, callback, asyncState);
        }
        
        /// <remarks/>
        public zoneSetInfo EndgetZoneSetInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((zoneSetInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getZoneSetInfoAsync(string fabricId, string zoneSetId) {
            this.getZoneSetInfoAsync(fabricId, zoneSetId, null);
        }
        
        /// <remarks/>
        public void getZoneSetInfoAsync(string fabricId, string zoneSetId, object userState) {
            if ((this.getZoneSetInfoOperationCompleted == null)) {
                this.getZoneSetInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetZoneSetInfoOperationCompleted);
            }
            this.InvokeAsync("getZoneSetInfo", new object[] {
                        fabricId,
                        zoneSetId}, this.getZoneSetInfoOperationCompleted, userState);
        }
        
        private void OngetZoneSetInfoOperationCompleted(object arg) {
            if ((this.getZoneSetInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getZoneSetInfoCompleted(this, new getZoneSetInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo autoZone([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string initHostName, [System.Xml.Serialization.XmlElementAttribute("initEndPoints", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] initEndPoints, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute("targetEndPoints", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] targetEndPoints, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("zoneList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out zoneInfo[] zoneList) {
            object[] results = this.Invoke("autoZone", new object[] {
                        initHostName,
                        initEndPoints,
                        storageSystemId,
                        targetEndPoints,
                        flags});
            zoneList = ((zoneInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginautoZone(string initHostName, string[] initEndPoints, string storageSystemId, string[] targetEndPoints, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("autoZone", new object[] {
                        initHostName,
                        initEndPoints,
                        storageSystemId,
                        targetEndPoints,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndautoZone(System.IAsyncResult asyncResult, out zoneInfo[] zoneList) {
            object[] results = this.EndInvoke(asyncResult);
            zoneList = ((zoneInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void autoZoneAsync(string initHostName, string[] initEndPoints, string storageSystemId, string[] targetEndPoints, int flags) {
            this.autoZoneAsync(initHostName, initEndPoints, storageSystemId, targetEndPoints, flags, null);
        }
        
        /// <remarks/>
        public void autoZoneAsync(string initHostName, string[] initEndPoints, string storageSystemId, string[] targetEndPoints, int flags, object userState) {
            if ((this.autoZoneOperationCompleted == null)) {
                this.autoZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnautoZoneOperationCompleted);
            }
            this.InvokeAsync("autoZone", new object[] {
                        initHostName,
                        initEndPoints,
                        storageSystemId,
                        targetEndPoints,
                        flags}, this.autoZoneOperationCompleted, userState);
        }
        
        private void OnautoZoneOperationCompleted(object arg) {
            if ((this.autoZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.autoZoneCompleted(this, new autoZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo verifyZoning([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string initHostName, [System.Xml.Serialization.XmlElementAttribute("initEndPoints", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] initEndPoints, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute("targetEndPoints", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] targetEndPoints, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("zoneList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out zoneInfo[] zoneList) {
            object[] results = this.Invoke("verifyZoning", new object[] {
                        initHostName,
                        initEndPoints,
                        storageSystemId,
                        targetEndPoints,
                        flags});
            zoneList = ((zoneInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginverifyZoning(string initHostName, string[] initEndPoints, string storageSystemId, string[] targetEndPoints, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("verifyZoning", new object[] {
                        initHostName,
                        initEndPoints,
                        storageSystemId,
                        targetEndPoints,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndverifyZoning(System.IAsyncResult asyncResult, out zoneInfo[] zoneList) {
            object[] results = this.EndInvoke(asyncResult);
            zoneList = ((zoneInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void verifyZoningAsync(string initHostName, string[] initEndPoints, string storageSystemId, string[] targetEndPoints, int flags) {
            this.verifyZoningAsync(initHostName, initEndPoints, storageSystemId, targetEndPoints, flags, null);
        }
        
        /// <remarks/>
        public void verifyZoningAsync(string initHostName, string[] initEndPoints, string storageSystemId, string[] targetEndPoints, int flags, object userState) {
            if ((this.verifyZoningOperationCompleted == null)) {
                this.verifyZoningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnverifyZoningOperationCompleted);
            }
            this.InvokeAsync("verifyZoning", new object[] {
                        initHostName,
                        initEndPoints,
                        storageSystemId,
                        targetEndPoints,
                        flags}, this.verifyZoningOperationCompleted, userState);
        }
        
        private void OnverifyZoningOperationCompleted(object arg) {
            if ((this.verifyZoningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.verifyZoningCompleted(this, new verifyZoningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo createHardwareProfile([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint cpuCount, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint nicPolicy, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint memSizeInMB, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string biosBootOrder, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool isProcessorCompatibility, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out hardwareProfileInfo profile) {
            object[] results = this.Invoke("createHardwareProfile", new object[] {
                        friendlyName,
                        description,
                        cpuCount,
                        nicPolicy,
                        memSizeInMB,
                        biosBootOrder,
                        isProcessorCompatibility,
                        flags});
            profile = ((hardwareProfileInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateHardwareProfile(string friendlyName, string description, uint cpuCount, uint nicPolicy, uint memSizeInMB, string biosBootOrder, bool isProcessorCompatibility, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createHardwareProfile", new object[] {
                        friendlyName,
                        description,
                        cpuCount,
                        nicPolicy,
                        memSizeInMB,
                        biosBootOrder,
                        isProcessorCompatibility,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndcreateHardwareProfile(System.IAsyncResult asyncResult, out hardwareProfileInfo profile) {
            object[] results = this.EndInvoke(asyncResult);
            profile = ((hardwareProfileInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void createHardwareProfileAsync(string friendlyName, string description, uint cpuCount, uint nicPolicy, uint memSizeInMB, string biosBootOrder, bool isProcessorCompatibility, int flags) {
            this.createHardwareProfileAsync(friendlyName, description, cpuCount, nicPolicy, memSizeInMB, biosBootOrder, isProcessorCompatibility, flags, null);
        }
        
        /// <remarks/>
        public void createHardwareProfileAsync(string friendlyName, string description, uint cpuCount, uint nicPolicy, uint memSizeInMB, string biosBootOrder, bool isProcessorCompatibility, int flags, object userState) {
            if ((this.createHardwareProfileOperationCompleted == null)) {
                this.createHardwareProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateHardwareProfileOperationCompleted);
            }
            this.InvokeAsync("createHardwareProfile", new object[] {
                        friendlyName,
                        description,
                        cpuCount,
                        nicPolicy,
                        memSizeInMB,
                        biosBootOrder,
                        isProcessorCompatibility,
                        flags}, this.createHardwareProfileOperationCompleted, userState);
        }
        
        private void OncreateHardwareProfileOperationCompleted(object arg) {
            if ((this.createHardwareProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createHardwareProfileCompleted(this, new createHardwareProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo modifyHardwareProfile([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint cpuCount, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint nicPolicy, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint memSizeInMB, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string biosBootOrder, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool isProcessorCompatibility, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out hardwareProfileInfo profile) {
            object[] results = this.Invoke("modifyHardwareProfile", new object[] {
                        uuid,
                        friendlyName,
                        description,
                        cpuCount,
                        nicPolicy,
                        memSizeInMB,
                        biosBootOrder,
                        isProcessorCompatibility,
                        flags});
            profile = ((hardwareProfileInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmodifyHardwareProfile(string uuid, string friendlyName, string description, uint cpuCount, uint nicPolicy, uint memSizeInMB, string biosBootOrder, bool isProcessorCompatibility, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("modifyHardwareProfile", new object[] {
                        uuid,
                        friendlyName,
                        description,
                        cpuCount,
                        nicPolicy,
                        memSizeInMB,
                        biosBootOrder,
                        isProcessorCompatibility,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndmodifyHardwareProfile(System.IAsyncResult asyncResult, out hardwareProfileInfo profile) {
            object[] results = this.EndInvoke(asyncResult);
            profile = ((hardwareProfileInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void modifyHardwareProfileAsync(string uuid, string friendlyName, string description, uint cpuCount, uint nicPolicy, uint memSizeInMB, string biosBootOrder, bool isProcessorCompatibility, int flags) {
            this.modifyHardwareProfileAsync(uuid, friendlyName, description, cpuCount, nicPolicy, memSizeInMB, biosBootOrder, isProcessorCompatibility, flags, null);
        }
        
        /// <remarks/>
        public void modifyHardwareProfileAsync(string uuid, string friendlyName, string description, uint cpuCount, uint nicPolicy, uint memSizeInMB, string biosBootOrder, bool isProcessorCompatibility, int flags, object userState) {
            if ((this.modifyHardwareProfileOperationCompleted == null)) {
                this.modifyHardwareProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyHardwareProfileOperationCompleted);
            }
            this.InvokeAsync("modifyHardwareProfile", new object[] {
                        uuid,
                        friendlyName,
                        description,
                        cpuCount,
                        nicPolicy,
                        memSizeInMB,
                        biosBootOrder,
                        isProcessorCompatibility,
                        flags}, this.modifyHardwareProfileOperationCompleted, userState);
        }
        
        private void OnmodifyHardwareProfileOperationCompleted(object arg) {
            if ((this.modifyHardwareProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyHardwareProfileCompleted(this, new modifyHardwareProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo deleteHardwareProfile([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("deleteHardwareProfile", new object[] {
                        friendlyName,
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteHardwareProfile(string friendlyName, string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteHardwareProfile", new object[] {
                        friendlyName,
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddeleteHardwareProfile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void deleteHardwareProfileAsync(string friendlyName, string uuid, int flags) {
            this.deleteHardwareProfileAsync(friendlyName, uuid, flags, null);
        }
        
        /// <remarks/>
        public void deleteHardwareProfileAsync(string friendlyName, string uuid, int flags, object userState) {
            if ((this.deleteHardwareProfileOperationCompleted == null)) {
                this.deleteHardwareProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteHardwareProfileOperationCompleted);
            }
            this.InvokeAsync("deleteHardwareProfile", new object[] {
                        friendlyName,
                        uuid,
                        flags}, this.deleteHardwareProfileOperationCompleted, userState);
        }
        
        private void OndeleteHardwareProfileOperationCompleted(object arg) {
            if ((this.deleteHardwareProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteHardwareProfileCompleted(this, new deleteHardwareProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumHardwareProfiles([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out hardwareProfileInfo[] list) {
            object[] results = this.Invoke("enumHardwareProfiles", new object[] {
                        flags});
            list = ((hardwareProfileInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumHardwareProfiles(int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumHardwareProfiles", new object[] {
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumHardwareProfiles(System.IAsyncResult asyncResult, out hardwareProfileInfo[] list) {
            object[] results = this.EndInvoke(asyncResult);
            list = ((hardwareProfileInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumHardwareProfilesAsync(int flags) {
            this.enumHardwareProfilesAsync(flags, null);
        }
        
        /// <remarks/>
        public void enumHardwareProfilesAsync(int flags, object userState) {
            if ((this.enumHardwareProfilesOperationCompleted == null)) {
                this.enumHardwareProfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumHardwareProfilesOperationCompleted);
            }
            this.InvokeAsync("enumHardwareProfiles", new object[] {
                        flags}, this.enumHardwareProfilesOperationCompleted, userState);
        }
        
        private void OnenumHardwareProfilesOperationCompleted(object arg) {
            if ((this.enumHardwareProfilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumHardwareProfilesCompleted(this, new enumHardwareProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hardwareProfileInfo getHardwareProfileInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getHardwareProfileInfo", new object[] {
                        friendlyName,
                        uuid,
                        flags});
            return ((hardwareProfileInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetHardwareProfileInfo(string friendlyName, string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getHardwareProfileInfo", new object[] {
                        friendlyName,
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public hardwareProfileInfo EndgetHardwareProfileInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((hardwareProfileInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getHardwareProfileInfoAsync(string friendlyName, string uuid, int flags) {
            this.getHardwareProfileInfoAsync(friendlyName, uuid, flags, null);
        }
        
        /// <remarks/>
        public void getHardwareProfileInfoAsync(string friendlyName, string uuid, int flags, object userState) {
            if ((this.getHardwareProfileInfoOperationCompleted == null)) {
                this.getHardwareProfileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHardwareProfileInfoOperationCompleted);
            }
            this.InvokeAsync("getHardwareProfileInfo", new object[] {
                        friendlyName,
                        uuid,
                        flags}, this.getHardwareProfileInfoOperationCompleted, userState);
        }
        
        private void OngetHardwareProfileInfoOperationCompleted(object arg) {
            if ((this.getHardwareProfileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHardwareProfileInfoCompleted(this, new getHardwareProfileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo removeHostGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string groupName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostGroupUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("removeHostGroup", new object[] {
                        groupName,
                        hostGroupUuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveHostGroup(string groupName, string hostGroupUuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeHostGroup", new object[] {
                        groupName,
                        hostGroupUuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndremoveHostGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void removeHostGroupAsync(string groupName, string hostGroupUuid, int flags) {
            this.removeHostGroupAsync(groupName, hostGroupUuid, flags, null);
        }
        
        /// <remarks/>
        public void removeHostGroupAsync(string groupName, string hostGroupUuid, int flags, object userState) {
            if ((this.removeHostGroupOperationCompleted == null)) {
                this.removeHostGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveHostGroupOperationCompleted);
            }
            this.InvokeAsync("removeHostGroup", new object[] {
                        groupName,
                        hostGroupUuid,
                        flags}, this.removeHostGroupOperationCompleted, userState);
        }
        
        private void OnremoveHostGroupOperationCompleted(object arg) {
            if ((this.removeHostGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeHostGroupCompleted(this, new removeHostGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumHostGroups([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("hostGroupInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out hostGroupInfo[] hostGroupInfoList) {
            object[] results = this.Invoke("enumHostGroups", new object[] {
                        flags});
            hostGroupInfoList = ((hostGroupInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumHostGroups(int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumHostGroups", new object[] {
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumHostGroups(System.IAsyncResult asyncResult, out hostGroupInfo[] hostGroupInfoList) {
            object[] results = this.EndInvoke(asyncResult);
            hostGroupInfoList = ((hostGroupInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumHostGroupsAsync(int flags) {
            this.enumHostGroupsAsync(flags, null);
        }
        
        /// <remarks/>
        public void enumHostGroupsAsync(int flags, object userState) {
            if ((this.enumHostGroupsOperationCompleted == null)) {
                this.enumHostGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumHostGroupsOperationCompleted);
            }
            this.InvokeAsync("enumHostGroups", new object[] {
                        flags}, this.enumHostGroupsOperationCompleted, userState);
        }
        
        private void OnenumHostGroupsOperationCompleted(object arg) {
            if ((this.enumHostGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumHostGroupsCompleted(this, new enumHostGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hostGroupInfo getHostGroupInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string groupName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostGroupUuid) {
            object[] results = this.Invoke("getHostGroupInfo", new object[] {
                        groupName,
                        hostGroupUuid});
            return ((hostGroupInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetHostGroupInfo(string groupName, string hostGroupUuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getHostGroupInfo", new object[] {
                        groupName,
                        hostGroupUuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public hostGroupInfo EndgetHostGroupInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((hostGroupInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getHostGroupInfoAsync(string groupName, string hostGroupUuid) {
            this.getHostGroupInfoAsync(groupName, hostGroupUuid, null);
        }
        
        /// <remarks/>
        public void getHostGroupInfoAsync(string groupName, string hostGroupUuid, object userState) {
            if ((this.getHostGroupInfoOperationCompleted == null)) {
                this.getHostGroupInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHostGroupInfoOperationCompleted);
            }
            this.InvokeAsync("getHostGroupInfo", new object[] {
                        groupName,
                        hostGroupUuid}, this.getHostGroupInfoOperationCompleted, userState);
        }
        
        private void OngetHostGroupInfoOperationCompleted(object arg) {
            if ((this.getHostGroupInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHostGroupInfoCompleted(this, new getHostGroupInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo addHost([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int hypervisorType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int licenseType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out hostInfo info) {
            object[] results = this.Invoke("addHost", new object[] {
                        hostName,
                        username,
                        password,
                        hypervisorType,
                        licenseType,
                        flags});
            info = ((hostInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddHost(string hostName, string username, string password, int hypervisorType, int licenseType, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addHost", new object[] {
                        hostName,
                        username,
                        password,
                        hypervisorType,
                        licenseType,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndaddHost(System.IAsyncResult asyncResult, out hostInfo info) {
            object[] results = this.EndInvoke(asyncResult);
            info = ((hostInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void addHostAsync(string hostName, string username, string password, int hypervisorType, int licenseType, int flags) {
            this.addHostAsync(hostName, username, password, hypervisorType, licenseType, flags, null);
        }
        
        /// <remarks/>
        public void addHostAsync(string hostName, string username, string password, int hypervisorType, int licenseType, int flags, object userState) {
            if ((this.addHostOperationCompleted == null)) {
                this.addHostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddHostOperationCompleted);
            }
            this.InvokeAsync("addHost", new object[] {
                        hostName,
                        username,
                        password,
                        hypervisorType,
                        licenseType,
                        flags}, this.addHostOperationCompleted, userState);
        }
        
        private void OnaddHostOperationCompleted(object arg) {
            if ((this.addHostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addHostCompleted(this, new addHostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo removeHost([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("removeHost", new object[] {
                        hostName,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveHost(string hostName, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeHost", new object[] {
                        hostName,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndremoveHost(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void removeHostAsync(string hostName, int flags) {
            this.removeHostAsync(hostName, flags, null);
        }
        
        /// <remarks/>
        public void removeHostAsync(string hostName, int flags, object userState) {
            if ((this.removeHostOperationCompleted == null)) {
                this.removeHostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveHostOperationCompleted);
            }
            this.InvokeAsync("removeHost", new object[] {
                        hostName,
                        flags}, this.removeHostOperationCompleted, userState);
        }
        
        private void OnremoveHostOperationCompleted(object arg) {
            if ((this.removeHostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeHostCompleted(this, new removeHostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumHosts([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("hostInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out hostInfo[] hostInfoList) {
            object[] results = this.Invoke("enumHosts", new object[] {
                        flags});
            hostInfoList = ((hostInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumHosts(int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumHosts", new object[] {
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumHosts(System.IAsyncResult asyncResult, out hostInfo[] hostInfoList) {
            object[] results = this.EndInvoke(asyncResult);
            hostInfoList = ((hostInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumHostsAsync(int flags) {
            this.enumHostsAsync(flags, null);
        }
        
        /// <remarks/>
        public void enumHostsAsync(int flags, object userState) {
            if ((this.enumHostsOperationCompleted == null)) {
                this.enumHostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumHostsOperationCompleted);
            }
            this.InvokeAsync("enumHosts", new object[] {
                        flags}, this.enumHostsOperationCompleted, userState);
        }
        
        private void OnenumHostsOperationCompleted(object arg) {
            if ((this.enumHostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumHostsCompleted(this, new enumHostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hostInfo getHostInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostname, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostUuid) {
            object[] results = this.Invoke("getHostInfo", new object[] {
                        hostname,
                        hostUuid});
            return ((hostInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetHostInfo(string hostname, string hostUuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getHostInfo", new object[] {
                        hostname,
                        hostUuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public hostInfo EndgetHostInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((hostInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getHostInfoAsync(string hostname, string hostUuid) {
            this.getHostInfoAsync(hostname, hostUuid, null);
        }
        
        /// <remarks/>
        public void getHostInfoAsync(string hostname, string hostUuid, object userState) {
            if ((this.getHostInfoOperationCompleted == null)) {
                this.getHostInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHostInfoOperationCompleted);
            }
            this.InvokeAsync("getHostInfo", new object[] {
                        hostname,
                        hostUuid}, this.getHostInfoOperationCompleted, userState);
        }
        
        private void OngetHostInfoOperationCompleted(object arg) {
            if ((this.getHostInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHostInfoCompleted(this, new getHostInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumVirtualMachines([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("vmInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out virtualMachineInfo[] vmInfoList) {
            object[] results = this.Invoke("enumVirtualMachines", new object[] {
                        hostName,
                        flags});
            vmInfoList = ((virtualMachineInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumVirtualMachines(string hostName, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumVirtualMachines", new object[] {
                        hostName,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumVirtualMachines(System.IAsyncResult asyncResult, out virtualMachineInfo[] vmInfoList) {
            object[] results = this.EndInvoke(asyncResult);
            vmInfoList = ((virtualMachineInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumVirtualMachinesAsync(string hostName, int flags) {
            this.enumVirtualMachinesAsync(hostName, flags, null);
        }
        
        /// <remarks/>
        public void enumVirtualMachinesAsync(string hostName, int flags, object userState) {
            if ((this.enumVirtualMachinesOperationCompleted == null)) {
                this.enumVirtualMachinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumVirtualMachinesOperationCompleted);
            }
            this.InvokeAsync("enumVirtualMachines", new object[] {
                        hostName,
                        flags}, this.enumVirtualMachinesOperationCompleted, userState);
        }
        
        private void OnenumVirtualMachinesOperationCompleted(object arg) {
            if ((this.enumVirtualMachinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumVirtualMachinesCompleted(this, new enumVirtualMachinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public virtualMachineInfo getVirtualMachineInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid) {
            object[] results = this.Invoke("getVirtualMachineInfo", new object[] {
                        hostUuid,
                        uuid});
            return ((virtualMachineInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetVirtualMachineInfo(string hostUuid, string uuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getVirtualMachineInfo", new object[] {
                        hostUuid,
                        uuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public virtualMachineInfo EndgetVirtualMachineInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((virtualMachineInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getVirtualMachineInfoAsync(string hostUuid, string uuid) {
            this.getVirtualMachineInfoAsync(hostUuid, uuid, null);
        }
        
        /// <remarks/>
        public void getVirtualMachineInfoAsync(string hostUuid, string uuid, object userState) {
            if ((this.getVirtualMachineInfoOperationCompleted == null)) {
                this.getVirtualMachineInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVirtualMachineInfoOperationCompleted);
            }
            this.InvokeAsync("getVirtualMachineInfo", new object[] {
                        hostUuid,
                        uuid}, this.getVirtualMachineInfoOperationCompleted, userState);
        }
        
        private void OngetVirtualMachineInfoOperationCompleted(object arg) {
            if ((this.getVirtualMachineInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVirtualMachineInfoCompleted(this, new getVirtualMachineInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumHostInitiators([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int hypervisorType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("initInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out hostInitiatorInfo[] initInfoList) {
            object[] results = this.Invoke("enumHostInitiators", new object[] {
                        hostName,
                        username,
                        password,
                        hypervisorType,
                        flags});
            initInfoList = ((hostInitiatorInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumHostInitiators(string hostName, string username, string password, int hypervisorType, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumHostInitiators", new object[] {
                        hostName,
                        username,
                        password,
                        hypervisorType,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumHostInitiators(System.IAsyncResult asyncResult, out hostInitiatorInfo[] initInfoList) {
            object[] results = this.EndInvoke(asyncResult);
            initInfoList = ((hostInitiatorInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumHostInitiatorsAsync(string hostName, string username, string password, int hypervisorType, int flags) {
            this.enumHostInitiatorsAsync(hostName, username, password, hypervisorType, flags, null);
        }
        
        /// <remarks/>
        public void enumHostInitiatorsAsync(string hostName, string username, string password, int hypervisorType, int flags, object userState) {
            if ((this.enumHostInitiatorsOperationCompleted == null)) {
                this.enumHostInitiatorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumHostInitiatorsOperationCompleted);
            }
            this.InvokeAsync("enumHostInitiators", new object[] {
                        hostName,
                        username,
                        password,
                        hypervisorType,
                        flags}, this.enumHostInitiatorsOperationCompleted, userState);
        }
        
        private void OnenumHostInitiatorsOperationCompleted(object arg) {
            if ((this.enumHostInitiatorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumHostInitiatorsCompleted(this, new enumHostInitiatorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("initInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hostInitiatorInfo addHostInitiator([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int type, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string tag, [System.Xml.Serialization.XmlElementAttribute("portIdList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] portIdList, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string chapUsername, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string chapPassword) {
            object[] results = this.Invoke("addHostInitiator", new object[] {
                        hostName,
                        type,
                        name,
                        tag,
                        portIdList,
                        chapUsername,
                        chapPassword});
            return ((hostInitiatorInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddHostInitiator(string hostName, int type, string name, string tag, string[] portIdList, string chapUsername, string chapPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addHostInitiator", new object[] {
                        hostName,
                        type,
                        name,
                        tag,
                        portIdList,
                        chapUsername,
                        chapPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public hostInitiatorInfo EndaddHostInitiator(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((hostInitiatorInfo)(results[0]));
        }
        
        /// <remarks/>
        public void addHostInitiatorAsync(string hostName, int type, string name, string tag, string[] portIdList, string chapUsername, string chapPassword) {
            this.addHostInitiatorAsync(hostName, type, name, tag, portIdList, chapUsername, chapPassword, null);
        }
        
        /// <remarks/>
        public void addHostInitiatorAsync(string hostName, int type, string name, string tag, string[] portIdList, string chapUsername, string chapPassword, object userState) {
            if ((this.addHostInitiatorOperationCompleted == null)) {
                this.addHostInitiatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddHostInitiatorOperationCompleted);
            }
            this.InvokeAsync("addHostInitiator", new object[] {
                        hostName,
                        type,
                        name,
                        tag,
                        portIdList,
                        chapUsername,
                        chapPassword}, this.addHostInitiatorOperationCompleted, userState);
        }
        
        private void OnaddHostInitiatorOperationCompleted(object arg) {
            if ((this.addHostInitiatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addHostInitiatorCompleted(this, new addHostInitiatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo removeHostInitiator([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("removeHostInitiator", new object[] {
                        hostName,
                        name,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveHostInitiator(string hostName, string name, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeHostInitiator", new object[] {
                        hostName,
                        name,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndremoveHostInitiator(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void removeHostInitiatorAsync(string hostName, string name, int flags) {
            this.removeHostInitiatorAsync(hostName, name, flags, null);
        }
        
        /// <remarks/>
        public void removeHostInitiatorAsync(string hostName, string name, int flags, object userState) {
            if ((this.removeHostInitiatorOperationCompleted == null)) {
                this.removeHostInitiatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveHostInitiatorOperationCompleted);
            }
            this.InvokeAsync("removeHostInitiator", new object[] {
                        hostName,
                        name,
                        flags}, this.removeHostInitiatorOperationCompleted, userState);
        }
        
        private void OnremoveHostInitiatorOperationCompleted(object arg) {
            if ((this.removeHostInitiatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeHostInitiatorCompleted(this, new removeHostInitiatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enableHostInitiator([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("enableHostInitiator", new object[] {
                        hostName,
                        name,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenableHostInitiator(string hostName, string name, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enableHostInitiator", new object[] {
                        hostName,
                        name,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenableHostInitiator(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enableHostInitiatorAsync(string hostName, string name, int flags) {
            this.enableHostInitiatorAsync(hostName, name, flags, null);
        }
        
        /// <remarks/>
        public void enableHostInitiatorAsync(string hostName, string name, int flags, object userState) {
            if ((this.enableHostInitiatorOperationCompleted == null)) {
                this.enableHostInitiatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenableHostInitiatorOperationCompleted);
            }
            this.InvokeAsync("enableHostInitiator", new object[] {
                        hostName,
                        name,
                        flags}, this.enableHostInitiatorOperationCompleted, userState);
        }
        
        private void OnenableHostInitiatorOperationCompleted(object arg) {
            if ((this.enableHostInitiatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enableHostInitiatorCompleted(this, new enableHostInitiatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo disableHostInitiator([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("disableHostInitiator", new object[] {
                        hostName,
                        name,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindisableHostInitiator(string hostName, string name, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("disableHostInitiator", new object[] {
                        hostName,
                        name,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddisableHostInitiator(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void disableHostInitiatorAsync(string hostName, string name, int flags) {
            this.disableHostInitiatorAsync(hostName, name, flags, null);
        }
        
        /// <remarks/>
        public void disableHostInitiatorAsync(string hostName, string name, int flags, object userState) {
            if ((this.disableHostInitiatorOperationCompleted == null)) {
                this.disableHostInitiatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisableHostInitiatorOperationCompleted);
            }
            this.InvokeAsync("disableHostInitiator", new object[] {
                        hostName,
                        name,
                        flags}, this.disableHostInitiatorOperationCompleted, userState);
        }
        
        private void OndisableHostInitiatorOperationCompleted(object arg) {
            if ((this.disableHostInitiatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disableHostInitiatorCompleted(this, new disableHostInitiatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("networkInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hostNetworkInfo[] enumHostNetworks([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int hypervisorType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("enumHostNetworks", new object[] {
                        hostName,
                        username,
                        password,
                        hypervisorType,
                        flags});
            return ((hostNetworkInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumHostNetworks(string hostName, string username, string password, int hypervisorType, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumHostNetworks", new object[] {
                        hostName,
                        username,
                        password,
                        hypervisorType,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public hostNetworkInfo[] EndenumHostNetworks(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((hostNetworkInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void enumHostNetworksAsync(string hostName, string username, string password, int hypervisorType, int flags) {
            this.enumHostNetworksAsync(hostName, username, password, hypervisorType, flags, null);
        }
        
        /// <remarks/>
        public void enumHostNetworksAsync(string hostName, string username, string password, int hypervisorType, int flags, object userState) {
            if ((this.enumHostNetworksOperationCompleted == null)) {
                this.enumHostNetworksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumHostNetworksOperationCompleted);
            }
            this.InvokeAsync("enumHostNetworks", new object[] {
                        hostName,
                        username,
                        password,
                        hypervisorType,
                        flags}, this.enumHostNetworksOperationCompleted, userState);
        }
        
        private void OnenumHostNetworksOperationCompleted(object arg) {
            if ((this.enumHostNetworksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumHostNetworksCompleted(this, new enumHostNetworksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("diskDriveScsiIdList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public diskDriveScsiIdInfo[] enumHostDeviceID([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int hypervisorType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("enumHostDeviceID", new object[] {
                        hostName,
                        username,
                        password,
                        hypervisorType,
                        flags});
            return ((diskDriveScsiIdInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumHostDeviceID(string hostName, string username, string password, int hypervisorType, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumHostDeviceID", new object[] {
                        hostName,
                        username,
                        password,
                        hypervisorType,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public diskDriveScsiIdInfo[] EndenumHostDeviceID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((diskDriveScsiIdInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void enumHostDeviceIDAsync(string hostName, string username, string password, int hypervisorType, int flags) {
            this.enumHostDeviceIDAsync(hostName, username, password, hypervisorType, flags, null);
        }
        
        /// <remarks/>
        public void enumHostDeviceIDAsync(string hostName, string username, string password, int hypervisorType, int flags, object userState) {
            if ((this.enumHostDeviceIDOperationCompleted == null)) {
                this.enumHostDeviceIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumHostDeviceIDOperationCompleted);
            }
            this.InvokeAsync("enumHostDeviceID", new object[] {
                        hostName,
                        username,
                        password,
                        hypervisorType,
                        flags}, this.enumHostDeviceIDOperationCompleted, userState);
        }
        
        private void OnenumHostDeviceIDOperationCompleted(object arg) {
            if ((this.enumHostDeviceIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumHostDeviceIDCompleted(this, new enumHostDeviceIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteStorageManifest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string manifestUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            this.Invoke("deleteStorageManifest", new object[] {
                        manifestUuid,
                        flags});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteStorageManifest(string manifestUuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteStorageManifest", new object[] {
                        manifestUuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeleteStorageManifest(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void deleteStorageManifestAsync(string manifestUuid, int flags) {
            this.deleteStorageManifestAsync(manifestUuid, flags, null);
        }
        
        /// <remarks/>
        public void deleteStorageManifestAsync(string manifestUuid, int flags, object userState) {
            if ((this.deleteStorageManifestOperationCompleted == null)) {
                this.deleteStorageManifestOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteStorageManifestOperationCompleted);
            }
            this.InvokeAsync("deleteStorageManifest", new object[] {
                        manifestUuid,
                        flags}, this.deleteStorageManifestOperationCompleted, userState);
        }
        
        private void OndeleteStorageManifestOperationCompleted(object arg) {
            if ((this.deleteStorageManifestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteStorageManifestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageManifestInfo createStorageManifest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("createStorageManifest", new object[] {
                        friendlyName,
                        description,
                        flags});
            return ((storageManifestInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateStorageManifest(string friendlyName, string description, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createStorageManifest", new object[] {
                        friendlyName,
                        description,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public storageManifestInfo EndcreateStorageManifest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storageManifestInfo)(results[0]));
        }
        
        /// <remarks/>
        public void createStorageManifestAsync(string friendlyName, string description, int flags) {
            this.createStorageManifestAsync(friendlyName, description, flags, null);
        }
        
        /// <remarks/>
        public void createStorageManifestAsync(string friendlyName, string description, int flags, object userState) {
            if ((this.createStorageManifestOperationCompleted == null)) {
                this.createStorageManifestOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateStorageManifestOperationCompleted);
            }
            this.InvokeAsync("createStorageManifest", new object[] {
                        friendlyName,
                        description,
                        flags}, this.createStorageManifestOperationCompleted, userState);
        }
        
        private void OncreateStorageManifestOperationCompleted(object arg) {
            if ((this.createStorageManifestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createStorageManifestCompleted(this, new createStorageManifestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageManifestInfo modifyStorageManifest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string manifestUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint flags) {
            object[] results = this.Invoke("modifyStorageManifest", new object[] {
                        manifestUuid,
                        friendlyName,
                        description,
                        flags});
            return ((storageManifestInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmodifyStorageManifest(string manifestUuid, string friendlyName, string description, uint flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("modifyStorageManifest", new object[] {
                        manifestUuid,
                        friendlyName,
                        description,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public storageManifestInfo EndmodifyStorageManifest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storageManifestInfo)(results[0]));
        }
        
        /// <remarks/>
        public void modifyStorageManifestAsync(string manifestUuid, string friendlyName, string description, uint flags) {
            this.modifyStorageManifestAsync(manifestUuid, friendlyName, description, flags, null);
        }
        
        /// <remarks/>
        public void modifyStorageManifestAsync(string manifestUuid, string friendlyName, string description, uint flags, object userState) {
            if ((this.modifyStorageManifestOperationCompleted == null)) {
                this.modifyStorageManifestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyStorageManifestOperationCompleted);
            }
            this.InvokeAsync("modifyStorageManifest", new object[] {
                        manifestUuid,
                        friendlyName,
                        description,
                        flags}, this.modifyStorageManifestOperationCompleted, userState);
        }
        
        private void OnmodifyStorageManifestOperationCompleted(object arg) {
            if ((this.modifyStorageManifestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyStorageManifestCompleted(this, new modifyStorageManifestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageManifestInfo[] enumStorageManifests() {
            object[] results = this.Invoke("enumStorageManifests", new object[0]);
            return ((storageManifestInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumStorageManifests(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumStorageManifests", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public storageManifestInfo[] EndenumStorageManifests(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storageManifestInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void enumStorageManifestsAsync() {
            this.enumStorageManifestsAsync(null);
        }
        
        /// <remarks/>
        public void enumStorageManifestsAsync(object userState) {
            if ((this.enumStorageManifestsOperationCompleted == null)) {
                this.enumStorageManifestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumStorageManifestsOperationCompleted);
            }
            this.InvokeAsync("enumStorageManifests", new object[0], this.enumStorageManifestsOperationCompleted, userState);
        }
        
        private void OnenumStorageManifestsOperationCompleted(object arg) {
            if ((this.enumStorageManifestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumStorageManifestsCompleted(this, new enumStorageManifestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageManifestInfo getStorageManifestInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid) {
            object[] results = this.Invoke("getStorageManifestInfo", new object[] {
                        friendlyName,
                        uuid});
            return ((storageManifestInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetStorageManifestInfo(string friendlyName, string uuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getStorageManifestInfo", new object[] {
                        friendlyName,
                        uuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public storageManifestInfo EndgetStorageManifestInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storageManifestInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getStorageManifestInfoAsync(string friendlyName, string uuid) {
            this.getStorageManifestInfoAsync(friendlyName, uuid, null);
        }
        
        /// <remarks/>
        public void getStorageManifestInfoAsync(string friendlyName, string uuid, object userState) {
            if ((this.getStorageManifestInfoOperationCompleted == null)) {
                this.getStorageManifestInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStorageManifestInfoOperationCompleted);
            }
            this.InvokeAsync("getStorageManifestInfo", new object[] {
                        friendlyName,
                        uuid}, this.getStorageManifestInfoOperationCompleted, userState);
        }
        
        private void OngetStorageManifestInfoOperationCompleted(object arg) {
            if ((this.getStorageManifestInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStorageManifestInfoCompleted(this, new getStorageManifestInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageManifestInfo addProvisionToManifest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string manifestUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string repositoryUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool isBootDevice, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint sizeInMB, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string virtualDeviceFilePath, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint fsType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint flags) {
            object[] results = this.Invoke("addProvisionToManifest", new object[] {
                        manifestUuid,
                        repositoryUuid,
                        isBootDevice,
                        friendlyName,
                        sizeInMB,
                        virtualDeviceFilePath,
                        fsType,
                        description,
                        flags});
            return ((storageManifestInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddProvisionToManifest(string manifestUuid, string repositoryUuid, bool isBootDevice, string friendlyName, uint sizeInMB, string virtualDeviceFilePath, uint fsType, string description, uint flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addProvisionToManifest", new object[] {
                        manifestUuid,
                        repositoryUuid,
                        isBootDevice,
                        friendlyName,
                        sizeInMB,
                        virtualDeviceFilePath,
                        fsType,
                        description,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public storageManifestInfo EndaddProvisionToManifest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storageManifestInfo)(results[0]));
        }
        
        /// <remarks/>
        public void addProvisionToManifestAsync(string manifestUuid, string repositoryUuid, bool isBootDevice, string friendlyName, uint sizeInMB, string virtualDeviceFilePath, uint fsType, string description, uint flags) {
            this.addProvisionToManifestAsync(manifestUuid, repositoryUuid, isBootDevice, friendlyName, sizeInMB, virtualDeviceFilePath, fsType, description, flags, null);
        }
        
        /// <remarks/>
        public void addProvisionToManifestAsync(string manifestUuid, string repositoryUuid, bool isBootDevice, string friendlyName, uint sizeInMB, string virtualDeviceFilePath, uint fsType, string description, uint flags, object userState) {
            if ((this.addProvisionToManifestOperationCompleted == null)) {
                this.addProvisionToManifestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProvisionToManifestOperationCompleted);
            }
            this.InvokeAsync("addProvisionToManifest", new object[] {
                        manifestUuid,
                        repositoryUuid,
                        isBootDevice,
                        friendlyName,
                        sizeInMB,
                        virtualDeviceFilePath,
                        fsType,
                        description,
                        flags}, this.addProvisionToManifestOperationCompleted, userState);
        }
        
        private void OnaddProvisionToManifestOperationCompleted(object arg) {
            if ((this.addProvisionToManifestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProvisionToManifestCompleted(this, new addProvisionToManifestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageManifestInfo removeProvisionFromManifest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string manifestUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string provisionUuid) {
            object[] results = this.Invoke("removeProvisionFromManifest", new object[] {
                        manifestUuid,
                        provisionUuid});
            return ((storageManifestInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveProvisionFromManifest(string manifestUuid, string provisionUuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeProvisionFromManifest", new object[] {
                        manifestUuid,
                        provisionUuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public storageManifestInfo EndremoveProvisionFromManifest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storageManifestInfo)(results[0]));
        }
        
        /// <remarks/>
        public void removeProvisionFromManifestAsync(string manifestUuid, string provisionUuid) {
            this.removeProvisionFromManifestAsync(manifestUuid, provisionUuid, null);
        }
        
        /// <remarks/>
        public void removeProvisionFromManifestAsync(string manifestUuid, string provisionUuid, object userState) {
            if ((this.removeProvisionFromManifestOperationCompleted == null)) {
                this.removeProvisionFromManifestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveProvisionFromManifestOperationCompleted);
            }
            this.InvokeAsync("removeProvisionFromManifest", new object[] {
                        manifestUuid,
                        provisionUuid}, this.removeProvisionFromManifestOperationCompleted, userState);
        }
        
        private void OnremoveProvisionFromManifestOperationCompleted(object arg) {
            if ((this.removeProvisionFromManifestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeProvisionFromManifestCompleted(this, new removeProvisionFromManifestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo allocateStorage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storagePoolId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint sizeInMB, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string groupName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint raidType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint provisioningType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint provisioningOptions, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint options, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageRepositoryUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storageVolumeInfo storageVolumeInfo) {
            object[] results = this.Invoke("allocateStorage", new object[] {
                        storageSystemId,
                        storagePoolId,
                        name,
                        sizeInMB,
                        groupName,
                        raidType,
                        provisioningType,
                        provisioningOptions,
                        options,
                        storageRepositoryUuid,
                        flags});
            storageVolumeInfo = ((storageVolumeInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginallocateStorage(string storageSystemId, string storagePoolId, string name, uint sizeInMB, string groupName, uint raidType, uint provisioningType, uint provisioningOptions, uint options, string storageRepositoryUuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("allocateStorage", new object[] {
                        storageSystemId,
                        storagePoolId,
                        name,
                        sizeInMB,
                        groupName,
                        raidType,
                        provisioningType,
                        provisioningOptions,
                        options,
                        storageRepositoryUuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndallocateStorage(System.IAsyncResult asyncResult, out storageVolumeInfo storageVolumeInfo) {
            object[] results = this.EndInvoke(asyncResult);
            storageVolumeInfo = ((storageVolumeInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void allocateStorageAsync(string storageSystemId, string storagePoolId, string name, uint sizeInMB, string groupName, uint raidType, uint provisioningType, uint provisioningOptions, uint options, string storageRepositoryUuid, int flags) {
            this.allocateStorageAsync(storageSystemId, storagePoolId, name, sizeInMB, groupName, raidType, provisioningType, provisioningOptions, options, storageRepositoryUuid, flags, null);
        }
        
        /// <remarks/>
        public void allocateStorageAsync(string storageSystemId, string storagePoolId, string name, uint sizeInMB, string groupName, uint raidType, uint provisioningType, uint provisioningOptions, uint options, string storageRepositoryUuid, int flags, object userState) {
            if ((this.allocateStorageOperationCompleted == null)) {
                this.allocateStorageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnallocateStorageOperationCompleted);
            }
            this.InvokeAsync("allocateStorage", new object[] {
                        storageSystemId,
                        storagePoolId,
                        name,
                        sizeInMB,
                        groupName,
                        raidType,
                        provisioningType,
                        provisioningOptions,
                        options,
                        storageRepositoryUuid,
                        flags}, this.allocateStorageOperationCompleted, userState);
        }
        
        private void OnallocateStorageOperationCompleted(object arg) {
            if ((this.allocateStorageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.allocateStorageCompleted(this, new allocateStorageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo deleteStorage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageVolumeId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("deleteStorage", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteStorage(string storageSystemId, string storageVolumeId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteStorage", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddeleteStorage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void deleteStorageAsync(string storageSystemId, string storageVolumeId, int flags) {
            this.deleteStorageAsync(storageSystemId, storageVolumeId, flags, null);
        }
        
        /// <remarks/>
        public void deleteStorageAsync(string storageSystemId, string storageVolumeId, int flags, object userState) {
            if ((this.deleteStorageOperationCompleted == null)) {
                this.deleteStorageOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteStorageOperationCompleted);
            }
            this.InvokeAsync("deleteStorage", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        flags}, this.deleteStorageOperationCompleted, userState);
        }
        
        private void OndeleteStorageOperationCompleted(object arg) {
            if ((this.deleteStorageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteStorageCompleted(this, new deleteStorageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo resizeStorage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageVolumeId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint newSizeInMb, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storageVolumeInfo storageVolumeInfo) {
            object[] results = this.Invoke("resizeStorage", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        newSizeInMb,
                        flags});
            storageVolumeInfo = ((storageVolumeInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginresizeStorage(string storageSystemId, string storageVolumeId, uint newSizeInMb, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("resizeStorage", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        newSizeInMb,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndresizeStorage(System.IAsyncResult asyncResult, out storageVolumeInfo storageVolumeInfo) {
            object[] results = this.EndInvoke(asyncResult);
            storageVolumeInfo = ((storageVolumeInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void resizeStorageAsync(string storageSystemId, string storageVolumeId, uint newSizeInMb, int flags) {
            this.resizeStorageAsync(storageSystemId, storageVolumeId, newSizeInMb, flags, null);
        }
        
        /// <remarks/>
        public void resizeStorageAsync(string storageSystemId, string storageVolumeId, uint newSizeInMb, int flags, object userState) {
            if ((this.resizeStorageOperationCompleted == null)) {
                this.resizeStorageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresizeStorageOperationCompleted);
            }
            this.InvokeAsync("resizeStorage", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        newSizeInMb,
                        flags}, this.resizeStorageOperationCompleted, userState);
        }
        
        private void OnresizeStorageOperationCompleted(object arg) {
            if ((this.resizeStorageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resizeStorageCompleted(this, new resizeStorageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo assignStorage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageVolumeId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostName, [System.Xml.Serialization.XmlElementAttribute("initiatorList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] initiatorList, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint osType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint protocolType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string viewId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string viewFriendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("saInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storageAssignmentInfo[] saInfoList) {
            object[] results = this.Invoke("assignStorage", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        hostName,
                        initiatorList,
                        osType,
                        protocolType,
                        username,
                        password,
                        viewId,
                        viewFriendlyName,
                        flags});
            saInfoList = ((storageAssignmentInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginassignStorage(string storageSystemId, string storageVolumeId, string hostName, string[] initiatorList, uint osType, uint protocolType, string username, string password, string viewId, string viewFriendlyName, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("assignStorage", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        hostName,
                        initiatorList,
                        osType,
                        protocolType,
                        username,
                        password,
                        viewId,
                        viewFriendlyName,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndassignStorage(System.IAsyncResult asyncResult, out storageAssignmentInfo[] saInfoList) {
            object[] results = this.EndInvoke(asyncResult);
            saInfoList = ((storageAssignmentInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void assignStorageAsync(string storageSystemId, string storageVolumeId, string hostName, string[] initiatorList, uint osType, uint protocolType, string username, string password, string viewId, string viewFriendlyName, int flags) {
            this.assignStorageAsync(storageSystemId, storageVolumeId, hostName, initiatorList, osType, protocolType, username, password, viewId, viewFriendlyName, flags, null);
        }
        
        /// <remarks/>
        public void assignStorageAsync(string storageSystemId, string storageVolumeId, string hostName, string[] initiatorList, uint osType, uint protocolType, string username, string password, string viewId, string viewFriendlyName, int flags, object userState) {
            if ((this.assignStorageOperationCompleted == null)) {
                this.assignStorageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassignStorageOperationCompleted);
            }
            this.InvokeAsync("assignStorage", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        hostName,
                        initiatorList,
                        osType,
                        protocolType,
                        username,
                        password,
                        viewId,
                        viewFriendlyName,
                        flags}, this.assignStorageOperationCompleted, userState);
        }
        
        private void OnassignStorageOperationCompleted(object arg) {
            if ((this.assignStorageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assignStorageCompleted(this, new assignStorageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo unassignStorage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageVolumeId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostName, [System.Xml.Serialization.XmlElementAttribute("initiatorList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] initiatorList, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string viewId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint protocolType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("saInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storageAssignmentInfo[] saInfoList) {
            object[] results = this.Invoke("unassignStorage", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        hostName,
                        initiatorList,
                        viewId,
                        protocolType,
                        flags});
            saInfoList = ((storageAssignmentInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginunassignStorage(string storageSystemId, string storageVolumeId, string hostName, string[] initiatorList, string viewId, uint protocolType, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("unassignStorage", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        hostName,
                        initiatorList,
                        viewId,
                        protocolType,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndunassignStorage(System.IAsyncResult asyncResult, out storageAssignmentInfo[] saInfoList) {
            object[] results = this.EndInvoke(asyncResult);
            saInfoList = ((storageAssignmentInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void unassignStorageAsync(string storageSystemId, string storageVolumeId, string hostName, string[] initiatorList, string viewId, uint protocolType, int flags) {
            this.unassignStorageAsync(storageSystemId, storageVolumeId, hostName, initiatorList, viewId, protocolType, flags, null);
        }
        
        /// <remarks/>
        public void unassignStorageAsync(string storageSystemId, string storageVolumeId, string hostName, string[] initiatorList, string viewId, uint protocolType, int flags, object userState) {
            if ((this.unassignStorageOperationCompleted == null)) {
                this.unassignStorageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunassignStorageOperationCompleted);
            }
            this.InvokeAsync("unassignStorage", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        hostName,
                        initiatorList,
                        viewId,
                        protocolType,
                        flags}, this.unassignStorageOperationCompleted, userState);
        }
        
        private void OnunassignStorageOperationCompleted(object arg) {
            if ((this.unassignStorageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unassignStorageCompleted(this, new unassignStorageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo mountStorage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageVolumeId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string mountPoint) {
            object[] results = this.Invoke("mountStorage", new object[] {
                        hostName,
                        storageSystemId,
                        storageVolumeId,
                        mountPoint});
            mountPoint = ((string)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmountStorage(string hostName, string storageSystemId, string storageVolumeId, string mountPoint, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("mountStorage", new object[] {
                        hostName,
                        storageSystemId,
                        storageVolumeId,
                        mountPoint}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndmountStorage(System.IAsyncResult asyncResult, out string mountPoint) {
            object[] results = this.EndInvoke(asyncResult);
            mountPoint = ((string)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void mountStorageAsync(string hostName, string storageSystemId, string storageVolumeId, string mountPoint) {
            this.mountStorageAsync(hostName, storageSystemId, storageVolumeId, mountPoint, null);
        }
        
        /// <remarks/>
        public void mountStorageAsync(string hostName, string storageSystemId, string storageVolumeId, string mountPoint, object userState) {
            if ((this.mountStorageOperationCompleted == null)) {
                this.mountStorageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmountStorageOperationCompleted);
            }
            this.InvokeAsync("mountStorage", new object[] {
                        hostName,
                        storageSystemId,
                        storageVolumeId,
                        mountPoint}, this.mountStorageOperationCompleted, userState);
        }
        
        private void OnmountStorageOperationCompleted(object arg) {
            if ((this.mountStorageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mountStorageCompleted(this, new mountStorageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo unmountStorage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageVolumeId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string mountPoint) {
            object[] results = this.Invoke("unmountStorage", new object[] {
                        hostName,
                        storageSystemId,
                        storageVolumeId,
                        mountPoint});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginunmountStorage(string hostName, string storageSystemId, string storageVolumeId, string mountPoint, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("unmountStorage", new object[] {
                        hostName,
                        storageSystemId,
                        storageVolumeId,
                        mountPoint}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndunmountStorage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void unmountStorageAsync(string hostName, string storageSystemId, string storageVolumeId, string mountPoint) {
            this.unmountStorageAsync(hostName, storageSystemId, storageVolumeId, mountPoint, null);
        }
        
        /// <remarks/>
        public void unmountStorageAsync(string hostName, string storageSystemId, string storageVolumeId, string mountPoint, object userState) {
            if ((this.unmountStorageOperationCompleted == null)) {
                this.unmountStorageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunmountStorageOperationCompleted);
            }
            this.InvokeAsync("unmountStorage", new object[] {
                        hostName,
                        storageSystemId,
                        storageVolumeId,
                        mountPoint}, this.unmountStorageOperationCompleted, userState);
        }
        
        private void OnunmountStorageOperationCompleted(object arg) {
            if ((this.unmountStorageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unmountStorageCompleted(this, new unmountStorageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("session", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public snapshotSessionInfo snapshotSetup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int snapshotOperation, [System.Xml.Serialization.XmlElementAttribute("sourceVolumeIdList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] sourceVolumeIdList, [System.Xml.Serialization.XmlElementAttribute("targetVolumeIdList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] targetVolumeIdList, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sourceStorageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string targetPoolId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string targetStorageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint snapshotType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint provisioningType) {
            object[] results = this.Invoke("snapshotSetup", new object[] {
                        snapshotOperation,
                        sourceVolumeIdList,
                        targetVolumeIdList,
                        sourceStorageSystemId,
                        targetPoolId,
                        targetStorageSystemId,
                        snapshotType,
                        provisioningType});
            return ((snapshotSessionInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsnapshotSetup(int snapshotOperation, string[] sourceVolumeIdList, string[] targetVolumeIdList, string sourceStorageSystemId, string targetPoolId, string targetStorageSystemId, uint snapshotType, uint provisioningType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("snapshotSetup", new object[] {
                        snapshotOperation,
                        sourceVolumeIdList,
                        targetVolumeIdList,
                        sourceStorageSystemId,
                        targetPoolId,
                        targetStorageSystemId,
                        snapshotType,
                        provisioningType}, callback, asyncState);
        }
        
        /// <remarks/>
        public snapshotSessionInfo EndsnapshotSetup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((snapshotSessionInfo)(results[0]));
        }
        
        /// <remarks/>
        public void snapshotSetupAsync(int snapshotOperation, string[] sourceVolumeIdList, string[] targetVolumeIdList, string sourceStorageSystemId, string targetPoolId, string targetStorageSystemId, uint snapshotType, uint provisioningType) {
            this.snapshotSetupAsync(snapshotOperation, sourceVolumeIdList, targetVolumeIdList, sourceStorageSystemId, targetPoolId, targetStorageSystemId, snapshotType, provisioningType, null);
        }
        
        /// <remarks/>
        public void snapshotSetupAsync(int snapshotOperation, string[] sourceVolumeIdList, string[] targetVolumeIdList, string sourceStorageSystemId, string targetPoolId, string targetStorageSystemId, uint snapshotType, uint provisioningType, object userState) {
            if ((this.snapshotSetupOperationCompleted == null)) {
                this.snapshotSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsnapshotSetupOperationCompleted);
            }
            this.InvokeAsync("snapshotSetup", new object[] {
                        snapshotOperation,
                        sourceVolumeIdList,
                        targetVolumeIdList,
                        sourceStorageSystemId,
                        targetPoolId,
                        targetStorageSystemId,
                        snapshotType,
                        provisioningType}, this.snapshotSetupOperationCompleted, userState);
        }
        
        private void OnsnapshotSetupOperationCompleted(object arg) {
            if ((this.snapshotSetupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.snapshotSetupCompleted(this, new snapshotSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo snapshotPrepare([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out snapshotSessionInfo session) {
            object[] results = this.Invoke("snapshotPrepare", new object[] {
                        sessionId,
                        flags});
            session = ((snapshotSessionInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsnapshotPrepare(string sessionId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("snapshotPrepare", new object[] {
                        sessionId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndsnapshotPrepare(System.IAsyncResult asyncResult, out snapshotSessionInfo session) {
            object[] results = this.EndInvoke(asyncResult);
            session = ((snapshotSessionInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void snapshotPrepareAsync(string sessionId, int flags) {
            this.snapshotPrepareAsync(sessionId, flags, null);
        }
        
        /// <remarks/>
        public void snapshotPrepareAsync(string sessionId, int flags, object userState) {
            if ((this.snapshotPrepareOperationCompleted == null)) {
                this.snapshotPrepareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsnapshotPrepareOperationCompleted);
            }
            this.InvokeAsync("snapshotPrepare", new object[] {
                        sessionId,
                        flags}, this.snapshotPrepareOperationCompleted, userState);
        }
        
        private void OnsnapshotPrepareOperationCompleted(object arg) {
            if ((this.snapshotPrepareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.snapshotPrepareCompleted(this, new snapshotPrepareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo snapshotCreate([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out snapshotSessionInfo session) {
            object[] results = this.Invoke("snapshotCreate", new object[] {
                        sessionId,
                        flags});
            session = ((snapshotSessionInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsnapshotCreate(string sessionId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("snapshotCreate", new object[] {
                        sessionId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndsnapshotCreate(System.IAsyncResult asyncResult, out snapshotSessionInfo session) {
            object[] results = this.EndInvoke(asyncResult);
            session = ((snapshotSessionInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void snapshotCreateAsync(string sessionId, int flags) {
            this.snapshotCreateAsync(sessionId, flags, null);
        }
        
        /// <remarks/>
        public void snapshotCreateAsync(string sessionId, int flags, object userState) {
            if ((this.snapshotCreateOperationCompleted == null)) {
                this.snapshotCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsnapshotCreateOperationCompleted);
            }
            this.InvokeAsync("snapshotCreate", new object[] {
                        sessionId,
                        flags}, this.snapshotCreateOperationCompleted, userState);
        }
        
        private void OnsnapshotCreateOperationCompleted(object arg) {
            if ((this.snapshotCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.snapshotCreateCompleted(this, new snapshotCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo snapshotUpdateStatus([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out snapshotSessionInfo session) {
            object[] results = this.Invoke("snapshotUpdateStatus", new object[] {
                        sessionId,
                        flags});
            session = ((snapshotSessionInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsnapshotUpdateStatus(string sessionId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("snapshotUpdateStatus", new object[] {
                        sessionId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndsnapshotUpdateStatus(System.IAsyncResult asyncResult, out snapshotSessionInfo session) {
            object[] results = this.EndInvoke(asyncResult);
            session = ((snapshotSessionInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void snapshotUpdateStatusAsync(string sessionId, int flags) {
            this.snapshotUpdateStatusAsync(sessionId, flags, null);
        }
        
        /// <remarks/>
        public void snapshotUpdateStatusAsync(string sessionId, int flags, object userState) {
            if ((this.snapshotUpdateStatusOperationCompleted == null)) {
                this.snapshotUpdateStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsnapshotUpdateStatusOperationCompleted);
            }
            this.InvokeAsync("snapshotUpdateStatus", new object[] {
                        sessionId,
                        flags}, this.snapshotUpdateStatusOperationCompleted, userState);
        }
        
        private void OnsnapshotUpdateStatusOperationCompleted(object arg) {
            if ((this.snapshotUpdateStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.snapshotUpdateStatusCompleted(this, new snapshotUpdateStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo snapshotRestore([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out snapshotSessionInfo session) {
            object[] results = this.Invoke("snapshotRestore", new object[] {
                        sessionId,
                        flags});
            session = ((snapshotSessionInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsnapshotRestore(string sessionId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("snapshotRestore", new object[] {
                        sessionId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndsnapshotRestore(System.IAsyncResult asyncResult, out snapshotSessionInfo session) {
            object[] results = this.EndInvoke(asyncResult);
            session = ((snapshotSessionInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void snapshotRestoreAsync(string sessionId, int flags) {
            this.snapshotRestoreAsync(sessionId, flags, null);
        }
        
        /// <remarks/>
        public void snapshotRestoreAsync(string sessionId, int flags, object userState) {
            if ((this.snapshotRestoreOperationCompleted == null)) {
                this.snapshotRestoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsnapshotRestoreOperationCompleted);
            }
            this.InvokeAsync("snapshotRestore", new object[] {
                        sessionId,
                        flags}, this.snapshotRestoreOperationCompleted, userState);
        }
        
        private void OnsnapshotRestoreOperationCompleted(object arg) {
            if ((this.snapshotRestoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.snapshotRestoreCompleted(this, new snapshotRestoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo snapshotDelete([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out snapshotSessionInfo session) {
            object[] results = this.Invoke("snapshotDelete", new object[] {
                        sessionId,
                        flags});
            session = ((snapshotSessionInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsnapshotDelete(string sessionId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("snapshotDelete", new object[] {
                        sessionId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndsnapshotDelete(System.IAsyncResult asyncResult, out snapshotSessionInfo session) {
            object[] results = this.EndInvoke(asyncResult);
            session = ((snapshotSessionInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void snapshotDeleteAsync(string sessionId, int flags) {
            this.snapshotDeleteAsync(sessionId, flags, null);
        }
        
        /// <remarks/>
        public void snapshotDeleteAsync(string sessionId, int flags, object userState) {
            if ((this.snapshotDeleteOperationCompleted == null)) {
                this.snapshotDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsnapshotDeleteOperationCompleted);
            }
            this.InvokeAsync("snapshotDelete", new object[] {
                        sessionId,
                        flags}, this.snapshotDeleteOperationCompleted, userState);
        }
        
        private void OnsnapshotDeleteOperationCompleted(object arg) {
            if ((this.snapshotDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.snapshotDeleteCompleted(this, new snapshotDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageAdapterInfo[] enumStorageAdapters() {
            object[] results = this.Invoke("enumStorageAdapters", new object[0]);
            return ((storageAdapterInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumStorageAdapters(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumStorageAdapters", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public storageAdapterInfo[] EndenumStorageAdapters(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storageAdapterInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void enumStorageAdaptersAsync() {
            this.enumStorageAdaptersAsync(null);
        }
        
        /// <remarks/>
        public void enumStorageAdaptersAsync(object userState) {
            if ((this.enumStorageAdaptersOperationCompleted == null)) {
                this.enumStorageAdaptersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumStorageAdaptersOperationCompleted);
            }
            this.InvokeAsync("enumStorageAdapters", new object[0], this.enumStorageAdaptersOperationCompleted, userState);
        }
        
        private void OnenumStorageAdaptersOperationCompleted(object arg) {
            if ((this.enumStorageAdaptersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumStorageAdaptersCompleted(this, new enumStorageAdaptersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnArgs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public keyValuePair[] customMethod([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageAdapterId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string methodName, [System.Xml.Serialization.XmlElementAttribute("args", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] keyValuePair[] args) {
            object[] results = this.Invoke("customMethod", new object[] {
                        storageAdapterId,
                        storageSystemId,
                        methodName,
                        args});
            return ((keyValuePair[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomMethod(string storageAdapterId, string storageSystemId, string methodName, keyValuePair[] args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("customMethod", new object[] {
                        storageAdapterId,
                        storageSystemId,
                        methodName,
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public keyValuePair[] EndcustomMethod(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((keyValuePair[])(results[0]));
        }
        
        /// <remarks/>
        public void customMethodAsync(string storageAdapterId, string storageSystemId, string methodName, keyValuePair[] args) {
            this.customMethodAsync(storageAdapterId, storageSystemId, methodName, args, null);
        }
        
        /// <remarks/>
        public void customMethodAsync(string storageAdapterId, string storageSystemId, string methodName, keyValuePair[] args, object userState) {
            if ((this.customMethodOperationCompleted == null)) {
                this.customMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OncustomMethodOperationCompleted);
            }
            this.InvokeAsync("customMethod", new object[] {
                        storageAdapterId,
                        storageSystemId,
                        methodName,
                        args}, this.customMethodOperationCompleted, userState);
        }
        
        private void OncustomMethodOperationCompleted(object arg) {
            if ((this.customMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.customMethodCompleted(this, new customMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageAdapterInfo addRemoteStorageAdapter([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ipAddress, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int portNumber) {
            object[] results = this.Invoke("addRemoteStorageAdapter", new object[] {
                        friendlyName,
                        ipAddress,
                        username,
                        password,
                        portNumber});
            return ((storageAdapterInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddRemoteStorageAdapter(string friendlyName, string ipAddress, string username, string password, int portNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addRemoteStorageAdapter", new object[] {
                        friendlyName,
                        ipAddress,
                        username,
                        password,
                        portNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public storageAdapterInfo EndaddRemoteStorageAdapter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storageAdapterInfo)(results[0]));
        }
        
        /// <remarks/>
        public void addRemoteStorageAdapterAsync(string friendlyName, string ipAddress, string username, string password, int portNumber) {
            this.addRemoteStorageAdapterAsync(friendlyName, ipAddress, username, password, portNumber, null);
        }
        
        /// <remarks/>
        public void addRemoteStorageAdapterAsync(string friendlyName, string ipAddress, string username, string password, int portNumber, object userState) {
            if ((this.addRemoteStorageAdapterOperationCompleted == null)) {
                this.addRemoteStorageAdapterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddRemoteStorageAdapterOperationCompleted);
            }
            this.InvokeAsync("addRemoteStorageAdapter", new object[] {
                        friendlyName,
                        ipAddress,
                        username,
                        password,
                        portNumber}, this.addRemoteStorageAdapterOperationCompleted, userState);
        }
        
        private void OnaddRemoteStorageAdapterOperationCompleted(object arg) {
            if ((this.addRemoteStorageAdapterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addRemoteStorageAdapterCompleted(this, new addRemoteStorageAdapterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageAdapterInfo removeRemoteStorageAdapter([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName) {
            object[] results = this.Invoke("removeRemoteStorageAdapter", new object[] {
                        friendlyName});
            return ((storageAdapterInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveRemoteStorageAdapter(string friendlyName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeRemoteStorageAdapter", new object[] {
                        friendlyName}, callback, asyncState);
        }
        
        /// <remarks/>
        public storageAdapterInfo EndremoveRemoteStorageAdapter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storageAdapterInfo)(results[0]));
        }
        
        /// <remarks/>
        public void removeRemoteStorageAdapterAsync(string friendlyName) {
            this.removeRemoteStorageAdapterAsync(friendlyName, null);
        }
        
        /// <remarks/>
        public void removeRemoteStorageAdapterAsync(string friendlyName, object userState) {
            if ((this.removeRemoteStorageAdapterOperationCompleted == null)) {
                this.removeRemoteStorageAdapterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveRemoteStorageAdapterOperationCompleted);
            }
            this.InvokeAsync("removeRemoteStorageAdapter", new object[] {
                        friendlyName}, this.removeRemoteStorageAdapterOperationCompleted, userState);
        }
        
        private void OnremoveRemoteStorageAdapterOperationCompleted(object arg) {
            if ((this.removeRemoteStorageAdapterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeRemoteStorageAdapterCompleted(this, new removeRemoteStorageAdapterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("credList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public managementCredentials[] enumStorageManagementCredentials() {
            object[] results = this.Invoke("enumStorageManagementCredentials", new object[0]);
            return ((managementCredentials[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumStorageManagementCredentials(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumStorageManagementCredentials", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public managementCredentials[] EndenumStorageManagementCredentials(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((managementCredentials[])(results[0]));
        }
        
        /// <remarks/>
        public void enumStorageManagementCredentialsAsync() {
            this.enumStorageManagementCredentialsAsync(null);
        }
        
        /// <remarks/>
        public void enumStorageManagementCredentialsAsync(object userState) {
            if ((this.enumStorageManagementCredentialsOperationCompleted == null)) {
                this.enumStorageManagementCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumStorageManagementCredentialsOperationCompleted);
            }
            this.InvokeAsync("enumStorageManagementCredentials", new object[0], this.enumStorageManagementCredentialsOperationCompleted, userState);
        }
        
        private void OnenumStorageManagementCredentialsOperationCompleted(object arg) {
            if ((this.enumStorageManagementCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumStorageManagementCredentialsCompleted(this, new enumStorageManagementCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public managementCredentials getStorageManagementCredentialInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid) {
            object[] results = this.Invoke("getStorageManagementCredentialInfo", new object[] {
                        friendlyName,
                        uuid});
            return ((managementCredentials)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetStorageManagementCredentialInfo(string friendlyName, string uuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getStorageManagementCredentialInfo", new object[] {
                        friendlyName,
                        uuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public managementCredentials EndgetStorageManagementCredentialInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((managementCredentials)(results[0]));
        }
        
        /// <remarks/>
        public void getStorageManagementCredentialInfoAsync(string friendlyName, string uuid) {
            this.getStorageManagementCredentialInfoAsync(friendlyName, uuid, null);
        }
        
        /// <remarks/>
        public void getStorageManagementCredentialInfoAsync(string friendlyName, string uuid, object userState) {
            if ((this.getStorageManagementCredentialInfoOperationCompleted == null)) {
                this.getStorageManagementCredentialInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStorageManagementCredentialInfoOperationCompleted);
            }
            this.InvokeAsync("getStorageManagementCredentialInfo", new object[] {
                        friendlyName,
                        uuid}, this.getStorageManagementCredentialInfoOperationCompleted, userState);
        }
        
        private void OngetStorageManagementCredentialInfoOperationCompleted(object arg) {
            if ((this.getStorageManagementCredentialInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStorageManagementCredentialInfoCompleted(this, new getStorageManagementCredentialInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo addStorageManagementCredentials([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] managementCredentials cred, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out managementCredentials info) {
            object[] results = this.Invoke("addStorageManagementCredentials", new object[] {
                        cred,
                        flags});
            info = ((managementCredentials)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddStorageManagementCredentials(managementCredentials cred, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addStorageManagementCredentials", new object[] {
                        cred,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndaddStorageManagementCredentials(System.IAsyncResult asyncResult, out managementCredentials info) {
            object[] results = this.EndInvoke(asyncResult);
            info = ((managementCredentials)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void addStorageManagementCredentialsAsync(managementCredentials cred, int flags) {
            this.addStorageManagementCredentialsAsync(cred, flags, null);
        }
        
        /// <remarks/>
        public void addStorageManagementCredentialsAsync(managementCredentials cred, int flags, object userState) {
            if ((this.addStorageManagementCredentialsOperationCompleted == null)) {
                this.addStorageManagementCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddStorageManagementCredentialsOperationCompleted);
            }
            this.InvokeAsync("addStorageManagementCredentials", new object[] {
                        cred,
                        flags}, this.addStorageManagementCredentialsOperationCompleted, userState);
        }
        
        private void OnaddStorageManagementCredentialsOperationCompleted(object arg) {
            if ((this.addStorageManagementCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addStorageManagementCredentialsCompleted(this, new addStorageManagementCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo updateStorageManagementCredentials([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] managementCredentials cred, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out managementCredentials info) {
            object[] results = this.Invoke("updateStorageManagementCredentials", new object[] {
                        uuid,
                        cred,
                        flags});
            info = ((managementCredentials)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateStorageManagementCredentials(string uuid, managementCredentials cred, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateStorageManagementCredentials", new object[] {
                        uuid,
                        cred,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndupdateStorageManagementCredentials(System.IAsyncResult asyncResult, out managementCredentials info) {
            object[] results = this.EndInvoke(asyncResult);
            info = ((managementCredentials)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void updateStorageManagementCredentialsAsync(string uuid, managementCredentials cred, int flags) {
            this.updateStorageManagementCredentialsAsync(uuid, cred, flags, null);
        }
        
        /// <remarks/>
        public void updateStorageManagementCredentialsAsync(string uuid, managementCredentials cred, int flags, object userState) {
            if ((this.updateStorageManagementCredentialsOperationCompleted == null)) {
                this.updateStorageManagementCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateStorageManagementCredentialsOperationCompleted);
            }
            this.InvokeAsync("updateStorageManagementCredentials", new object[] {
                        uuid,
                        cred,
                        flags}, this.updateStorageManagementCredentialsOperationCompleted, userState);
        }
        
        private void OnupdateStorageManagementCredentialsOperationCompleted(object arg) {
            if ((this.updateStorageManagementCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateStorageManagementCredentialsCompleted(this, new updateStorageManagementCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo removeStorageManagementCredentials([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("removeStorageManagementCredentials", new object[] {
                        friendlyName,
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveStorageManagementCredentials(string friendlyName, string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeStorageManagementCredentials", new object[] {
                        friendlyName,
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndremoveStorageManagementCredentials(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void removeStorageManagementCredentialsAsync(string friendlyName, string uuid, int flags) {
            this.removeStorageManagementCredentialsAsync(friendlyName, uuid, flags, null);
        }
        
        /// <remarks/>
        public void removeStorageManagementCredentialsAsync(string friendlyName, string uuid, int flags, object userState) {
            if ((this.removeStorageManagementCredentialsOperationCompleted == null)) {
                this.removeStorageManagementCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveStorageManagementCredentialsOperationCompleted);
            }
            this.InvokeAsync("removeStorageManagementCredentials", new object[] {
                        friendlyName,
                        uuid,
                        flags}, this.removeStorageManagementCredentialsOperationCompleted, userState);
        }
        
        private void OnremoveStorageManagementCredentialsOperationCompleted(object arg) {
            if ((this.removeStorageManagementCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeStorageManagementCredentialsCompleted(this, new removeStorageManagementCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("snInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageVolumeInfo getStorageVolumeInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageVolumeId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getStorageVolumeInfo", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        flags});
            return ((storageVolumeInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetStorageVolumeInfo(string storageSystemId, string storageVolumeId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getStorageVolumeInfo", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public storageVolumeInfo EndgetStorageVolumeInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storageVolumeInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getStorageVolumeInfoAsync(string storageSystemId, string storageVolumeId, int flags) {
            this.getStorageVolumeInfoAsync(storageSystemId, storageVolumeId, flags, null);
        }
        
        /// <remarks/>
        public void getStorageVolumeInfoAsync(string storageSystemId, string storageVolumeId, int flags, object userState) {
            if ((this.getStorageVolumeInfoOperationCompleted == null)) {
                this.getStorageVolumeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStorageVolumeInfoOperationCompleted);
            }
            this.InvokeAsync("getStorageVolumeInfo", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        flags}, this.getStorageVolumeInfoOperationCompleted, userState);
        }
        
        private void OngetStorageVolumeInfoOperationCompleted(object arg) {
            if ((this.getStorageVolumeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStorageVolumeInfoCompleted(this, new getStorageVolumeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumStorageNodes([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storagePoolId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("snInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storageVolumeInfo[] snInfoList) {
            object[] results = this.Invoke("enumStorageNodes", new object[] {
                        storageSystemId,
                        storagePoolId,
                        filters,
                        flags});
            snInfoList = ((storageVolumeInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumStorageNodes(string storageSystemId, string storagePoolId, string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumStorageNodes", new object[] {
                        storageSystemId,
                        storagePoolId,
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumStorageNodes(System.IAsyncResult asyncResult, out storageVolumeInfo[] snInfoList) {
            object[] results = this.EndInvoke(asyncResult);
            snInfoList = ((storageVolumeInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumStorageNodesAsync(string storageSystemId, string storagePoolId, string filters, int flags) {
            this.enumStorageNodesAsync(storageSystemId, storagePoolId, filters, flags, null);
        }
        
        /// <remarks/>
        public void enumStorageNodesAsync(string storageSystemId, string storagePoolId, string filters, int flags, object userState) {
            if ((this.enumStorageNodesOperationCompleted == null)) {
                this.enumStorageNodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumStorageNodesOperationCompleted);
            }
            this.InvokeAsync("enumStorageNodes", new object[] {
                        storageSystemId,
                        storagePoolId,
                        filters,
                        flags}, this.enumStorageNodesOperationCompleted, userState);
        }
        
        private void OnenumStorageNodesOperationCompleted(object arg) {
            if ((this.enumStorageNodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumStorageNodesCompleted(this, new enumStorageNodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("spInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storagePoolInfo getStoragePoolInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storagePoolId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getStoragePoolInfo", new object[] {
                        storageSystemId,
                        storagePoolId,
                        flags});
            return ((storagePoolInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetStoragePoolInfo(string storageSystemId, string storagePoolId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getStoragePoolInfo", new object[] {
                        storageSystemId,
                        storagePoolId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public storagePoolInfo EndgetStoragePoolInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storagePoolInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getStoragePoolInfoAsync(string storageSystemId, string storagePoolId, int flags) {
            this.getStoragePoolInfoAsync(storageSystemId, storagePoolId, flags, null);
        }
        
        /// <remarks/>
        public void getStoragePoolInfoAsync(string storageSystemId, string storagePoolId, int flags, object userState) {
            if ((this.getStoragePoolInfoOperationCompleted == null)) {
                this.getStoragePoolInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStoragePoolInfoOperationCompleted);
            }
            this.InvokeAsync("getStoragePoolInfo", new object[] {
                        storageSystemId,
                        storagePoolId,
                        flags}, this.getStoragePoolInfoOperationCompleted, userState);
        }
        
        private void OngetStoragePoolInfoOperationCompleted(object arg) {
            if ((this.getStoragePoolInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStoragePoolInfoCompleted(this, new getStoragePoolInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo createStoragePool([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string parentStoragePoolId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint sizeInMB, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint raidType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint provisioningType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint options, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storagePoolInfo spInfo) {
            object[] results = this.Invoke("createStoragePool", new object[] {
                        friendlyName,
                        storageSystemId,
                        parentStoragePoolId,
                        sizeInMB,
                        raidType,
                        provisioningType,
                        options,
                        flags});
            spInfo = ((storagePoolInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateStoragePool(string friendlyName, string storageSystemId, string parentStoragePoolId, uint sizeInMB, uint raidType, uint provisioningType, uint options, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createStoragePool", new object[] {
                        friendlyName,
                        storageSystemId,
                        parentStoragePoolId,
                        sizeInMB,
                        raidType,
                        provisioningType,
                        options,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndcreateStoragePool(System.IAsyncResult asyncResult, out storagePoolInfo spInfo) {
            object[] results = this.EndInvoke(asyncResult);
            spInfo = ((storagePoolInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void createStoragePoolAsync(string friendlyName, string storageSystemId, string parentStoragePoolId, uint sizeInMB, uint raidType, uint provisioningType, uint options, int flags) {
            this.createStoragePoolAsync(friendlyName, storageSystemId, parentStoragePoolId, sizeInMB, raidType, provisioningType, options, flags, null);
        }
        
        /// <remarks/>
        public void createStoragePoolAsync(string friendlyName, string storageSystemId, string parentStoragePoolId, uint sizeInMB, uint raidType, uint provisioningType, uint options, int flags, object userState) {
            if ((this.createStoragePoolOperationCompleted == null)) {
                this.createStoragePoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateStoragePoolOperationCompleted);
            }
            this.InvokeAsync("createStoragePool", new object[] {
                        friendlyName,
                        storageSystemId,
                        parentStoragePoolId,
                        sizeInMB,
                        raidType,
                        provisioningType,
                        options,
                        flags}, this.createStoragePoolOperationCompleted, userState);
        }
        
        private void OncreateStoragePoolOperationCompleted(object arg) {
            if ((this.createStoragePoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createStoragePoolCompleted(this, new createStoragePoolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo deleteStoragePool([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storagePoolId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("deleteStoragePool", new object[] {
                        storageSystemId,
                        storagePoolId,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteStoragePool(string storageSystemId, string storagePoolId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteStoragePool", new object[] {
                        storageSystemId,
                        storagePoolId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddeleteStoragePool(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void deleteStoragePoolAsync(string storageSystemId, string storagePoolId, int flags) {
            this.deleteStoragePoolAsync(storageSystemId, storagePoolId, flags, null);
        }
        
        /// <remarks/>
        public void deleteStoragePoolAsync(string storageSystemId, string storagePoolId, int flags, object userState) {
            if ((this.deleteStoragePoolOperationCompleted == null)) {
                this.deleteStoragePoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteStoragePoolOperationCompleted);
            }
            this.InvokeAsync("deleteStoragePool", new object[] {
                        storageSystemId,
                        storagePoolId,
                        flags}, this.deleteStoragePoolOperationCompleted, userState);
        }
        
        private void OndeleteStoragePoolOperationCompleted(object arg) {
            if ((this.deleteStoragePoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteStoragePoolCompleted(this, new deleteStoragePoolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void enableStorageAdvancedOption([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storagePoolId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageVolumeId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int advancedOptionType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string optionalParams) {
            this.Invoke("enableStorageAdvancedOption", new object[] {
                        storageSystemId,
                        storagePoolId,
                        storageVolumeId,
                        advancedOptionType,
                        optionalParams});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenableStorageAdvancedOption(string storageSystemId, string storagePoolId, string storageVolumeId, int advancedOptionType, string optionalParams, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enableStorageAdvancedOption", new object[] {
                        storageSystemId,
                        storagePoolId,
                        storageVolumeId,
                        advancedOptionType,
                        optionalParams}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndenableStorageAdvancedOption(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void enableStorageAdvancedOptionAsync(string storageSystemId, string storagePoolId, string storageVolumeId, int advancedOptionType, string optionalParams) {
            this.enableStorageAdvancedOptionAsync(storageSystemId, storagePoolId, storageVolumeId, advancedOptionType, optionalParams, null);
        }
        
        /// <remarks/>
        public void enableStorageAdvancedOptionAsync(string storageSystemId, string storagePoolId, string storageVolumeId, int advancedOptionType, string optionalParams, object userState) {
            if ((this.enableStorageAdvancedOptionOperationCompleted == null)) {
                this.enableStorageAdvancedOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenableStorageAdvancedOptionOperationCompleted);
            }
            this.InvokeAsync("enableStorageAdvancedOption", new object[] {
                        storageSystemId,
                        storagePoolId,
                        storageVolumeId,
                        advancedOptionType,
                        optionalParams}, this.enableStorageAdvancedOptionOperationCompleted, userState);
        }
        
        private void OnenableStorageAdvancedOptionOperationCompleted(object arg) {
            if ((this.enableStorageAdvancedOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enableStorageAdvancedOptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumStoragePools([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("spInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storagePoolInfo[] spInfoList) {
            object[] results = this.Invoke("enumStoragePools", new object[] {
                        storageSystemId,
                        filters,
                        flags});
            spInfoList = ((storagePoolInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumStoragePools(string storageSystemId, string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumStoragePools", new object[] {
                        storageSystemId,
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumStoragePools(System.IAsyncResult asyncResult, out storagePoolInfo[] spInfoList) {
            object[] results = this.EndInvoke(asyncResult);
            spInfoList = ((storagePoolInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumStoragePoolsAsync(string storageSystemId, string filters, int flags) {
            this.enumStoragePoolsAsync(storageSystemId, filters, flags, null);
        }
        
        /// <remarks/>
        public void enumStoragePoolsAsync(string storageSystemId, string filters, int flags, object userState) {
            if ((this.enumStoragePoolsOperationCompleted == null)) {
                this.enumStoragePoolsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumStoragePoolsOperationCompleted);
            }
            this.InvokeAsync("enumStoragePools", new object[] {
                        storageSystemId,
                        filters,
                        flags}, this.enumStoragePoolsOperationCompleted, userState);
        }
        
        private void OnenumStoragePoolsOperationCompleted(object arg) {
            if ((this.enumStoragePoolsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumStoragePoolsCompleted(this, new enumStoragePoolsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumStorageSystemInitiatorPorts([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint protocolType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("portList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out initiatorPortInfo[] portList) {
            object[] results = this.Invoke("enumStorageSystemInitiatorPorts", new object[] {
                        storageSystemId,
                        protocolType,
                        filters,
                        flags});
            portList = ((initiatorPortInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumStorageSystemInitiatorPorts(string storageSystemId, uint protocolType, string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumStorageSystemInitiatorPorts", new object[] {
                        storageSystemId,
                        protocolType,
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumStorageSystemInitiatorPorts(System.IAsyncResult asyncResult, out initiatorPortInfo[] portList) {
            object[] results = this.EndInvoke(asyncResult);
            portList = ((initiatorPortInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumStorageSystemInitiatorPortsAsync(string storageSystemId, uint protocolType, string filters, int flags) {
            this.enumStorageSystemInitiatorPortsAsync(storageSystemId, protocolType, filters, flags, null);
        }
        
        /// <remarks/>
        public void enumStorageSystemInitiatorPortsAsync(string storageSystemId, uint protocolType, string filters, int flags, object userState) {
            if ((this.enumStorageSystemInitiatorPortsOperationCompleted == null)) {
                this.enumStorageSystemInitiatorPortsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumStorageSystemInitiatorPortsOperationCompleted);
            }
            this.InvokeAsync("enumStorageSystemInitiatorPorts", new object[] {
                        storageSystemId,
                        protocolType,
                        filters,
                        flags}, this.enumStorageSystemInitiatorPortsOperationCompleted, userState);
        }
        
        private void OnenumStorageSystemInitiatorPortsOperationCompleted(object arg) {
            if ((this.enumStorageSystemInitiatorPortsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumStorageSystemInitiatorPortsCompleted(this, new enumStorageSystemInitiatorPortsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumStorageSystemTargetPorts([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint protocolType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("portList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out targetPortInfo[] portList) {
            object[] results = this.Invoke("enumStorageSystemTargetPorts", new object[] {
                        storageSystemId,
                        protocolType,
                        filters,
                        flags});
            portList = ((targetPortInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumStorageSystemTargetPorts(string storageSystemId, uint protocolType, string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumStorageSystemTargetPorts", new object[] {
                        storageSystemId,
                        protocolType,
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumStorageSystemTargetPorts(System.IAsyncResult asyncResult, out targetPortInfo[] portList) {
            object[] results = this.EndInvoke(asyncResult);
            portList = ((targetPortInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumStorageSystemTargetPortsAsync(string storageSystemId, uint protocolType, string filters, int flags) {
            this.enumStorageSystemTargetPortsAsync(storageSystemId, protocolType, filters, flags, null);
        }
        
        /// <remarks/>
        public void enumStorageSystemTargetPortsAsync(string storageSystemId, uint protocolType, string filters, int flags, object userState) {
            if ((this.enumStorageSystemTargetPortsOperationCompleted == null)) {
                this.enumStorageSystemTargetPortsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumStorageSystemTargetPortsOperationCompleted);
            }
            this.InvokeAsync("enumStorageSystemTargetPorts", new object[] {
                        storageSystemId,
                        protocolType,
                        filters,
                        flags}, this.enumStorageSystemTargetPortsOperationCompleted, userState);
        }
        
        private void OnenumStorageSystemTargetPortsOperationCompleted(object arg) {
            if ((this.enumStorageSystemTargetPortsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumStorageSystemTargetPortsCompleted(this, new enumStorageSystemTargetPortsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumStorageSystems([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("storageSystemInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storageSystemInfo[] storageSystemInfoList) {
            object[] results = this.Invoke("enumStorageSystems", new object[] {
                        filters,
                        flags});
            storageSystemInfoList = ((storageSystemInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumStorageSystems(string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumStorageSystems", new object[] {
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumStorageSystems(System.IAsyncResult asyncResult, out storageSystemInfo[] storageSystemInfoList) {
            object[] results = this.EndInvoke(asyncResult);
            storageSystemInfoList = ((storageSystemInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumStorageSystemsAsync(string filters, int flags) {
            this.enumStorageSystemsAsync(filters, flags, null);
        }
        
        /// <remarks/>
        public void enumStorageSystemsAsync(string filters, int flags, object userState) {
            if ((this.enumStorageSystemsOperationCompleted == null)) {
                this.enumStorageSystemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumStorageSystemsOperationCompleted);
            }
            this.InvokeAsync("enumStorageSystems", new object[] {
                        filters,
                        flags}, this.enumStorageSystemsOperationCompleted, userState);
        }
        
        private void OnenumStorageSystemsOperationCompleted(object arg) {
            if ((this.enumStorageSystemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumStorageSystemsCompleted(this, new enumStorageSystemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo doesObjectExist([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string parentId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint objectType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool doesExist) {
            object[] results = this.Invoke("doesObjectExist", new object[] {
                        objectId,
                        parentId,
                        objectType,
                        filters,
                        flags});
            doesExist = ((bool)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindoesObjectExist(string objectId, string parentId, uint objectType, string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("doesObjectExist", new object[] {
                        objectId,
                        parentId,
                        objectType,
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddoesObjectExist(System.IAsyncResult asyncResult, out bool doesExist) {
            object[] results = this.EndInvoke(asyncResult);
            doesExist = ((bool)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void doesObjectExistAsync(string objectId, string parentId, uint objectType, string filters, int flags) {
            this.doesObjectExistAsync(objectId, parentId, objectType, filters, flags, null);
        }
        
        /// <remarks/>
        public void doesObjectExistAsync(string objectId, string parentId, uint objectType, string filters, int flags, object userState) {
            if ((this.doesObjectExistOperationCompleted == null)) {
                this.doesObjectExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoesObjectExistOperationCompleted);
            }
            this.InvokeAsync("doesObjectExist", new object[] {
                        objectId,
                        parentId,
                        objectType,
                        filters,
                        flags}, this.doesObjectExistOperationCompleted, userState);
        }
        
        private void OndoesObjectExistOperationCompleted(object arg) {
            if ((this.doesObjectExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doesObjectExistCompleted(this, new doesObjectExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumStorageAssignments([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageVolumeId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string initiatorPortId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostname, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("saInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storageAssignmentInfo[] saInfoList) {
            object[] results = this.Invoke("enumStorageAssignments", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        initiatorPortId,
                        hostname,
                        filters,
                        flags});
            saInfoList = ((storageAssignmentInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumStorageAssignments(string storageSystemId, string storageVolumeId, string initiatorPortId, string hostname, string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumStorageAssignments", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        initiatorPortId,
                        hostname,
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumStorageAssignments(System.IAsyncResult asyncResult, out storageAssignmentInfo[] saInfoList) {
            object[] results = this.EndInvoke(asyncResult);
            saInfoList = ((storageAssignmentInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumStorageAssignmentsAsync(string storageSystemId, string storageVolumeId, string initiatorPortId, string hostname, string filters, int flags) {
            this.enumStorageAssignmentsAsync(storageSystemId, storageVolumeId, initiatorPortId, hostname, filters, flags, null);
        }
        
        /// <remarks/>
        public void enumStorageAssignmentsAsync(string storageSystemId, string storageVolumeId, string initiatorPortId, string hostname, string filters, int flags, object userState) {
            if ((this.enumStorageAssignmentsOperationCompleted == null)) {
                this.enumStorageAssignmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumStorageAssignmentsOperationCompleted);
            }
            this.InvokeAsync("enumStorageAssignments", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        initiatorPortId,
                        hostname,
                        filters,
                        flags}, this.enumStorageAssignmentsOperationCompleted, userState);
        }
        
        private void OnenumStorageAssignmentsOperationCompleted(object arg) {
            if ((this.enumStorageAssignmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumStorageAssignmentsCompleted(this, new enumStorageAssignmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumSnapshotAssociations([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageVolumeId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("snapshotAssocInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out snapshotAssocInfo[] snapshotAssocInfoList) {
            object[] results = this.Invoke("enumSnapshotAssociations", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        filters,
                        flags});
            snapshotAssocInfoList = ((snapshotAssocInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumSnapshotAssociations(string storageSystemId, string storageVolumeId, string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumSnapshotAssociations", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumSnapshotAssociations(System.IAsyncResult asyncResult, out snapshotAssocInfo[] snapshotAssocInfoList) {
            object[] results = this.EndInvoke(asyncResult);
            snapshotAssocInfoList = ((snapshotAssocInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumSnapshotAssociationsAsync(string storageSystemId, string storageVolumeId, string filters, int flags) {
            this.enumSnapshotAssociationsAsync(storageSystemId, storageVolumeId, filters, flags, null);
        }
        
        /// <remarks/>
        public void enumSnapshotAssociationsAsync(string storageSystemId, string storageVolumeId, string filters, int flags, object userState) {
            if ((this.enumSnapshotAssociationsOperationCompleted == null)) {
                this.enumSnapshotAssociationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumSnapshotAssociationsOperationCompleted);
            }
            this.InvokeAsync("enumSnapshotAssociations", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        filters,
                        flags}, this.enumSnapshotAssociationsOperationCompleted, userState);
        }
        
        private void OnenumSnapshotAssociationsOperationCompleted(object arg) {
            if ((this.enumSnapshotAssociationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumSnapshotAssociationsCompleted(this, new enumSnapshotAssociationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ssInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageSystemInfo getStorageSystemInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getStorageSystemInfo", new object[] {
                        storageSystemId,
                        filters,
                        flags});
            return ((storageSystemInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetStorageSystemInfo(string storageSystemId, string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getStorageSystemInfo", new object[] {
                        storageSystemId,
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public storageSystemInfo EndgetStorageSystemInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storageSystemInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getStorageSystemInfoAsync(string storageSystemId, string filters, int flags) {
            this.getStorageSystemInfoAsync(storageSystemId, filters, flags, null);
        }
        
        /// <remarks/>
        public void getStorageSystemInfoAsync(string storageSystemId, string filters, int flags, object userState) {
            if ((this.getStorageSystemInfoOperationCompleted == null)) {
                this.getStorageSystemInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStorageSystemInfoOperationCompleted);
            }
            this.InvokeAsync("getStorageSystemInfo", new object[] {
                        storageSystemId,
                        filters,
                        flags}, this.getStorageSystemInfoOperationCompleted, userState);
        }
        
        private void OngetStorageSystemInfoOperationCompleted(object arg) {
            if ((this.getStorageSystemInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStorageSystemInfoCompleted(this, new getStorageSystemInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo discoverVhdOnStorageVolume([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageVolumeId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string targetHost, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("storageVolumeVhdAssocList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storageVolumeVhdAssoc[] storageVolumeVhdAssocList) {
            object[] results = this.Invoke("discoverVhdOnStorageVolume", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        targetHost,
                        flags});
            storageVolumeVhdAssocList = ((storageVolumeVhdAssoc[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindiscoverVhdOnStorageVolume(string storageSystemId, string storageVolumeId, string targetHost, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("discoverVhdOnStorageVolume", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        targetHost,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddiscoverVhdOnStorageVolume(System.IAsyncResult asyncResult, out storageVolumeVhdAssoc[] storageVolumeVhdAssocList) {
            object[] results = this.EndInvoke(asyncResult);
            storageVolumeVhdAssocList = ((storageVolumeVhdAssoc[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void discoverVhdOnStorageVolumeAsync(string storageSystemId, string storageVolumeId, string targetHost, int flags) {
            this.discoverVhdOnStorageVolumeAsync(storageSystemId, storageVolumeId, targetHost, flags, null);
        }
        
        /// <remarks/>
        public void discoverVhdOnStorageVolumeAsync(string storageSystemId, string storageVolumeId, string targetHost, int flags, object userState) {
            if ((this.discoverVhdOnStorageVolumeOperationCompleted == null)) {
                this.discoverVhdOnStorageVolumeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndiscoverVhdOnStorageVolumeOperationCompleted);
            }
            this.InvokeAsync("discoverVhdOnStorageVolume", new object[] {
                        storageSystemId,
                        storageVolumeId,
                        targetHost,
                        flags}, this.discoverVhdOnStorageVolumeOperationCompleted, userState);
        }
        
        private void OndiscoverVhdOnStorageVolumeOperationCompleted(object arg) {
            if ((this.discoverVhdOnStorageVolumeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.discoverVhdOnStorageVolumeCompleted(this, new discoverVhdOnStorageVolumeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo createStorageProfile([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string desc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string bootStorageVolumeId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute("storageVolumeList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] storageVolumeList, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string repositoryUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storageProfileInfo info) {
            object[] results = this.Invoke("createStorageProfile", new object[] {
                        friendlyName,
                        desc,
                        bootStorageVolumeId,
                        catalogId,
                        storageVolumeList,
                        repositoryUuid,
                        flags});
            info = ((storageProfileInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateStorageProfile(string friendlyName, string desc, string bootStorageVolumeId, string catalogId, string[] storageVolumeList, string repositoryUuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createStorageProfile", new object[] {
                        friendlyName,
                        desc,
                        bootStorageVolumeId,
                        catalogId,
                        storageVolumeList,
                        repositoryUuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndcreateStorageProfile(System.IAsyncResult asyncResult, out storageProfileInfo info) {
            object[] results = this.EndInvoke(asyncResult);
            info = ((storageProfileInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void createStorageProfileAsync(string friendlyName, string desc, string bootStorageVolumeId, string catalogId, string[] storageVolumeList, string repositoryUuid, int flags) {
            this.createStorageProfileAsync(friendlyName, desc, bootStorageVolumeId, catalogId, storageVolumeList, repositoryUuid, flags, null);
        }
        
        /// <remarks/>
        public void createStorageProfileAsync(string friendlyName, string desc, string bootStorageVolumeId, string catalogId, string[] storageVolumeList, string repositoryUuid, int flags, object userState) {
            if ((this.createStorageProfileOperationCompleted == null)) {
                this.createStorageProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateStorageProfileOperationCompleted);
            }
            this.InvokeAsync("createStorageProfile", new object[] {
                        friendlyName,
                        desc,
                        bootStorageVolumeId,
                        catalogId,
                        storageVolumeList,
                        repositoryUuid,
                        flags}, this.createStorageProfileOperationCompleted, userState);
        }
        
        private void OncreateStorageProfileOperationCompleted(object arg) {
            if ((this.createStorageProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createStorageProfileCompleted(this, new createStorageProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo deleteStorageProfile([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("deleteStorageProfile", new object[] {
                        friendlyName,
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteStorageProfile(string friendlyName, string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteStorageProfile", new object[] {
                        friendlyName,
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddeleteStorageProfile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void deleteStorageProfileAsync(string friendlyName, string uuid, int flags) {
            this.deleteStorageProfileAsync(friendlyName, uuid, flags, null);
        }
        
        /// <remarks/>
        public void deleteStorageProfileAsync(string friendlyName, string uuid, int flags, object userState) {
            if ((this.deleteStorageProfileOperationCompleted == null)) {
                this.deleteStorageProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteStorageProfileOperationCompleted);
            }
            this.InvokeAsync("deleteStorageProfile", new object[] {
                        friendlyName,
                        uuid,
                        flags}, this.deleteStorageProfileOperationCompleted, userState);
        }
        
        private void OndeleteStorageProfileOperationCompleted(object arg) {
            if ((this.deleteStorageProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteStorageProfileCompleted(this, new deleteStorageProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo modifyStorageProfile([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string desc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string bootStorageVolumeId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storageProfileInfo info) {
            object[] results = this.Invoke("modifyStorageProfile", new object[] {
                        uuid,
                        friendlyName,
                        desc,
                        bootStorageVolumeId,
                        flags});
            info = ((storageProfileInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmodifyStorageProfile(string uuid, string friendlyName, string desc, string bootStorageVolumeId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("modifyStorageProfile", new object[] {
                        uuid,
                        friendlyName,
                        desc,
                        bootStorageVolumeId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndmodifyStorageProfile(System.IAsyncResult asyncResult, out storageProfileInfo info) {
            object[] results = this.EndInvoke(asyncResult);
            info = ((storageProfileInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void modifyStorageProfileAsync(string uuid, string friendlyName, string desc, string bootStorageVolumeId, int flags) {
            this.modifyStorageProfileAsync(uuid, friendlyName, desc, bootStorageVolumeId, flags, null);
        }
        
        /// <remarks/>
        public void modifyStorageProfileAsync(string uuid, string friendlyName, string desc, string bootStorageVolumeId, int flags, object userState) {
            if ((this.modifyStorageProfileOperationCompleted == null)) {
                this.modifyStorageProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyStorageProfileOperationCompleted);
            }
            this.InvokeAsync("modifyStorageProfile", new object[] {
                        uuid,
                        friendlyName,
                        desc,
                        bootStorageVolumeId,
                        flags}, this.modifyStorageProfileOperationCompleted, userState);
        }
        
        private void OnmodifyStorageProfileOperationCompleted(object arg) {
            if ((this.modifyStorageProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyStorageProfileCompleted(this, new modifyStorageProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageProfileInfo[] enumStorageProfiles() {
            object[] results = this.Invoke("enumStorageProfiles", new object[0]);
            return ((storageProfileInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumStorageProfiles(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumStorageProfiles", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public storageProfileInfo[] EndenumStorageProfiles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storageProfileInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void enumStorageProfilesAsync() {
            this.enumStorageProfilesAsync(null);
        }
        
        /// <remarks/>
        public void enumStorageProfilesAsync(object userState) {
            if ((this.enumStorageProfilesOperationCompleted == null)) {
                this.enumStorageProfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumStorageProfilesOperationCompleted);
            }
            this.InvokeAsync("enumStorageProfiles", new object[0], this.enumStorageProfilesOperationCompleted, userState);
        }
        
        private void OnenumStorageProfilesOperationCompleted(object arg) {
            if ((this.enumStorageProfilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumStorageProfilesCompleted(this, new enumStorageProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageProfileInfo getStorageProfileInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid) {
            object[] results = this.Invoke("getStorageProfileInfo", new object[] {
                        friendlyName,
                        uuid});
            return ((storageProfileInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetStorageProfileInfo(string friendlyName, string uuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getStorageProfileInfo", new object[] {
                        friendlyName,
                        uuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public storageProfileInfo EndgetStorageProfileInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storageProfileInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getStorageProfileInfoAsync(string friendlyName, string uuid) {
            this.getStorageProfileInfoAsync(friendlyName, uuid, null);
        }
        
        /// <remarks/>
        public void getStorageProfileInfoAsync(string friendlyName, string uuid, object userState) {
            if ((this.getStorageProfileInfoOperationCompleted == null)) {
                this.getStorageProfileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStorageProfileInfoOperationCompleted);
            }
            this.InvokeAsync("getStorageProfileInfo", new object[] {
                        friendlyName,
                        uuid}, this.getStorageProfileInfoOperationCompleted, userState);
        }
        
        private void OngetStorageProfileInfoOperationCompleted(object arg) {
            if ((this.getStorageProfileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStorageProfileInfoCompleted(this, new getStorageProfileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo addStorageToStorageProfile([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute("storageVolumeList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] storageVolumeList, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string reserved, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storageProfileInfo info) {
            object[] results = this.Invoke("addStorageToStorageProfile", new object[] {
                        uuid,
                        storageVolumeList,
                        reserved,
                        flags});
            info = ((storageProfileInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddStorageToStorageProfile(string uuid, string[] storageVolumeList, string reserved, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addStorageToStorageProfile", new object[] {
                        uuid,
                        storageVolumeList,
                        reserved,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndaddStorageToStorageProfile(System.IAsyncResult asyncResult, out storageProfileInfo info) {
            object[] results = this.EndInvoke(asyncResult);
            info = ((storageProfileInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void addStorageToStorageProfileAsync(string uuid, string[] storageVolumeList, string reserved, int flags) {
            this.addStorageToStorageProfileAsync(uuid, storageVolumeList, reserved, flags, null);
        }
        
        /// <remarks/>
        public void addStorageToStorageProfileAsync(string uuid, string[] storageVolumeList, string reserved, int flags, object userState) {
            if ((this.addStorageToStorageProfileOperationCompleted == null)) {
                this.addStorageToStorageProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddStorageToStorageProfileOperationCompleted);
            }
            this.InvokeAsync("addStorageToStorageProfile", new object[] {
                        uuid,
                        storageVolumeList,
                        reserved,
                        flags}, this.addStorageToStorageProfileOperationCompleted, userState);
        }
        
        private void OnaddStorageToStorageProfileOperationCompleted(object arg) {
            if ((this.addStorageToStorageProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addStorageToStorageProfileCompleted(this, new addStorageToStorageProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo removeStorageFromStorageProfile([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute("storageVolumeList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] storageVolumeList, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storageProfileInfo info) {
            object[] results = this.Invoke("removeStorageFromStorageProfile", new object[] {
                        uuid,
                        storageVolumeList,
                        flags});
            info = ((storageProfileInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveStorageFromStorageProfile(string uuid, string[] storageVolumeList, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeStorageFromStorageProfile", new object[] {
                        uuid,
                        storageVolumeList,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndremoveStorageFromStorageProfile(System.IAsyncResult asyncResult, out storageProfileInfo info) {
            object[] results = this.EndInvoke(asyncResult);
            info = ((storageProfileInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void removeStorageFromStorageProfileAsync(string uuid, string[] storageVolumeList, int flags) {
            this.removeStorageFromStorageProfileAsync(uuid, storageVolumeList, flags, null);
        }
        
        /// <remarks/>
        public void removeStorageFromStorageProfileAsync(string uuid, string[] storageVolumeList, int flags, object userState) {
            if ((this.removeStorageFromStorageProfileOperationCompleted == null)) {
                this.removeStorageFromStorageProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveStorageFromStorageProfileOperationCompleted);
            }
            this.InvokeAsync("removeStorageFromStorageProfile", new object[] {
                        uuid,
                        storageVolumeList,
                        flags}, this.removeStorageFromStorageProfileOperationCompleted, userState);
        }
        
        private void OnremoveStorageFromStorageProfileOperationCompleted(object arg) {
            if ((this.removeStorageFromStorageProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeStorageFromStorageProfileCompleted(this, new removeStorageFromStorageProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo createStorageRepository(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageSystemId, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storagePoolId, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint raidType, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint protocolType, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint provisioningType, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostGroupUuid, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint useDeduplication, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string chapUser, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string chapPassword, 
                    [System.Xml.Serialization.XmlElementAttribute("storageVolumeIdList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] storageVolumeIdList, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint type, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint poolCount, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint flags, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storageRepositoryInfo info) {
            object[] results = this.Invoke("createStorageRepository", new object[] {
                        friendlyName,
                        storageSystemId,
                        storagePoolId,
                        raidType,
                        protocolType,
                        description,
                        provisioningType,
                        hostGroupUuid,
                        useDeduplication,
                        chapUser,
                        chapPassword,
                        storageVolumeIdList,
                        type,
                        poolCount,
                        flags});
            info = ((storageRepositoryInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateStorageRepository(
                    string friendlyName, 
                    string storageSystemId, 
                    string storagePoolId, 
                    uint raidType, 
                    uint protocolType, 
                    string description, 
                    uint provisioningType, 
                    string hostGroupUuid, 
                    uint useDeduplication, 
                    string chapUser, 
                    string chapPassword, 
                    string[] storageVolumeIdList, 
                    uint type, 
                    uint poolCount, 
                    uint flags, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("createStorageRepository", new object[] {
                        friendlyName,
                        storageSystemId,
                        storagePoolId,
                        raidType,
                        protocolType,
                        description,
                        provisioningType,
                        hostGroupUuid,
                        useDeduplication,
                        chapUser,
                        chapPassword,
                        storageVolumeIdList,
                        type,
                        poolCount,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndcreateStorageRepository(System.IAsyncResult asyncResult, out storageRepositoryInfo info) {
            object[] results = this.EndInvoke(asyncResult);
            info = ((storageRepositoryInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void createStorageRepositoryAsync(string friendlyName, string storageSystemId, string storagePoolId, uint raidType, uint protocolType, string description, uint provisioningType, string hostGroupUuid, uint useDeduplication, string chapUser, string chapPassword, string[] storageVolumeIdList, uint type, uint poolCount, uint flags) {
            this.createStorageRepositoryAsync(friendlyName, storageSystemId, storagePoolId, raidType, protocolType, description, provisioningType, hostGroupUuid, useDeduplication, chapUser, chapPassword, storageVolumeIdList, type, poolCount, flags, null);
        }
        
        /// <remarks/>
        public void createStorageRepositoryAsync(
                    string friendlyName, 
                    string storageSystemId, 
                    string storagePoolId, 
                    uint raidType, 
                    uint protocolType, 
                    string description, 
                    uint provisioningType, 
                    string hostGroupUuid, 
                    uint useDeduplication, 
                    string chapUser, 
                    string chapPassword, 
                    string[] storageVolumeIdList, 
                    uint type, 
                    uint poolCount, 
                    uint flags, 
                    object userState) {
            if ((this.createStorageRepositoryOperationCompleted == null)) {
                this.createStorageRepositoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateStorageRepositoryOperationCompleted);
            }
            this.InvokeAsync("createStorageRepository", new object[] {
                        friendlyName,
                        storageSystemId,
                        storagePoolId,
                        raidType,
                        protocolType,
                        description,
                        provisioningType,
                        hostGroupUuid,
                        useDeduplication,
                        chapUser,
                        chapPassword,
                        storageVolumeIdList,
                        type,
                        poolCount,
                        flags}, this.createStorageRepositoryOperationCompleted, userState);
        }
        
        private void OncreateStorageRepositoryOperationCompleted(object arg) {
            if ((this.createStorageRepositoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createStorageRepositoryCompleted(this, new createStorageRepositoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteStorageRepository([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            this.Invoke("deleteStorageRepository", new object[] {
                        uuid,
                        flags});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteStorageRepository(string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteStorageRepository", new object[] {
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeleteStorageRepository(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void deleteStorageRepositoryAsync(string uuid, int flags) {
            this.deleteStorageRepositoryAsync(uuid, flags, null);
        }
        
        /// <remarks/>
        public void deleteStorageRepositoryAsync(string uuid, int flags, object userState) {
            if ((this.deleteStorageRepositoryOperationCompleted == null)) {
                this.deleteStorageRepositoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteStorageRepositoryOperationCompleted);
            }
            this.InvokeAsync("deleteStorageRepository", new object[] {
                        uuid,
                        flags}, this.deleteStorageRepositoryOperationCompleted, userState);
        }
        
        private void OndeleteStorageRepositoryOperationCompleted(object arg) {
            if ((this.deleteStorageRepositoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteStorageRepositoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo destroyStorageRepository([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("destroyStorageRepository", new object[] {
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindestroyStorageRepository(string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("destroyStorageRepository", new object[] {
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddestroyStorageRepository(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void destroyStorageRepositoryAsync(string uuid, int flags) {
            this.destroyStorageRepositoryAsync(uuid, flags, null);
        }
        
        /// <remarks/>
        public void destroyStorageRepositoryAsync(string uuid, int flags, object userState) {
            if ((this.destroyStorageRepositoryOperationCompleted == null)) {
                this.destroyStorageRepositoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndestroyStorageRepositoryOperationCompleted);
            }
            this.InvokeAsync("destroyStorageRepository", new object[] {
                        uuid,
                        flags}, this.destroyStorageRepositoryOperationCompleted, userState);
        }
        
        private void OndestroyStorageRepositoryOperationCompleted(object arg) {
            if ((this.destroyStorageRepositoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.destroyStorageRepositoryCompleted(this, new destroyStorageRepositoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo modifyStorageRepository([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint useDeduplication, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storageRepositoryInfo info) {
            object[] results = this.Invoke("modifyStorageRepository", new object[] {
                        uuid,
                        friendlyName,
                        description,
                        useDeduplication,
                        flags});
            info = ((storageRepositoryInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmodifyStorageRepository(string uuid, string friendlyName, string description, uint useDeduplication, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("modifyStorageRepository", new object[] {
                        uuid,
                        friendlyName,
                        description,
                        useDeduplication,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndmodifyStorageRepository(System.IAsyncResult asyncResult, out storageRepositoryInfo info) {
            object[] results = this.EndInvoke(asyncResult);
            info = ((storageRepositoryInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void modifyStorageRepositoryAsync(string uuid, string friendlyName, string description, uint useDeduplication, int flags) {
            this.modifyStorageRepositoryAsync(uuid, friendlyName, description, useDeduplication, flags, null);
        }
        
        /// <remarks/>
        public void modifyStorageRepositoryAsync(string uuid, string friendlyName, string description, uint useDeduplication, int flags, object userState) {
            if ((this.modifyStorageRepositoryOperationCompleted == null)) {
                this.modifyStorageRepositoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyStorageRepositoryOperationCompleted);
            }
            this.InvokeAsync("modifyStorageRepository", new object[] {
                        uuid,
                        friendlyName,
                        description,
                        useDeduplication,
                        flags}, this.modifyStorageRepositoryOperationCompleted, userState);
        }
        
        private void OnmodifyStorageRepositoryOperationCompleted(object arg) {
            if ((this.modifyStorageRepositoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyStorageRepositoryCompleted(this, new modifyStorageRepositoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumStorageRepositories([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostGroupUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storageRepositoryInfo[] list) {
            object[] results = this.Invoke("enumStorageRepositories", new object[] {
                        hostGroupUuid,
                        filters,
                        flags});
            list = ((storageRepositoryInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumStorageRepositories(string hostGroupUuid, string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumStorageRepositories", new object[] {
                        hostGroupUuid,
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumStorageRepositories(System.IAsyncResult asyncResult, out storageRepositoryInfo[] list) {
            object[] results = this.EndInvoke(asyncResult);
            list = ((storageRepositoryInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumStorageRepositoriesAsync(string hostGroupUuid, string filters, int flags) {
            this.enumStorageRepositoriesAsync(hostGroupUuid, filters, flags, null);
        }
        
        /// <remarks/>
        public void enumStorageRepositoriesAsync(string hostGroupUuid, string filters, int flags, object userState) {
            if ((this.enumStorageRepositoriesOperationCompleted == null)) {
                this.enumStorageRepositoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumStorageRepositoriesOperationCompleted);
            }
            this.InvokeAsync("enumStorageRepositories", new object[] {
                        hostGroupUuid,
                        filters,
                        flags}, this.enumStorageRepositoriesOperationCompleted, userState);
        }
        
        private void OnenumStorageRepositoriesOperationCompleted(object arg) {
            if ((this.enumStorageRepositoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumStorageRepositoriesCompleted(this, new enumStorageRepositoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageRepositoryInfo getStorageRepositoryInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getStorageRepositoryInfo", new object[] {
                        friendlyName,
                        uuid,
                        flags});
            return ((storageRepositoryInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetStorageRepositoryInfo(string friendlyName, string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getStorageRepositoryInfo", new object[] {
                        friendlyName,
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public storageRepositoryInfo EndgetStorageRepositoryInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storageRepositoryInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getStorageRepositoryInfoAsync(string friendlyName, string uuid, int flags) {
            this.getStorageRepositoryInfoAsync(friendlyName, uuid, flags, null);
        }
        
        /// <remarks/>
        public void getStorageRepositoryInfoAsync(string friendlyName, string uuid, int flags, object userState) {
            if ((this.getStorageRepositoryInfoOperationCompleted == null)) {
                this.getStorageRepositoryInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStorageRepositoryInfoOperationCompleted);
            }
            this.InvokeAsync("getStorageRepositoryInfo", new object[] {
                        friendlyName,
                        uuid,
                        flags}, this.getStorageRepositoryInfoOperationCompleted, userState);
        }
        
        private void OngetStorageRepositoryInfoOperationCompleted(object arg) {
            if ((this.getStorageRepositoryInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStorageRepositoryInfoCompleted(this, new getStorageRepositoryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo allocateStorageFromRepository([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint sizeInMB, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int options, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storageVolumeInfo info) {
            object[] results = this.Invoke("allocateStorageFromRepository", new object[] {
                        uuid,
                        sizeInMB,
                        friendlyName,
                        options,
                        flags});
            info = ((storageVolumeInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginallocateStorageFromRepository(string uuid, uint sizeInMB, string friendlyName, int options, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("allocateStorageFromRepository", new object[] {
                        uuid,
                        sizeInMB,
                        friendlyName,
                        options,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndallocateStorageFromRepository(System.IAsyncResult asyncResult, out storageVolumeInfo info) {
            object[] results = this.EndInvoke(asyncResult);
            info = ((storageVolumeInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void allocateStorageFromRepositoryAsync(string uuid, uint sizeInMB, string friendlyName, int options, int flags) {
            this.allocateStorageFromRepositoryAsync(uuid, sizeInMB, friendlyName, options, flags, null);
        }
        
        /// <remarks/>
        public void allocateStorageFromRepositoryAsync(string uuid, uint sizeInMB, string friendlyName, int options, int flags, object userState) {
            if ((this.allocateStorageFromRepositoryOperationCompleted == null)) {
                this.allocateStorageFromRepositoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnallocateStorageFromRepositoryOperationCompleted);
            }
            this.InvokeAsync("allocateStorageFromRepository", new object[] {
                        uuid,
                        sizeInMB,
                        friendlyName,
                        options,
                        flags}, this.allocateStorageFromRepositoryOperationCompleted, userState);
        }
        
        private void OnallocateStorageFromRepositoryOperationCompleted(object arg) {
            if ((this.allocateStorageFromRepositoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.allocateStorageFromRepositoryCompleted(this, new allocateStorageFromRepositoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo deallocateStorageFromRepository([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageVolumeId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out storageRepositoryInfo info) {
            object[] results = this.Invoke("deallocateStorageFromRepository", new object[] {
                        uuid,
                        storageVolumeId,
                        flags});
            info = ((storageRepositoryInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeallocateStorageFromRepository(string uuid, string storageVolumeId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deallocateStorageFromRepository", new object[] {
                        uuid,
                        storageVolumeId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddeallocateStorageFromRepository(System.IAsyncResult asyncResult, out storageRepositoryInfo info) {
            object[] results = this.EndInvoke(asyncResult);
            info = ((storageRepositoryInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void deallocateStorageFromRepositoryAsync(string uuid, string storageVolumeId, int flags) {
            this.deallocateStorageFromRepositoryAsync(uuid, storageVolumeId, flags, null);
        }
        
        /// <remarks/>
        public void deallocateStorageFromRepositoryAsync(string uuid, string storageVolumeId, int flags, object userState) {
            if ((this.deallocateStorageFromRepositoryOperationCompleted == null)) {
                this.deallocateStorageFromRepositoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeallocateStorageFromRepositoryOperationCompleted);
            }
            this.InvokeAsync("deallocateStorageFromRepository", new object[] {
                        uuid,
                        storageVolumeId,
                        flags}, this.deallocateStorageFromRepositoryOperationCompleted, userState);
        }
        
        private void OndeallocateStorageFromRepositoryOperationCompleted(object arg) {
            if ((this.deallocateStorageFromRepositoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deallocateStorageFromRepositoryCompleted(this, new deallocateStorageFromRepositoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageRepositoryInfo addStorageToRepository([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute("storageVolumeIdList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] storageVolumeIdList, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("addStorageToRepository", new object[] {
                        uuid,
                        storageVolumeIdList,
                        flags});
            return ((storageRepositoryInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddStorageToRepository(string uuid, string[] storageVolumeIdList, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addStorageToRepository", new object[] {
                        uuid,
                        storageVolumeIdList,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public storageRepositoryInfo EndaddStorageToRepository(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storageRepositoryInfo)(results[0]));
        }
        
        /// <remarks/>
        public void addStorageToRepositoryAsync(string uuid, string[] storageVolumeIdList, int flags) {
            this.addStorageToRepositoryAsync(uuid, storageVolumeIdList, flags, null);
        }
        
        /// <remarks/>
        public void addStorageToRepositoryAsync(string uuid, string[] storageVolumeIdList, int flags, object userState) {
            if ((this.addStorageToRepositoryOperationCompleted == null)) {
                this.addStorageToRepositoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddStorageToRepositoryOperationCompleted);
            }
            this.InvokeAsync("addStorageToRepository", new object[] {
                        uuid,
                        storageVolumeIdList,
                        flags}, this.addStorageToRepositoryOperationCompleted, userState);
        }
        
        private void OnaddStorageToRepositoryOperationCompleted(object arg) {
            if ((this.addStorageToRepositoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addStorageToRepositoryCompleted(this, new addStorageToRepositoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageRepositoryInfo removeStorageFromRepository([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute("storageVolumeIdList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] storageVolumeIdList, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("removeStorageFromRepository", new object[] {
                        uuid,
                        storageVolumeIdList,
                        flags});
            return ((storageRepositoryInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveStorageFromRepository(string uuid, string[] storageVolumeIdList, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeStorageFromRepository", new object[] {
                        uuid,
                        storageVolumeIdList,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public storageRepositoryInfo EndremoveStorageFromRepository(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storageRepositoryInfo)(results[0]));
        }
        
        /// <remarks/>
        public void removeStorageFromRepositoryAsync(string uuid, string[] storageVolumeIdList, int flags) {
            this.removeStorageFromRepositoryAsync(uuid, storageVolumeIdList, flags, null);
        }
        
        /// <remarks/>
        public void removeStorageFromRepositoryAsync(string uuid, string[] storageVolumeIdList, int flags, object userState) {
            if ((this.removeStorageFromRepositoryOperationCompleted == null)) {
                this.removeStorageFromRepositoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveStorageFromRepositoryOperationCompleted);
            }
            this.InvokeAsync("removeStorageFromRepository", new object[] {
                        uuid,
                        storageVolumeIdList,
                        flags}, this.removeStorageFromRepositoryOperationCompleted, userState);
        }
        
        private void OnremoveStorageFromRepositoryOperationCompleted(object arg) {
            if ((this.removeStorageFromRepositoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeStorageFromRepositoryCompleted(this, new removeStorageFromRepositoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo createSysPrepProfile([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string profileName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string osType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sysPrepFileId, [System.Xml.Serialization.XmlElementAttribute("sysPrepParams", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] sysPrepProfileParam[] sysPrepParams, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out sysPrepProfile profile) {
            object[] results = this.Invoke("createSysPrepProfile", new object[] {
                        profileName,
                        osType,
                        sysPrepFileId,
                        sysPrepParams,
                        flags});
            profile = ((sysPrepProfile)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateSysPrepProfile(string profileName, string osType, string sysPrepFileId, sysPrepProfileParam[] sysPrepParams, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createSysPrepProfile", new object[] {
                        profileName,
                        osType,
                        sysPrepFileId,
                        sysPrepParams,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndcreateSysPrepProfile(System.IAsyncResult asyncResult, out sysPrepProfile profile) {
            object[] results = this.EndInvoke(asyncResult);
            profile = ((sysPrepProfile)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void createSysPrepProfileAsync(string profileName, string osType, string sysPrepFileId, sysPrepProfileParam[] sysPrepParams, int flags) {
            this.createSysPrepProfileAsync(profileName, osType, sysPrepFileId, sysPrepParams, flags, null);
        }
        
        /// <remarks/>
        public void createSysPrepProfileAsync(string profileName, string osType, string sysPrepFileId, sysPrepProfileParam[] sysPrepParams, int flags, object userState) {
            if ((this.createSysPrepProfileOperationCompleted == null)) {
                this.createSysPrepProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSysPrepProfileOperationCompleted);
            }
            this.InvokeAsync("createSysPrepProfile", new object[] {
                        profileName,
                        osType,
                        sysPrepFileId,
                        sysPrepParams,
                        flags}, this.createSysPrepProfileOperationCompleted, userState);
        }
        
        private void OncreateSysPrepProfileOperationCompleted(object arg) {
            if ((this.createSysPrepProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSysPrepProfileCompleted(this, new createSysPrepProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo modifySysPrepProfile([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string profileName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string profileUuid, [System.Xml.Serialization.XmlElementAttribute("sysPrepParams", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] sysPrepProfileParam[] sysPrepParams, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out sysPrepProfile profile) {
            object[] results = this.Invoke("modifySysPrepProfile", new object[] {
                        profileName,
                        profileUuid,
                        sysPrepParams,
                        flags});
            profile = ((sysPrepProfile)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmodifySysPrepProfile(string profileName, string profileUuid, sysPrepProfileParam[] sysPrepParams, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("modifySysPrepProfile", new object[] {
                        profileName,
                        profileUuid,
                        sysPrepParams,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndmodifySysPrepProfile(System.IAsyncResult asyncResult, out sysPrepProfile profile) {
            object[] results = this.EndInvoke(asyncResult);
            profile = ((sysPrepProfile)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void modifySysPrepProfileAsync(string profileName, string profileUuid, sysPrepProfileParam[] sysPrepParams, int flags) {
            this.modifySysPrepProfileAsync(profileName, profileUuid, sysPrepParams, flags, null);
        }
        
        /// <remarks/>
        public void modifySysPrepProfileAsync(string profileName, string profileUuid, sysPrepProfileParam[] sysPrepParams, int flags, object userState) {
            if ((this.modifySysPrepProfileOperationCompleted == null)) {
                this.modifySysPrepProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifySysPrepProfileOperationCompleted);
            }
            this.InvokeAsync("modifySysPrepProfile", new object[] {
                        profileName,
                        profileUuid,
                        sysPrepParams,
                        flags}, this.modifySysPrepProfileOperationCompleted, userState);
        }
        
        private void OnmodifySysPrepProfileOperationCompleted(object arg) {
            if ((this.modifySysPrepProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifySysPrepProfileCompleted(this, new modifySysPrepProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("profile", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public sysPrepProfile getSysPrepProfileInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string profileName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string profileUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getSysPrepProfileInfo", new object[] {
                        profileName,
                        profileUuid,
                        flags});
            return ((sysPrepProfile)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSysPrepProfileInfo(string profileName, string profileUuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSysPrepProfileInfo", new object[] {
                        profileName,
                        profileUuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public sysPrepProfile EndgetSysPrepProfileInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((sysPrepProfile)(results[0]));
        }
        
        /// <remarks/>
        public void getSysPrepProfileInfoAsync(string profileName, string profileUuid, int flags) {
            this.getSysPrepProfileInfoAsync(profileName, profileUuid, flags, null);
        }
        
        /// <remarks/>
        public void getSysPrepProfileInfoAsync(string profileName, string profileUuid, int flags, object userState) {
            if ((this.getSysPrepProfileInfoOperationCompleted == null)) {
                this.getSysPrepProfileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSysPrepProfileInfoOperationCompleted);
            }
            this.InvokeAsync("getSysPrepProfileInfo", new object[] {
                        profileName,
                        profileUuid,
                        flags}, this.getSysPrepProfileInfoOperationCompleted, userState);
        }
        
        private void OngetSysPrepProfileInfoOperationCompleted(object arg) {
            if ((this.getSysPrepProfileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSysPrepProfileInfoCompleted(this, new getSysPrepProfileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo deleteSysPrepProfile([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string profileName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string profileUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("deleteSysPrepProfile", new object[] {
                        profileName,
                        profileUuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteSysPrepProfile(string profileName, string profileUuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteSysPrepProfile", new object[] {
                        profileName,
                        profileUuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddeleteSysPrepProfile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void deleteSysPrepProfileAsync(string profileName, string profileUuid, int flags) {
            this.deleteSysPrepProfileAsync(profileName, profileUuid, flags, null);
        }
        
        /// <remarks/>
        public void deleteSysPrepProfileAsync(string profileName, string profileUuid, int flags, object userState) {
            if ((this.deleteSysPrepProfileOperationCompleted == null)) {
                this.deleteSysPrepProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteSysPrepProfileOperationCompleted);
            }
            this.InvokeAsync("deleteSysPrepProfile", new object[] {
                        profileName,
                        profileUuid,
                        flags}, this.deleteSysPrepProfileOperationCompleted, userState);
        }
        
        private void OndeleteSysPrepProfileOperationCompleted(object arg) {
            if ((this.deleteSysPrepProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteSysPrepProfileCompleted(this, new deleteSysPrepProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumSysPrepProfiles([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out sysPrepProfile[] list) {
            object[] results = this.Invoke("enumSysPrepProfiles", new object[] {
                        flags});
            list = ((sysPrepProfile[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumSysPrepProfiles(int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumSysPrepProfiles", new object[] {
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumSysPrepProfiles(System.IAsyncResult asyncResult, out sysPrepProfile[] list) {
            object[] results = this.EndInvoke(asyncResult);
            list = ((sysPrepProfile[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumSysPrepProfilesAsync(int flags) {
            this.enumSysPrepProfilesAsync(flags, null);
        }
        
        /// <remarks/>
        public void enumSysPrepProfilesAsync(int flags, object userState) {
            if ((this.enumSysPrepProfilesOperationCompleted == null)) {
                this.enumSysPrepProfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumSysPrepProfilesOperationCompleted);
            }
            this.InvokeAsync("enumSysPrepProfiles", new object[] {
                        flags}, this.enumSysPrepProfilesOperationCompleted, userState);
        }
        
        private void OnenumSysPrepProfilesOperationCompleted(object arg) {
            if ((this.enumSysPrepProfilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumSysPrepProfilesCompleted(this, new enumSysPrepProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumSysPrepRepositories([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out sysPrepRepository[] list) {
            object[] results = this.Invoke("enumSysPrepRepositories", new object[] {
                        flags});
            list = ((sysPrepRepository[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumSysPrepRepositories(int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumSysPrepRepositories", new object[] {
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumSysPrepRepositories(System.IAsyncResult asyncResult, out sysPrepRepository[] list) {
            object[] results = this.EndInvoke(asyncResult);
            list = ((sysPrepRepository[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumSysPrepRepositoriesAsync(int flags) {
            this.enumSysPrepRepositoriesAsync(flags, null);
        }
        
        /// <remarks/>
        public void enumSysPrepRepositoriesAsync(int flags, object userState) {
            if ((this.enumSysPrepRepositoriesOperationCompleted == null)) {
                this.enumSysPrepRepositoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumSysPrepRepositoriesOperationCompleted);
            }
            this.InvokeAsync("enumSysPrepRepositories", new object[] {
                        flags}, this.enumSysPrepRepositoriesOperationCompleted, userState);
        }
        
        private void OnenumSysPrepRepositoriesOperationCompleted(object arg) {
            if ((this.enumSysPrepRepositoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumSysPrepRepositoriesCompleted(this, new enumSysPrepRepositoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumSysPrepMasterFileKeys([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string osType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sysPrepFileId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("keys", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string[] keys) {
            object[] results = this.Invoke("enumSysPrepMasterFileKeys", new object[] {
                        osType,
                        sysPrepFileId,
                        flags});
            keys = ((string[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumSysPrepMasterFileKeys(string osType, string sysPrepFileId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumSysPrepMasterFileKeys", new object[] {
                        osType,
                        sysPrepFileId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumSysPrepMasterFileKeys(System.IAsyncResult asyncResult, out string[] keys) {
            object[] results = this.EndInvoke(asyncResult);
            keys = ((string[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumSysPrepMasterFileKeysAsync(string osType, string sysPrepFileId, int flags) {
            this.enumSysPrepMasterFileKeysAsync(osType, sysPrepFileId, flags, null);
        }
        
        /// <remarks/>
        public void enumSysPrepMasterFileKeysAsync(string osType, string sysPrepFileId, int flags, object userState) {
            if ((this.enumSysPrepMasterFileKeysOperationCompleted == null)) {
                this.enumSysPrepMasterFileKeysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumSysPrepMasterFileKeysOperationCompleted);
            }
            this.InvokeAsync("enumSysPrepMasterFileKeys", new object[] {
                        osType,
                        sysPrepFileId,
                        flags}, this.enumSysPrepMasterFileKeysOperationCompleted, userState);
        }
        
        private void OnenumSysPrepMasterFileKeysOperationCompleted(object arg) {
            if ((this.enumSysPrepMasterFileKeysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumSysPrepMasterFileKeysCompleted(this, new enumSysPrepMasterFileKeysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo importStorageToVM([System.Xml.Serialization.XmlElementAttribute("storageVolumeIdList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] storageVolumeIdList, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint protocolType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("importStorageToVM", new object[] {
                        storageVolumeIdList,
                        hostName,
                        uuid,
                        protocolType,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginimportStorageToVM(string[] storageVolumeIdList, string hostName, string uuid, uint protocolType, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("importStorageToVM", new object[] {
                        storageVolumeIdList,
                        hostName,
                        uuid,
                        protocolType,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndimportStorageToVM(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void importStorageToVMAsync(string[] storageVolumeIdList, string hostName, string uuid, uint protocolType, int flags) {
            this.importStorageToVMAsync(storageVolumeIdList, hostName, uuid, protocolType, flags, null);
        }
        
        /// <remarks/>
        public void importStorageToVMAsync(string[] storageVolumeIdList, string hostName, string uuid, uint protocolType, int flags, object userState) {
            if ((this.importStorageToVMOperationCompleted == null)) {
                this.importStorageToVMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportStorageToVMOperationCompleted);
            }
            this.InvokeAsync("importStorageToVM", new object[] {
                        storageVolumeIdList,
                        hostName,
                        uuid,
                        protocolType,
                        flags}, this.importStorageToVMOperationCompleted, userState);
        }
        
        private void OnimportStorageToVMOperationCompleted(object arg) {
            if ((this.importStorageToVMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importStorageToVMCompleted(this, new importStorageToVMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo importStorageToVMEx([System.Xml.Serialization.XmlElementAttribute("storageVolumeIdList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] storageVolumeIdList, [System.Xml.Serialization.XmlElementAttribute("bootNodeList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] bootNodeList, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint protocolType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("importStorageToVMEx", new object[] {
                        storageVolumeIdList,
                        bootNodeList,
                        hostName,
                        uuid,
                        protocolType,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginimportStorageToVMEx(string[] storageVolumeIdList, string[] bootNodeList, string hostName, string uuid, uint protocolType, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("importStorageToVMEx", new object[] {
                        storageVolumeIdList,
                        bootNodeList,
                        hostName,
                        uuid,
                        protocolType,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndimportStorageToVMEx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void importStorageToVMExAsync(string[] storageVolumeIdList, string[] bootNodeList, string hostName, string uuid, uint protocolType, int flags) {
            this.importStorageToVMExAsync(storageVolumeIdList, bootNodeList, hostName, uuid, protocolType, flags, null);
        }
        
        /// <remarks/>
        public void importStorageToVMExAsync(string[] storageVolumeIdList, string[] bootNodeList, string hostName, string uuid, uint protocolType, int flags, object userState) {
            if ((this.importStorageToVMExOperationCompleted == null)) {
                this.importStorageToVMExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportStorageToVMExOperationCompleted);
            }
            this.InvokeAsync("importStorageToVMEx", new object[] {
                        storageVolumeIdList,
                        bootNodeList,
                        hostName,
                        uuid,
                        protocolType,
                        flags}, this.importStorageToVMExOperationCompleted, userState);
        }
        
        private void OnimportStorageToVMExOperationCompleted(object arg) {
            if ((this.importStorageToVMExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importStorageToVMExCompleted(this, new importStorageToVMExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo importStorageToHost([System.Xml.Serialization.XmlElementAttribute("storageVolumeIdList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] storageVolumeIdList, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint protocolType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("importStorageToHost", new object[] {
                        storageVolumeIdList,
                        hostName,
                        protocolType,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginimportStorageToHost(string[] storageVolumeIdList, string hostName, uint protocolType, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("importStorageToHost", new object[] {
                        storageVolumeIdList,
                        hostName,
                        protocolType,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndimportStorageToHost(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void importStorageToHostAsync(string[] storageVolumeIdList, string hostName, uint protocolType, int flags) {
            this.importStorageToHostAsync(storageVolumeIdList, hostName, protocolType, flags, null);
        }
        
        /// <remarks/>
        public void importStorageToHostAsync(string[] storageVolumeIdList, string hostName, uint protocolType, int flags, object userState) {
            if ((this.importStorageToHostOperationCompleted == null)) {
                this.importStorageToHostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportStorageToHostOperationCompleted);
            }
            this.InvokeAsync("importStorageToHost", new object[] {
                        storageVolumeIdList,
                        hostName,
                        protocolType,
                        flags}, this.importStorageToHostOperationCompleted, userState);
        }
        
        private void OnimportStorageToHostOperationCompleted(object arg) {
            if ((this.importStorageToHostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importStorageToHostCompleted(this, new importStorageToHostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo createVirtualMachineFromTemplate([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newVmName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string targetHost, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int count, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string virtualMachineTemplateName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string virtualMachineTemplateUuid, [System.Xml.Serialization.XmlElementAttribute("sysPrepParams", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] keyValuePair[] sysPrepParams, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint protocolType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint snapshotType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("vmList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out virtualMachineInfo[] vmList) {
            object[] results = this.Invoke("createVirtualMachineFromTemplate", new object[] {
                        newVmName,
                        targetHost,
                        count,
                        virtualMachineTemplateName,
                        virtualMachineTemplateUuid,
                        sysPrepParams,
                        protocolType,
                        snapshotType,
                        flags});
            vmList = ((virtualMachineInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateVirtualMachineFromTemplate(string newVmName, string targetHost, int count, string virtualMachineTemplateName, string virtualMachineTemplateUuid, keyValuePair[] sysPrepParams, uint protocolType, uint snapshotType, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createVirtualMachineFromTemplate", new object[] {
                        newVmName,
                        targetHost,
                        count,
                        virtualMachineTemplateName,
                        virtualMachineTemplateUuid,
                        sysPrepParams,
                        protocolType,
                        snapshotType,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndcreateVirtualMachineFromTemplate(System.IAsyncResult asyncResult, out virtualMachineInfo[] vmList) {
            object[] results = this.EndInvoke(asyncResult);
            vmList = ((virtualMachineInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void createVirtualMachineFromTemplateAsync(string newVmName, string targetHost, int count, string virtualMachineTemplateName, string virtualMachineTemplateUuid, keyValuePair[] sysPrepParams, uint protocolType, uint snapshotType, int flags) {
            this.createVirtualMachineFromTemplateAsync(newVmName, targetHost, count, virtualMachineTemplateName, virtualMachineTemplateUuid, sysPrepParams, protocolType, snapshotType, flags, null);
        }
        
        /// <remarks/>
        public void createVirtualMachineFromTemplateAsync(string newVmName, string targetHost, int count, string virtualMachineTemplateName, string virtualMachineTemplateUuid, keyValuePair[] sysPrepParams, uint protocolType, uint snapshotType, int flags, object userState) {
            if ((this.createVirtualMachineFromTemplateOperationCompleted == null)) {
                this.createVirtualMachineFromTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateVirtualMachineFromTemplateOperationCompleted);
            }
            this.InvokeAsync("createVirtualMachineFromTemplate", new object[] {
                        newVmName,
                        targetHost,
                        count,
                        virtualMachineTemplateName,
                        virtualMachineTemplateUuid,
                        sysPrepParams,
                        protocolType,
                        snapshotType,
                        flags}, this.createVirtualMachineFromTemplateOperationCompleted, userState);
        }
        
        private void OncreateVirtualMachineFromTemplateOperationCompleted(object arg) {
            if ((this.createVirtualMachineFromTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createVirtualMachineFromTemplateCompleted(this, new createVirtualMachineFromTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo snapshotVirtualMachine([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostname, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string targetHost, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newVmName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint protocolType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint snapshotType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int count, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("vmList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out virtualMachineInfo[] vmList) {
            object[] results = this.Invoke("snapshotVirtualMachine", new object[] {
                        hostname,
                        uuid,
                        targetHost,
                        newVmName,
                        protocolType,
                        snapshotType,
                        count,
                        flags});
            vmList = ((virtualMachineInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsnapshotVirtualMachine(string hostname, string uuid, string targetHost, string newVmName, uint protocolType, uint snapshotType, int count, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("snapshotVirtualMachine", new object[] {
                        hostname,
                        uuid,
                        targetHost,
                        newVmName,
                        protocolType,
                        snapshotType,
                        count,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndsnapshotVirtualMachine(System.IAsyncResult asyncResult, out virtualMachineInfo[] vmList) {
            object[] results = this.EndInvoke(asyncResult);
            vmList = ((virtualMachineInfo[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void snapshotVirtualMachineAsync(string hostname, string uuid, string targetHost, string newVmName, uint protocolType, uint snapshotType, int count, int flags) {
            this.snapshotVirtualMachineAsync(hostname, uuid, targetHost, newVmName, protocolType, snapshotType, count, flags, null);
        }
        
        /// <remarks/>
        public void snapshotVirtualMachineAsync(string hostname, string uuid, string targetHost, string newVmName, uint protocolType, uint snapshotType, int count, int flags, object userState) {
            if ((this.snapshotVirtualMachineOperationCompleted == null)) {
                this.snapshotVirtualMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsnapshotVirtualMachineOperationCompleted);
            }
            this.InvokeAsync("snapshotVirtualMachine", new object[] {
                        hostname,
                        uuid,
                        targetHost,
                        newVmName,
                        protocolType,
                        snapshotType,
                        count,
                        flags}, this.snapshotVirtualMachineOperationCompleted, userState);
        }
        
        private void OnsnapshotVirtualMachineOperationCompleted(object arg) {
            if ((this.snapshotVirtualMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.snapshotVirtualMachineCompleted(this, new snapshotVirtualMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo deleteVirtualMachine([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string targetHost, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("deleteVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteVirtualMachine(string targetHost, string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddeleteVirtualMachine(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void deleteVirtualMachineAsync(string targetHost, string uuid, int flags) {
            this.deleteVirtualMachineAsync(targetHost, uuid, flags, null);
        }
        
        /// <remarks/>
        public void deleteVirtualMachineAsync(string targetHost, string uuid, int flags, object userState) {
            if ((this.deleteVirtualMachineOperationCompleted == null)) {
                this.deleteVirtualMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteVirtualMachineOperationCompleted);
            }
            this.InvokeAsync("deleteVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, this.deleteVirtualMachineOperationCompleted, userState);
        }
        
        private void OndeleteVirtualMachineOperationCompleted(object arg) {
            if ((this.deleteVirtualMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteVirtualMachineCompleted(this, new deleteVirtualMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo destroyVirtualMachine([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string targetHost, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("destroyVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindestroyVirtualMachine(string targetHost, string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("destroyVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddestroyVirtualMachine(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void destroyVirtualMachineAsync(string targetHost, string uuid, int flags) {
            this.destroyVirtualMachineAsync(targetHost, uuid, flags, null);
        }
        
        /// <remarks/>
        public void destroyVirtualMachineAsync(string targetHost, string uuid, int flags, object userState) {
            if ((this.destroyVirtualMachineOperationCompleted == null)) {
                this.destroyVirtualMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OndestroyVirtualMachineOperationCompleted);
            }
            this.InvokeAsync("destroyVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, this.destroyVirtualMachineOperationCompleted, userState);
        }
        
        private void OndestroyVirtualMachineOperationCompleted(object arg) {
            if ((this.destroyVirtualMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.destroyVirtualMachineCompleted(this, new destroyVirtualMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo startVirtualMachine([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string targetHost, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("startVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstartVirtualMachine(string targetHost, string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("startVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndstartVirtualMachine(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void startVirtualMachineAsync(string targetHost, string uuid, int flags) {
            this.startVirtualMachineAsync(targetHost, uuid, flags, null);
        }
        
        /// <remarks/>
        public void startVirtualMachineAsync(string targetHost, string uuid, int flags, object userState) {
            if ((this.startVirtualMachineOperationCompleted == null)) {
                this.startVirtualMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstartVirtualMachineOperationCompleted);
            }
            this.InvokeAsync("startVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, this.startVirtualMachineOperationCompleted, userState);
        }
        
        private void OnstartVirtualMachineOperationCompleted(object arg) {
            if ((this.startVirtualMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.startVirtualMachineCompleted(this, new startVirtualMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo shutdownVirtualMachine([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string targetHost, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("shutdownVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshutdownVirtualMachine(string targetHost, string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shutdownVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndshutdownVirtualMachine(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void shutdownVirtualMachineAsync(string targetHost, string uuid, int flags) {
            this.shutdownVirtualMachineAsync(targetHost, uuid, flags, null);
        }
        
        /// <remarks/>
        public void shutdownVirtualMachineAsync(string targetHost, string uuid, int flags, object userState) {
            if ((this.shutdownVirtualMachineOperationCompleted == null)) {
                this.shutdownVirtualMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnshutdownVirtualMachineOperationCompleted);
            }
            this.InvokeAsync("shutdownVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, this.shutdownVirtualMachineOperationCompleted, userState);
        }
        
        private void OnshutdownVirtualMachineOperationCompleted(object arg) {
            if ((this.shutdownVirtualMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.shutdownVirtualMachineCompleted(this, new shutdownVirtualMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo pauseVirtualMachine([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string targetHost, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("pauseVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginpauseVirtualMachine(string targetHost, string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("pauseVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndpauseVirtualMachine(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void pauseVirtualMachineAsync(string targetHost, string uuid, int flags) {
            this.pauseVirtualMachineAsync(targetHost, uuid, flags, null);
        }
        
        /// <remarks/>
        public void pauseVirtualMachineAsync(string targetHost, string uuid, int flags, object userState) {
            if ((this.pauseVirtualMachineOperationCompleted == null)) {
                this.pauseVirtualMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpauseVirtualMachineOperationCompleted);
            }
            this.InvokeAsync("pauseVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, this.pauseVirtualMachineOperationCompleted, userState);
        }
        
        private void OnpauseVirtualMachineOperationCompleted(object arg) {
            if ((this.pauseVirtualMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pauseVirtualMachineCompleted(this, new pauseVirtualMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo rebootVirtualMachine([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string targetHost, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("rebootVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginrebootVirtualMachine(string targetHost, string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("rebootVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndrebootVirtualMachine(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void rebootVirtualMachineAsync(string targetHost, string uuid, int flags) {
            this.rebootVirtualMachineAsync(targetHost, uuid, flags, null);
        }
        
        /// <remarks/>
        public void rebootVirtualMachineAsync(string targetHost, string uuid, int flags, object userState) {
            if ((this.rebootVirtualMachineOperationCompleted == null)) {
                this.rebootVirtualMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrebootVirtualMachineOperationCompleted);
            }
            this.InvokeAsync("rebootVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, this.rebootVirtualMachineOperationCompleted, userState);
        }
        
        private void OnrebootVirtualMachineOperationCompleted(object arg) {
            if ((this.rebootVirtualMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rebootVirtualMachineCompleted(this, new rebootVirtualMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo stopVirtualMachine([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string targetHost, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("stopVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstopVirtualMachine(string targetHost, string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("stopVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndstopVirtualMachine(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void stopVirtualMachineAsync(string targetHost, string uuid, int flags) {
            this.stopVirtualMachineAsync(targetHost, uuid, flags, null);
        }
        
        /// <remarks/>
        public void stopVirtualMachineAsync(string targetHost, string uuid, int flags, object userState) {
            if ((this.stopVirtualMachineOperationCompleted == null)) {
                this.stopVirtualMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstopVirtualMachineOperationCompleted);
            }
            this.InvokeAsync("stopVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, this.stopVirtualMachineOperationCompleted, userState);
        }
        
        private void OnstopVirtualMachineOperationCompleted(object arg) {
            if ((this.stopVirtualMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.stopVirtualMachineCompleted(this, new stopVirtualMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo saveVirtualMachine([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string targetHost, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("saveVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsaveVirtualMachine(string targetHost, string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("saveVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndsaveVirtualMachine(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void saveVirtualMachineAsync(string targetHost, string uuid, int flags) {
            this.saveVirtualMachineAsync(targetHost, uuid, flags, null);
        }
        
        /// <remarks/>
        public void saveVirtualMachineAsync(string targetHost, string uuid, int flags, object userState) {
            if ((this.saveVirtualMachineOperationCompleted == null)) {
                this.saveVirtualMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveVirtualMachineOperationCompleted);
            }
            this.InvokeAsync("saveVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, this.saveVirtualMachineOperationCompleted, userState);
        }
        
        private void OnsaveVirtualMachineOperationCompleted(object arg) {
            if ((this.saveVirtualMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveVirtualMachineCompleted(this, new saveVirtualMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("vmNetworkInfos", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public vmNetworkInfo[] enumVirtualMachineNetworks([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("enumVirtualMachineNetworks", new object[] {
                        uuid,
                        flags});
            return ((vmNetworkInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumVirtualMachineNetworks(string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumVirtualMachineNetworks", new object[] {
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public vmNetworkInfo[] EndenumVirtualMachineNetworks(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((vmNetworkInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void enumVirtualMachineNetworksAsync(string uuid, int flags) {
            this.enumVirtualMachineNetworksAsync(uuid, flags, null);
        }
        
        /// <remarks/>
        public void enumVirtualMachineNetworksAsync(string uuid, int flags, object userState) {
            if ((this.enumVirtualMachineNetworksOperationCompleted == null)) {
                this.enumVirtualMachineNetworksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumVirtualMachineNetworksOperationCompleted);
            }
            this.InvokeAsync("enumVirtualMachineNetworks", new object[] {
                        uuid,
                        flags}, this.enumVirtualMachineNetworksOperationCompleted, userState);
        }
        
        private void OnenumVirtualMachineNetworksOperationCompleted(object arg) {
            if ((this.enumVirtualMachineNetworksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumVirtualMachineNetworksCompleted(this, new enumVirtualMachineNetworksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo turnoffVirtualMachine([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string targetHost, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("turnoffVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginturnoffVirtualMachine(string targetHost, string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("turnoffVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndturnoffVirtualMachine(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void turnoffVirtualMachineAsync(string targetHost, string uuid, int flags) {
            this.turnoffVirtualMachineAsync(targetHost, uuid, flags, null);
        }
        
        /// <remarks/>
        public void turnoffVirtualMachineAsync(string targetHost, string uuid, int flags, object userState) {
            if ((this.turnoffVirtualMachineOperationCompleted == null)) {
                this.turnoffVirtualMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnturnoffVirtualMachineOperationCompleted);
            }
            this.InvokeAsync("turnoffVirtualMachine", new object[] {
                        targetHost,
                        uuid,
                        flags}, this.turnoffVirtualMachineOperationCompleted, userState);
        }
        
        private void OnturnoffVirtualMachineOperationCompleted(object arg) {
            if ((this.turnoffVirtualMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.turnoffVirtualMachineCompleted(this, new turnoffVirtualMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo moveVirtualMachine([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fromHost, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fromHostUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string toHost, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string toHostUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out virtualMachineInfo vmInfo) {
            object[] results = this.Invoke("moveVirtualMachine", new object[] {
                        fromHost,
                        fromHostUuid,
                        toHost,
                        toHostUuid,
                        uuid,
                        flags});
            vmInfo = ((virtualMachineInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmoveVirtualMachine(string fromHost, string fromHostUuid, string toHost, string toHostUuid, string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("moveVirtualMachine", new object[] {
                        fromHost,
                        fromHostUuid,
                        toHost,
                        toHostUuid,
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndmoveVirtualMachine(System.IAsyncResult asyncResult, out virtualMachineInfo vmInfo) {
            object[] results = this.EndInvoke(asyncResult);
            vmInfo = ((virtualMachineInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void moveVirtualMachineAsync(string fromHost, string fromHostUuid, string toHost, string toHostUuid, string uuid, int flags) {
            this.moveVirtualMachineAsync(fromHost, fromHostUuid, toHost, toHostUuid, uuid, flags, null);
        }
        
        /// <remarks/>
        public void moveVirtualMachineAsync(string fromHost, string fromHostUuid, string toHost, string toHostUuid, string uuid, int flags, object userState) {
            if ((this.moveVirtualMachineOperationCompleted == null)) {
                this.moveVirtualMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveVirtualMachineOperationCompleted);
            }
            this.InvokeAsync("moveVirtualMachine", new object[] {
                        fromHost,
                        fromHostUuid,
                        toHost,
                        toHostUuid,
                        uuid,
                        flags}, this.moveVirtualMachineOperationCompleted, userState);
        }
        
        private void OnmoveVirtualMachineOperationCompleted(object arg) {
            if ((this.moveVirtualMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveVirtualMachineCompleted(this, new moveVirtualMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo personalizeVirtualMachine([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string targetHost, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string vmOsType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int vmDiskIndex, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sysPrepProfileName, [System.Xml.Serialization.XmlElementAttribute("sysPrepParams", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] keyValuePair[] sysPrepParams) {
            object[] results = this.Invoke("personalizeVirtualMachine", new object[] {
                        targetHost,
                        vmOsType,
                        vmDiskIndex,
                        sysPrepProfileName,
                        sysPrepParams});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginpersonalizeVirtualMachine(string targetHost, string vmOsType, int vmDiskIndex, string sysPrepProfileName, keyValuePair[] sysPrepParams, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("personalizeVirtualMachine", new object[] {
                        targetHost,
                        vmOsType,
                        vmDiskIndex,
                        sysPrepProfileName,
                        sysPrepParams}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndpersonalizeVirtualMachine(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void personalizeVirtualMachineAsync(string targetHost, string vmOsType, int vmDiskIndex, string sysPrepProfileName, keyValuePair[] sysPrepParams) {
            this.personalizeVirtualMachineAsync(targetHost, vmOsType, vmDiskIndex, sysPrepProfileName, sysPrepParams, null);
        }
        
        /// <remarks/>
        public void personalizeVirtualMachineAsync(string targetHost, string vmOsType, int vmDiskIndex, string sysPrepProfileName, keyValuePair[] sysPrepParams, object userState) {
            if ((this.personalizeVirtualMachineOperationCompleted == null)) {
                this.personalizeVirtualMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpersonalizeVirtualMachineOperationCompleted);
            }
            this.InvokeAsync("personalizeVirtualMachine", new object[] {
                        targetHost,
                        vmOsType,
                        vmDiskIndex,
                        sysPrepProfileName,
                        sysPrepParams}, this.personalizeVirtualMachineOperationCompleted, userState);
        }
        
        private void OnpersonalizeVirtualMachineOperationCompleted(object arg) {
            if ((this.personalizeVirtualMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.personalizeVirtualMachineCompleted(this, new personalizeVirtualMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public virtualMachineTemplateInfo createVirtualMachineTemplate([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageProfileName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hardwareProfileName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sysPrepProfileName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageManifestName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string metadataStorageRepositoryName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageProfileUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hardwareProfileUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sysPrepProfileUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageManifestUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string metadataStorageRepositoryUuid) {
            object[] results = this.Invoke("createVirtualMachineTemplate", new object[] {
                        friendlyName,
                        description,
                        storageProfileName,
                        hardwareProfileName,
                        sysPrepProfileName,
                        storageManifestName,
                        metadataStorageRepositoryName,
                        storageProfileUuid,
                        hardwareProfileUuid,
                        sysPrepProfileUuid,
                        storageManifestUuid,
                        metadataStorageRepositoryUuid});
            return ((virtualMachineTemplateInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateVirtualMachineTemplate(string friendlyName, string description, string storageProfileName, string hardwareProfileName, string sysPrepProfileName, string storageManifestName, string metadataStorageRepositoryName, string storageProfileUuid, string hardwareProfileUuid, string sysPrepProfileUuid, string storageManifestUuid, string metadataStorageRepositoryUuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createVirtualMachineTemplate", new object[] {
                        friendlyName,
                        description,
                        storageProfileName,
                        hardwareProfileName,
                        sysPrepProfileName,
                        storageManifestName,
                        metadataStorageRepositoryName,
                        storageProfileUuid,
                        hardwareProfileUuid,
                        sysPrepProfileUuid,
                        storageManifestUuid,
                        metadataStorageRepositoryUuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public virtualMachineTemplateInfo EndcreateVirtualMachineTemplate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((virtualMachineTemplateInfo)(results[0]));
        }
        
        /// <remarks/>
        public void createVirtualMachineTemplateAsync(string friendlyName, string description, string storageProfileName, string hardwareProfileName, string sysPrepProfileName, string storageManifestName, string metadataStorageRepositoryName, string storageProfileUuid, string hardwareProfileUuid, string sysPrepProfileUuid, string storageManifestUuid, string metadataStorageRepositoryUuid) {
            this.createVirtualMachineTemplateAsync(friendlyName, description, storageProfileName, hardwareProfileName, sysPrepProfileName, storageManifestName, metadataStorageRepositoryName, storageProfileUuid, hardwareProfileUuid, sysPrepProfileUuid, storageManifestUuid, metadataStorageRepositoryUuid, null);
        }
        
        /// <remarks/>
        public void createVirtualMachineTemplateAsync(string friendlyName, string description, string storageProfileName, string hardwareProfileName, string sysPrepProfileName, string storageManifestName, string metadataStorageRepositoryName, string storageProfileUuid, string hardwareProfileUuid, string sysPrepProfileUuid, string storageManifestUuid, string metadataStorageRepositoryUuid, object userState) {
            if ((this.createVirtualMachineTemplateOperationCompleted == null)) {
                this.createVirtualMachineTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateVirtualMachineTemplateOperationCompleted);
            }
            this.InvokeAsync("createVirtualMachineTemplate", new object[] {
                        friendlyName,
                        description,
                        storageProfileName,
                        hardwareProfileName,
                        sysPrepProfileName,
                        storageManifestName,
                        metadataStorageRepositoryName,
                        storageProfileUuid,
                        hardwareProfileUuid,
                        sysPrepProfileUuid,
                        storageManifestUuid,
                        metadataStorageRepositoryUuid}, this.createVirtualMachineTemplateOperationCompleted, userState);
        }
        
        private void OncreateVirtualMachineTemplateOperationCompleted(object arg) {
            if ((this.createVirtualMachineTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createVirtualMachineTemplateCompleted(this, new createVirtualMachineTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo deleteVirtualMachineTemplate([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("deleteVirtualMachineTemplate", new object[] {
                        friendlyName,
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteVirtualMachineTemplate(string friendlyName, string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteVirtualMachineTemplate", new object[] {
                        friendlyName,
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddeleteVirtualMachineTemplate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void deleteVirtualMachineTemplateAsync(string friendlyName, string uuid, int flags) {
            this.deleteVirtualMachineTemplateAsync(friendlyName, uuid, flags, null);
        }
        
        /// <remarks/>
        public void deleteVirtualMachineTemplateAsync(string friendlyName, string uuid, int flags, object userState) {
            if ((this.deleteVirtualMachineTemplateOperationCompleted == null)) {
                this.deleteVirtualMachineTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteVirtualMachineTemplateOperationCompleted);
            }
            this.InvokeAsync("deleteVirtualMachineTemplate", new object[] {
                        friendlyName,
                        uuid,
                        flags}, this.deleteVirtualMachineTemplateOperationCompleted, userState);
        }
        
        private void OndeleteVirtualMachineTemplateOperationCompleted(object arg) {
            if ((this.deleteVirtualMachineTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteVirtualMachineTemplateCompleted(this, new deleteVirtualMachineTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public virtualMachineTemplateInfo modifyVirtualMachineTemplate([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageProfileUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hardwareProfileUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sysPrepProfileUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageManifestUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string metadataStorageRepositoryUuid) {
            object[] results = this.Invoke("modifyVirtualMachineTemplate", new object[] {
                        uuid,
                        friendlyName,
                        description,
                        storageProfileUuid,
                        hardwareProfileUuid,
                        sysPrepProfileUuid,
                        storageManifestUuid,
                        metadataStorageRepositoryUuid});
            return ((virtualMachineTemplateInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmodifyVirtualMachineTemplate(string uuid, string friendlyName, string description, string storageProfileUuid, string hardwareProfileUuid, string sysPrepProfileUuid, string storageManifestUuid, string metadataStorageRepositoryUuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("modifyVirtualMachineTemplate", new object[] {
                        uuid,
                        friendlyName,
                        description,
                        storageProfileUuid,
                        hardwareProfileUuid,
                        sysPrepProfileUuid,
                        storageManifestUuid,
                        metadataStorageRepositoryUuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public virtualMachineTemplateInfo EndmodifyVirtualMachineTemplate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((virtualMachineTemplateInfo)(results[0]));
        }
        
        /// <remarks/>
        public void modifyVirtualMachineTemplateAsync(string uuid, string friendlyName, string description, string storageProfileUuid, string hardwareProfileUuid, string sysPrepProfileUuid, string storageManifestUuid, string metadataStorageRepositoryUuid) {
            this.modifyVirtualMachineTemplateAsync(uuid, friendlyName, description, storageProfileUuid, hardwareProfileUuid, sysPrepProfileUuid, storageManifestUuid, metadataStorageRepositoryUuid, null);
        }
        
        /// <remarks/>
        public void modifyVirtualMachineTemplateAsync(string uuid, string friendlyName, string description, string storageProfileUuid, string hardwareProfileUuid, string sysPrepProfileUuid, string storageManifestUuid, string metadataStorageRepositoryUuid, object userState) {
            if ((this.modifyVirtualMachineTemplateOperationCompleted == null)) {
                this.modifyVirtualMachineTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyVirtualMachineTemplateOperationCompleted);
            }
            this.InvokeAsync("modifyVirtualMachineTemplate", new object[] {
                        uuid,
                        friendlyName,
                        description,
                        storageProfileUuid,
                        hardwareProfileUuid,
                        sysPrepProfileUuid,
                        storageManifestUuid,
                        metadataStorageRepositoryUuid}, this.modifyVirtualMachineTemplateOperationCompleted, userState);
        }
        
        private void OnmodifyVirtualMachineTemplateOperationCompleted(object arg) {
            if ((this.modifyVirtualMachineTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyVirtualMachineTemplateCompleted(this, new modifyVirtualMachineTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public virtualMachineTemplateInfo getVirtualMachineTemplateInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string friendlyName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid) {
            object[] results = this.Invoke("getVirtualMachineTemplateInfo", new object[] {
                        friendlyName,
                        uuid});
            return ((virtualMachineTemplateInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetVirtualMachineTemplateInfo(string friendlyName, string uuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getVirtualMachineTemplateInfo", new object[] {
                        friendlyName,
                        uuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public virtualMachineTemplateInfo EndgetVirtualMachineTemplateInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((virtualMachineTemplateInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getVirtualMachineTemplateInfoAsync(string friendlyName, string uuid) {
            this.getVirtualMachineTemplateInfoAsync(friendlyName, uuid, null);
        }
        
        /// <remarks/>
        public void getVirtualMachineTemplateInfoAsync(string friendlyName, string uuid, object userState) {
            if ((this.getVirtualMachineTemplateInfoOperationCompleted == null)) {
                this.getVirtualMachineTemplateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVirtualMachineTemplateInfoOperationCompleted);
            }
            this.InvokeAsync("getVirtualMachineTemplateInfo", new object[] {
                        friendlyName,
                        uuid}, this.getVirtualMachineTemplateInfoOperationCompleted, userState);
        }
        
        private void OngetVirtualMachineTemplateInfoOperationCompleted(object arg) {
            if ((this.getVirtualMachineTemplateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVirtualMachineTemplateInfoCompleted(this, new getVirtualMachineTemplateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public virtualMachineTemplateInfo[] enumVirtualMachineTemplates() {
            object[] results = this.Invoke("enumVirtualMachineTemplates", new object[0]);
            return ((virtualMachineTemplateInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumVirtualMachineTemplates(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumVirtualMachineTemplates", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public virtualMachineTemplateInfo[] EndenumVirtualMachineTemplates(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((virtualMachineTemplateInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void enumVirtualMachineTemplatesAsync() {
            this.enumVirtualMachineTemplatesAsync(null);
        }
        
        /// <remarks/>
        public void enumVirtualMachineTemplatesAsync(object userState) {
            if ((this.enumVirtualMachineTemplatesOperationCompleted == null)) {
                this.enumVirtualMachineTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumVirtualMachineTemplatesOperationCompleted);
            }
            this.InvokeAsync("enumVirtualMachineTemplates", new object[0], this.enumVirtualMachineTemplatesOperationCompleted, userState);
        }
        
        private void OnenumVirtualMachineTemplatesOperationCompleted(object arg) {
            if ((this.enumVirtualMachineTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumVirtualMachineTemplatesCompleted(this, new enumVirtualMachineTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo deployTemplateAsVirtualMachine([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string vmName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string targetHost, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string virtualMachineTemplateName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string virtualMachineTemplateUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out virtualMachineInfo vmInfo) {
            object[] results = this.Invoke("deployTemplateAsVirtualMachine", new object[] {
                        vmName,
                        targetHost,
                        virtualMachineTemplateName,
                        virtualMachineTemplateUuid,
                        flags});
            vmInfo = ((virtualMachineInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeployTemplateAsVirtualMachine(string vmName, string targetHost, string virtualMachineTemplateName, string virtualMachineTemplateUuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deployTemplateAsVirtualMachine", new object[] {
                        vmName,
                        targetHost,
                        virtualMachineTemplateName,
                        virtualMachineTemplateUuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddeployTemplateAsVirtualMachine(System.IAsyncResult asyncResult, out virtualMachineInfo vmInfo) {
            object[] results = this.EndInvoke(asyncResult);
            vmInfo = ((virtualMachineInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void deployTemplateAsVirtualMachineAsync(string vmName, string targetHost, string virtualMachineTemplateName, string virtualMachineTemplateUuid, int flags) {
            this.deployTemplateAsVirtualMachineAsync(vmName, targetHost, virtualMachineTemplateName, virtualMachineTemplateUuid, flags, null);
        }
        
        /// <remarks/>
        public void deployTemplateAsVirtualMachineAsync(string vmName, string targetHost, string virtualMachineTemplateName, string virtualMachineTemplateUuid, int flags, object userState) {
            if ((this.deployTemplateAsVirtualMachineOperationCompleted == null)) {
                this.deployTemplateAsVirtualMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeployTemplateAsVirtualMachineOperationCompleted);
            }
            this.InvokeAsync("deployTemplateAsVirtualMachine", new object[] {
                        vmName,
                        targetHost,
                        virtualMachineTemplateName,
                        virtualMachineTemplateUuid,
                        flags}, this.deployTemplateAsVirtualMachineOperationCompleted, userState);
        }
        
        private void OndeployTemplateAsVirtualMachineOperationCompleted(object arg) {
            if ((this.deployTemplateAsVirtualMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deployTemplateAsVirtualMachineCompleted(this, new deployTemplateAsVirtualMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("defaultExportPath", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getDefaultExportPath() {
            object[] results = this.Invoke("getDefaultExportPath", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDefaultExportPath(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDefaultExportPath", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetDefaultExportPath(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDefaultExportPathAsync() {
            this.getDefaultExportPathAsync(null);
        }
        
        /// <remarks/>
        public void getDefaultExportPathAsync(object userState) {
            if ((this.getDefaultExportPathOperationCompleted == null)) {
                this.getDefaultExportPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDefaultExportPathOperationCompleted);
            }
            this.InvokeAsync("getDefaultExportPath", new object[0], this.getDefaultExportPathOperationCompleted, userState);
        }
        
        private void OngetDefaultExportPathOperationCompleted(object arg) {
            if ((this.getDefaultExportPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDefaultExportPathCompleted(this, new getDefaultExportPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enableSRP([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] srpsitemodet mode, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string persistPath, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out SRPSiteInfo siteInfo) {
            object[] results = this.Invoke("enableSRP", new object[] {
                        name,
                        description,
                        mode,
                        persistPath,
                        flags});
            siteInfo = ((SRPSiteInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenableSRP(string name, string description, srpsitemodet mode, string persistPath, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enableSRP", new object[] {
                        name,
                        description,
                        mode,
                        persistPath,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenableSRP(System.IAsyncResult asyncResult, out SRPSiteInfo siteInfo) {
            object[] results = this.EndInvoke(asyncResult);
            siteInfo = ((SRPSiteInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enableSRPAsync(string name, string description, srpsitemodet mode, string persistPath, int flags) {
            this.enableSRPAsync(name, description, mode, persistPath, flags, null);
        }
        
        /// <remarks/>
        public void enableSRPAsync(string name, string description, srpsitemodet mode, string persistPath, int flags, object userState) {
            if ((this.enableSRPOperationCompleted == null)) {
                this.enableSRPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenableSRPOperationCompleted);
            }
            this.InvokeAsync("enableSRP", new object[] {
                        name,
                        description,
                        mode,
                        persistPath,
                        flags}, this.enableSRPOperationCompleted, userState);
        }
        
        private void OnenableSRPOperationCompleted(object arg) {
            if ((this.enableSRPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enableSRPCompleted(this, new enableSRPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo destroySRP() {
            object[] results = this.Invoke("destroySRP", new object[0]);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindestroySRP(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("destroySRP", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddestroySRP(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void destroySRPAsync() {
            this.destroySRPAsync(null);
        }
        
        /// <remarks/>
        public void destroySRPAsync(object userState) {
            if ((this.destroySRPOperationCompleted == null)) {
                this.destroySRPOperationCompleted = new System.Threading.SendOrPostCallback(this.OndestroySRPOperationCompleted);
            }
            this.InvokeAsync("destroySRP", new object[0], this.destroySRPOperationCompleted, userState);
        }
        
        private void OndestroySRPOperationCompleted(object arg) {
            if ((this.destroySRPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.destroySRPCompleted(this, new destroySRPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo modifySRPSite([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SRPSiteInfo newValues, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out SRPSiteInfo modifiedSiteInfo) {
            object[] results = this.Invoke("modifySRPSite", new object[] {
                        newValues,
                        flags});
            modifiedSiteInfo = ((SRPSiteInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmodifySRPSite(SRPSiteInfo newValues, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("modifySRPSite", new object[] {
                        newValues,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndmodifySRPSite(System.IAsyncResult asyncResult, out SRPSiteInfo modifiedSiteInfo) {
            object[] results = this.EndInvoke(asyncResult);
            modifiedSiteInfo = ((SRPSiteInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void modifySRPSiteAsync(SRPSiteInfo newValues, int flags) {
            this.modifySRPSiteAsync(newValues, flags, null);
        }
        
        /// <remarks/>
        public void modifySRPSiteAsync(SRPSiteInfo newValues, int flags, object userState) {
            if ((this.modifySRPSiteOperationCompleted == null)) {
                this.modifySRPSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifySRPSiteOperationCompleted);
            }
            this.InvokeAsync("modifySRPSite", new object[] {
                        newValues,
                        flags}, this.modifySRPSiteOperationCompleted, userState);
        }
        
        private void OnmodifySRPSiteOperationCompleted(object arg) {
            if ((this.modifySRPSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifySRPSiteCompleted(this, new modifySRPSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo switchSRPSiteMode([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] srpsitemodet toMode, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out SRPSiteInfo modifiedSiteInfo) {
            object[] results = this.Invoke("switchSRPSiteMode", new object[] {
                        toMode});
            modifiedSiteInfo = ((SRPSiteInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginswitchSRPSiteMode(srpsitemodet toMode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("switchSRPSiteMode", new object[] {
                        toMode}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndswitchSRPSiteMode(System.IAsyncResult asyncResult, out SRPSiteInfo modifiedSiteInfo) {
            object[] results = this.EndInvoke(asyncResult);
            modifiedSiteInfo = ((SRPSiteInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void switchSRPSiteModeAsync(srpsitemodet toMode) {
            this.switchSRPSiteModeAsync(toMode, null);
        }
        
        /// <remarks/>
        public void switchSRPSiteModeAsync(srpsitemodet toMode, object userState) {
            if ((this.switchSRPSiteModeOperationCompleted == null)) {
                this.switchSRPSiteModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnswitchSRPSiteModeOperationCompleted);
            }
            this.InvokeAsync("switchSRPSiteMode", new object[] {
                        toMode}, this.switchSRPSiteModeOperationCompleted, userState);
        }
        
        private void OnswitchSRPSiteModeOperationCompleted(object arg) {
            if ((this.switchSRPSiteModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.switchSRPSiteModeCompleted(this, new switchSRPSiteModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo disableSRP() {
            object[] results = this.Invoke("disableSRP", new object[0]);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindisableSRP(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("disableSRP", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddisableSRP(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void disableSRPAsync() {
            this.disableSRPAsync(null);
        }
        
        /// <remarks/>
        public void disableSRPAsync(object userState) {
            if ((this.disableSRPOperationCompleted == null)) {
                this.disableSRPOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisableSRPOperationCompleted);
            }
            this.InvokeAsync("disableSRP", new object[0], this.disableSRPOperationCompleted, userState);
        }
        
        private void OndisableSRPOperationCompleted(object arg) {
            if ((this.disableSRPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disableSRPCompleted(this, new disableSRPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("siteInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPSiteInfo getSRPSiteInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeHosts, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeStorageSystems) {
            object[] results = this.Invoke("getSRPSiteInfo", new object[] {
                        includeHosts,
                        includeStorageSystems});
            return ((SRPSiteInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSRPSiteInfo(bool includeHosts, bool includeStorageSystems, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSRPSiteInfo", new object[] {
                        includeHosts,
                        includeStorageSystems}, callback, asyncState);
        }
        
        /// <remarks/>
        public SRPSiteInfo EndgetSRPSiteInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPSiteInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getSRPSiteInfoAsync(bool includeHosts, bool includeStorageSystems) {
            this.getSRPSiteInfoAsync(includeHosts, includeStorageSystems, null);
        }
        
        /// <remarks/>
        public void getSRPSiteInfoAsync(bool includeHosts, bool includeStorageSystems, object userState) {
            if ((this.getSRPSiteInfoOperationCompleted == null)) {
                this.getSRPSiteInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSRPSiteInfoOperationCompleted);
            }
            this.InvokeAsync("getSRPSiteInfo", new object[] {
                        includeHosts,
                        includeStorageSystems}, this.getSRPSiteInfoOperationCompleted, userState);
        }
        
        private void OngetSRPSiteInfoOperationCompleted(object arg) {
            if ((this.getSRPSiteInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSRPSiteInfoCompleted(this, new getSRPSiteInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("stateInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPStateInfo getSRPState() {
            object[] results = this.Invoke("getSRPState", new object[0]);
            return ((SRPStateInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSRPState(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSRPState", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public SRPStateInfo EndgetSRPState(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPStateInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getSRPStateAsync() {
            this.getSRPStateAsync(null);
        }
        
        /// <remarks/>
        public void getSRPStateAsync(object userState) {
            if ((this.getSRPStateOperationCompleted == null)) {
                this.getSRPStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSRPStateOperationCompleted);
            }
            this.InvokeAsync("getSRPState", new object[0], this.getSRPStateOperationCompleted, userState);
        }
        
        private void OngetSRPStateOperationCompleted(object arg) {
            if ((this.getSRPStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSRPStateCompleted(this, new getSRPStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo addRemoteSRPSite([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref SRPSiteInfo siteInfo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("addRemoteSRPSite", new object[] {
                        siteInfo,
                        flags});
            siteInfo = ((SRPSiteInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddRemoteSRPSite(SRPSiteInfo siteInfo, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addRemoteSRPSite", new object[] {
                        siteInfo,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndaddRemoteSRPSite(System.IAsyncResult asyncResult, out SRPSiteInfo siteInfo) {
            object[] results = this.EndInvoke(asyncResult);
            siteInfo = ((SRPSiteInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void addRemoteSRPSiteAsync(SRPSiteInfo siteInfo, int flags) {
            this.addRemoteSRPSiteAsync(siteInfo, flags, null);
        }
        
        /// <remarks/>
        public void addRemoteSRPSiteAsync(SRPSiteInfo siteInfo, int flags, object userState) {
            if ((this.addRemoteSRPSiteOperationCompleted == null)) {
                this.addRemoteSRPSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddRemoteSRPSiteOperationCompleted);
            }
            this.InvokeAsync("addRemoteSRPSite", new object[] {
                        siteInfo,
                        flags}, this.addRemoteSRPSiteOperationCompleted, userState);
        }
        
        private void OnaddRemoteSRPSiteOperationCompleted(object arg) {
            if ((this.addRemoteSRPSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addRemoteSRPSiteCompleted(this, new addRemoteSRPSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("siteInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPSiteInfo getRemoteSRPSiteInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeHosts, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeStorageSystems) {
            object[] results = this.Invoke("getRemoteSRPSiteInfo", new object[] {
                        includeHosts,
                        includeStorageSystems});
            return ((SRPSiteInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetRemoteSRPSiteInfo(bool includeHosts, bool includeStorageSystems, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getRemoteSRPSiteInfo", new object[] {
                        includeHosts,
                        includeStorageSystems}, callback, asyncState);
        }
        
        /// <remarks/>
        public SRPSiteInfo EndgetRemoteSRPSiteInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPSiteInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getRemoteSRPSiteInfoAsync(bool includeHosts, bool includeStorageSystems) {
            this.getRemoteSRPSiteInfoAsync(includeHosts, includeStorageSystems, null);
        }
        
        /// <remarks/>
        public void getRemoteSRPSiteInfoAsync(bool includeHosts, bool includeStorageSystems, object userState) {
            if ((this.getRemoteSRPSiteInfoOperationCompleted == null)) {
                this.getRemoteSRPSiteInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRemoteSRPSiteInfoOperationCompleted);
            }
            this.InvokeAsync("getRemoteSRPSiteInfo", new object[] {
                        includeHosts,
                        includeStorageSystems}, this.getRemoteSRPSiteInfoOperationCompleted, userState);
        }
        
        private void OngetRemoteSRPSiteInfoOperationCompleted(object arg) {
            if ((this.getRemoteSRPSiteInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRemoteSRPSiteInfoCompleted(this, new getRemoteSRPSiteInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo modifyRemoteSRPSite([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SRPSiteInfo newValues, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out SRPSiteInfo modifiedSiteInfo) {
            object[] results = this.Invoke("modifyRemoteSRPSite", new object[] {
                        newValues,
                        flags});
            modifiedSiteInfo = ((SRPSiteInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmodifyRemoteSRPSite(SRPSiteInfo newValues, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("modifyRemoteSRPSite", new object[] {
                        newValues,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndmodifyRemoteSRPSite(System.IAsyncResult asyncResult, out SRPSiteInfo modifiedSiteInfo) {
            object[] results = this.EndInvoke(asyncResult);
            modifiedSiteInfo = ((SRPSiteInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void modifyRemoteSRPSiteAsync(SRPSiteInfo newValues, int flags) {
            this.modifyRemoteSRPSiteAsync(newValues, flags, null);
        }
        
        /// <remarks/>
        public void modifyRemoteSRPSiteAsync(SRPSiteInfo newValues, int flags, object userState) {
            if ((this.modifyRemoteSRPSiteOperationCompleted == null)) {
                this.modifyRemoteSRPSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyRemoteSRPSiteOperationCompleted);
            }
            this.InvokeAsync("modifyRemoteSRPSite", new object[] {
                        newValues,
                        flags}, this.modifyRemoteSRPSiteOperationCompleted, userState);
        }
        
        private void OnmodifyRemoteSRPSiteOperationCompleted(object arg) {
            if ((this.modifyRemoteSRPSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyRemoteSRPSiteCompleted(this, new modifyRemoteSRPSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo removeRemoteSRPSite() {
            object[] results = this.Invoke("removeRemoteSRPSite", new object[0]);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveRemoteSRPSite(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeRemoteSRPSite", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndremoveRemoteSRPSite(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void removeRemoteSRPSiteAsync() {
            this.removeRemoteSRPSiteAsync(null);
        }
        
        /// <remarks/>
        public void removeRemoteSRPSiteAsync(object userState) {
            if ((this.removeRemoteSRPSiteOperationCompleted == null)) {
                this.removeRemoteSRPSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveRemoteSRPSiteOperationCompleted);
            }
            this.InvokeAsync("removeRemoteSRPSite", new object[0], this.removeRemoteSRPSiteOperationCompleted, userState);
        }
        
        private void OnremoveRemoteSRPSiteOperationCompleted(object arg) {
            if ((this.removeRemoteSRPSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeRemoteSRPSiteCompleted(this, new removeRemoteSRPSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("siteInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPSiteInfo getSRPSiteInfoByUuid([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeHosts, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeStorageSystems) {
            object[] results = this.Invoke("getSRPSiteInfoByUuid", new object[] {
                        uuid,
                        includeHosts,
                        includeStorageSystems});
            return ((SRPSiteInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSRPSiteInfoByUuid(string uuid, bool includeHosts, bool includeStorageSystems, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSRPSiteInfoByUuid", new object[] {
                        uuid,
                        includeHosts,
                        includeStorageSystems}, callback, asyncState);
        }
        
        /// <remarks/>
        public SRPSiteInfo EndgetSRPSiteInfoByUuid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPSiteInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getSRPSiteInfoByUuidAsync(string uuid, bool includeHosts, bool includeStorageSystems) {
            this.getSRPSiteInfoByUuidAsync(uuid, includeHosts, includeStorageSystems, null);
        }
        
        /// <remarks/>
        public void getSRPSiteInfoByUuidAsync(string uuid, bool includeHosts, bool includeStorageSystems, object userState) {
            if ((this.getSRPSiteInfoByUuidOperationCompleted == null)) {
                this.getSRPSiteInfoByUuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSRPSiteInfoByUuidOperationCompleted);
            }
            this.InvokeAsync("getSRPSiteInfoByUuid", new object[] {
                        uuid,
                        includeHosts,
                        includeStorageSystems}, this.getSRPSiteInfoByUuidOperationCompleted, userState);
        }
        
        private void OngetSRPSiteInfoByUuidOperationCompleted(object arg) {
            if ((this.getSRPSiteInfoByUuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSRPSiteInfoByUuidCompleted(this, new getSRPSiteInfoByUuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo addSRPStorageRepositoryAssociation([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageRepositoryId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string remoteStorageRepositoryId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out SRPStorageRepositoryAssocDetail srAssoc) {
            object[] results = this.Invoke("addSRPStorageRepositoryAssociation", new object[] {
                        storageRepositoryId,
                        remoteStorageRepositoryId,
                        flags});
            srAssoc = ((SRPStorageRepositoryAssocDetail)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddSRPStorageRepositoryAssociation(string storageRepositoryId, string remoteStorageRepositoryId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addSRPStorageRepositoryAssociation", new object[] {
                        storageRepositoryId,
                        remoteStorageRepositoryId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndaddSRPStorageRepositoryAssociation(System.IAsyncResult asyncResult, out SRPStorageRepositoryAssocDetail srAssoc) {
            object[] results = this.EndInvoke(asyncResult);
            srAssoc = ((SRPStorageRepositoryAssocDetail)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void addSRPStorageRepositoryAssociationAsync(string storageRepositoryId, string remoteStorageRepositoryId, int flags) {
            this.addSRPStorageRepositoryAssociationAsync(storageRepositoryId, remoteStorageRepositoryId, flags, null);
        }
        
        /// <remarks/>
        public void addSRPStorageRepositoryAssociationAsync(string storageRepositoryId, string remoteStorageRepositoryId, int flags, object userState) {
            if ((this.addSRPStorageRepositoryAssociationOperationCompleted == null)) {
                this.addSRPStorageRepositoryAssociationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddSRPStorageRepositoryAssociationOperationCompleted);
            }
            this.InvokeAsync("addSRPStorageRepositoryAssociation", new object[] {
                        storageRepositoryId,
                        remoteStorageRepositoryId,
                        flags}, this.addSRPStorageRepositoryAssociationOperationCompleted, userState);
        }
        
        private void OnaddSRPStorageRepositoryAssociationOperationCompleted(object arg) {
            if ((this.addSRPStorageRepositoryAssociationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addSRPStorageRepositoryAssociationCompleted(this, new addSRPStorageRepositoryAssociationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("srAssocList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPStorageRepositoryAssocDetail[] enumSRPStorageRepositoryAssociations([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool detailed, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("enumSRPStorageRepositoryAssociations", new object[] {
                        detailed,
                        filters,
                        flags});
            return ((SRPStorageRepositoryAssocDetail[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumSRPStorageRepositoryAssociations(bool detailed, string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumSRPStorageRepositoryAssociations", new object[] {
                        detailed,
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public SRPStorageRepositoryAssocDetail[] EndenumSRPStorageRepositoryAssociations(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPStorageRepositoryAssocDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void enumSRPStorageRepositoryAssociationsAsync(bool detailed, string filters, int flags) {
            this.enumSRPStorageRepositoryAssociationsAsync(detailed, filters, flags, null);
        }
        
        /// <remarks/>
        public void enumSRPStorageRepositoryAssociationsAsync(bool detailed, string filters, int flags, object userState) {
            if ((this.enumSRPStorageRepositoryAssociationsOperationCompleted == null)) {
                this.enumSRPStorageRepositoryAssociationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumSRPStorageRepositoryAssociationsOperationCompleted);
            }
            this.InvokeAsync("enumSRPStorageRepositoryAssociations", new object[] {
                        detailed,
                        filters,
                        flags}, this.enumSRPStorageRepositoryAssociationsOperationCompleted, userState);
        }
        
        private void OnenumSRPStorageRepositoryAssociationsOperationCompleted(object arg) {
            if ((this.enumSRPStorageRepositoryAssociationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumSRPStorageRepositoryAssociationsCompleted(this, new enumSRPStorageRepositoryAssociationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseElementName="getSRPStorageRepositoryAssociationResponse", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("srAssocList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPStorageRepositoryAssocDetail[] getSRPStorageRepositoryAssociations([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageRepositoryId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool detailed, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getSRPStorageRepositoryAssociations", new object[] {
                        storageRepositoryId,
                        detailed,
                        flags});
            return ((SRPStorageRepositoryAssocDetail[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSRPStorageRepositoryAssociations(string storageRepositoryId, bool detailed, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSRPStorageRepositoryAssociations", new object[] {
                        storageRepositoryId,
                        detailed,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public SRPStorageRepositoryAssocDetail[] EndgetSRPStorageRepositoryAssociations(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPStorageRepositoryAssocDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getSRPStorageRepositoryAssociationsAsync(string storageRepositoryId, bool detailed, int flags) {
            this.getSRPStorageRepositoryAssociationsAsync(storageRepositoryId, detailed, flags, null);
        }
        
        /// <remarks/>
        public void getSRPStorageRepositoryAssociationsAsync(string storageRepositoryId, bool detailed, int flags, object userState) {
            if ((this.getSRPStorageRepositoryAssociationsOperationCompleted == null)) {
                this.getSRPStorageRepositoryAssociationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSRPStorageRepositoryAssociationsOperationCompleted);
            }
            this.InvokeAsync("getSRPStorageRepositoryAssociations", new object[] {
                        storageRepositoryId,
                        detailed,
                        flags}, this.getSRPStorageRepositoryAssociationsOperationCompleted, userState);
        }
        
        private void OngetSRPStorageRepositoryAssociationsOperationCompleted(object arg) {
            if ((this.getSRPStorageRepositoryAssociationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSRPStorageRepositoryAssociationsCompleted(this, new getSRPStorageRepositoryAssociationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo removeSRPStorageRepositoryAssociation([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("removeSRPStorageRepositoryAssociation", new object[] {
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveSRPStorageRepositoryAssociation(string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeSRPStorageRepositoryAssociation", new object[] {
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndremoveSRPStorageRepositoryAssociation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void removeSRPStorageRepositoryAssociationAsync(string uuid, int flags) {
            this.removeSRPStorageRepositoryAssociationAsync(uuid, flags, null);
        }
        
        /// <remarks/>
        public void removeSRPStorageRepositoryAssociationAsync(string uuid, int flags, object userState) {
            if ((this.removeSRPStorageRepositoryAssociationOperationCompleted == null)) {
                this.removeSRPStorageRepositoryAssociationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveSRPStorageRepositoryAssociationOperationCompleted);
            }
            this.InvokeAsync("removeSRPStorageRepositoryAssociation", new object[] {
                        uuid,
                        flags}, this.removeSRPStorageRepositoryAssociationOperationCompleted, userState);
        }
        
        private void OnremoveSRPStorageRepositoryAssociationOperationCompleted(object arg) {
            if ((this.removeSRPStorageRepositoryAssociationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeSRPStorageRepositoryAssociationCompleted(this, new removeSRPStorageRepositoryAssociationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("srAssoc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPStorageRepositoryAssocDetail getSRPStorageRepositoryAssociationByUuid([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool detailed, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getSRPStorageRepositoryAssociationByUuid", new object[] {
                        uuid,
                        detailed,
                        flags});
            return ((SRPStorageRepositoryAssocDetail)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSRPStorageRepositoryAssociationByUuid(string uuid, bool detailed, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSRPStorageRepositoryAssociationByUuid", new object[] {
                        uuid,
                        detailed,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public SRPStorageRepositoryAssocDetail EndgetSRPStorageRepositoryAssociationByUuid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPStorageRepositoryAssocDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getSRPStorageRepositoryAssociationByUuidAsync(string uuid, bool detailed, int flags) {
            this.getSRPStorageRepositoryAssociationByUuidAsync(uuid, detailed, flags, null);
        }
        
        /// <remarks/>
        public void getSRPStorageRepositoryAssociationByUuidAsync(string uuid, bool detailed, int flags, object userState) {
            if ((this.getSRPStorageRepositoryAssociationByUuidOperationCompleted == null)) {
                this.getSRPStorageRepositoryAssociationByUuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSRPStorageRepositoryAssociationByUuidOperationCompleted);
            }
            this.InvokeAsync("getSRPStorageRepositoryAssociationByUuid", new object[] {
                        uuid,
                        detailed,
                        flags}, this.getSRPStorageRepositoryAssociationByUuidOperationCompleted, userState);
        }
        
        private void OngetSRPStorageRepositoryAssociationByUuidOperationCompleted(object arg) {
            if ((this.getSRPStorageRepositoryAssociationByUuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSRPStorageRepositoryAssociationByUuidCompleted(this, new getSRPStorageRepositoryAssociationByUuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo removeSRPStorageVolumeAssociation([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("removeSRPStorageVolumeAssociation", new object[] {
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveSRPStorageVolumeAssociation(string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeSRPStorageVolumeAssociation", new object[] {
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndremoveSRPStorageVolumeAssociation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void removeSRPStorageVolumeAssociationAsync(string uuid, int flags) {
            this.removeSRPStorageVolumeAssociationAsync(uuid, flags, null);
        }
        
        /// <remarks/>
        public void removeSRPStorageVolumeAssociationAsync(string uuid, int flags, object userState) {
            if ((this.removeSRPStorageVolumeAssociationOperationCompleted == null)) {
                this.removeSRPStorageVolumeAssociationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveSRPStorageVolumeAssociationOperationCompleted);
            }
            this.InvokeAsync("removeSRPStorageVolumeAssociation", new object[] {
                        uuid,
                        flags}, this.removeSRPStorageVolumeAssociationOperationCompleted, userState);
        }
        
        private void OnremoveSRPStorageVolumeAssociationOperationCompleted(object arg) {
            if ((this.removeSRPStorageVolumeAssociationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeSRPStorageVolumeAssociationCompleted(this, new removeSRPStorageVolumeAssociationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("svAssocList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPStorageVolumeAssocDetail[] enumSRPStorageVolumeAssociations([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool detailed, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("enumSRPStorageVolumeAssociations", new object[] {
                        detailed,
                        filters,
                        flags});
            return ((SRPStorageVolumeAssocDetail[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumSRPStorageVolumeAssociations(bool detailed, string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumSRPStorageVolumeAssociations", new object[] {
                        detailed,
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public SRPStorageVolumeAssocDetail[] EndenumSRPStorageVolumeAssociations(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPStorageVolumeAssocDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void enumSRPStorageVolumeAssociationsAsync(bool detailed, string filters, int flags) {
            this.enumSRPStorageVolumeAssociationsAsync(detailed, filters, flags, null);
        }
        
        /// <remarks/>
        public void enumSRPStorageVolumeAssociationsAsync(bool detailed, string filters, int flags, object userState) {
            if ((this.enumSRPStorageVolumeAssociationsOperationCompleted == null)) {
                this.enumSRPStorageVolumeAssociationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumSRPStorageVolumeAssociationsOperationCompleted);
            }
            this.InvokeAsync("enumSRPStorageVolumeAssociations", new object[] {
                        detailed,
                        filters,
                        flags}, this.enumSRPStorageVolumeAssociationsOperationCompleted, userState);
        }
        
        private void OnenumSRPStorageVolumeAssociationsOperationCompleted(object arg) {
            if ((this.enumSRPStorageVolumeAssociationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumSRPStorageVolumeAssociationsCompleted(this, new enumSRPStorageVolumeAssociationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("svAssocList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPStorageVolumeAssocDetail[] getSRPStorageVolumeAssociations([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string storageVolumeId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool detailed, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getSRPStorageVolumeAssociations", new object[] {
                        storageVolumeId,
                        detailed,
                        flags});
            return ((SRPStorageVolumeAssocDetail[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSRPStorageVolumeAssociations(string storageVolumeId, bool detailed, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSRPStorageVolumeAssociations", new object[] {
                        storageVolumeId,
                        detailed,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public SRPStorageVolumeAssocDetail[] EndgetSRPStorageVolumeAssociations(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPStorageVolumeAssocDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getSRPStorageVolumeAssociationsAsync(string storageVolumeId, bool detailed, int flags) {
            this.getSRPStorageVolumeAssociationsAsync(storageVolumeId, detailed, flags, null);
        }
        
        /// <remarks/>
        public void getSRPStorageVolumeAssociationsAsync(string storageVolumeId, bool detailed, int flags, object userState) {
            if ((this.getSRPStorageVolumeAssociationsOperationCompleted == null)) {
                this.getSRPStorageVolumeAssociationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSRPStorageVolumeAssociationsOperationCompleted);
            }
            this.InvokeAsync("getSRPStorageVolumeAssociations", new object[] {
                        storageVolumeId,
                        detailed,
                        flags}, this.getSRPStorageVolumeAssociationsOperationCompleted, userState);
        }
        
        private void OngetSRPStorageVolumeAssociationsOperationCompleted(object arg) {
            if ((this.getSRPStorageVolumeAssociationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSRPStorageVolumeAssociationsCompleted(this, new getSRPStorageVolumeAssociationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("svAssoc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPStorageVolumeAssocDetail getSRPStorageVolumeAssociationByUuid([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool detailed, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getSRPStorageVolumeAssociationByUuid", new object[] {
                        uuid,
                        detailed,
                        flags});
            return ((SRPStorageVolumeAssocDetail)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSRPStorageVolumeAssociationByUuid(string uuid, bool detailed, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSRPStorageVolumeAssociationByUuid", new object[] {
                        uuid,
                        detailed,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public SRPStorageVolumeAssocDetail EndgetSRPStorageVolumeAssociationByUuid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPStorageVolumeAssocDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getSRPStorageVolumeAssociationByUuidAsync(string uuid, bool detailed, int flags) {
            this.getSRPStorageVolumeAssociationByUuidAsync(uuid, detailed, flags, null);
        }
        
        /// <remarks/>
        public void getSRPStorageVolumeAssociationByUuidAsync(string uuid, bool detailed, int flags, object userState) {
            if ((this.getSRPStorageVolumeAssociationByUuidOperationCompleted == null)) {
                this.getSRPStorageVolumeAssociationByUuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSRPStorageVolumeAssociationByUuidOperationCompleted);
            }
            this.InvokeAsync("getSRPStorageVolumeAssociationByUuid", new object[] {
                        uuid,
                        detailed,
                        flags}, this.getSRPStorageVolumeAssociationByUuidOperationCompleted, userState);
        }
        
        private void OngetSRPStorageVolumeAssociationByUuidOperationCompleted(object arg) {
            if ((this.getSRPStorageVolumeAssociationByUuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSRPStorageVolumeAssociationByUuidCompleted(this, new getSRPStorageVolumeAssociationByUuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo addSecondaryStorageManagementCredentials([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] managementCredentials cred, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out managementCredentials info) {
            object[] results = this.Invoke("addSecondaryStorageManagementCredentials", new object[] {
                        cred,
                        flags});
            info = ((managementCredentials)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddSecondaryStorageManagementCredentials(managementCredentials cred, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addSecondaryStorageManagementCredentials", new object[] {
                        cred,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndaddSecondaryStorageManagementCredentials(System.IAsyncResult asyncResult, out managementCredentials info) {
            object[] results = this.EndInvoke(asyncResult);
            info = ((managementCredentials)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void addSecondaryStorageManagementCredentialsAsync(managementCredentials cred, int flags) {
            this.addSecondaryStorageManagementCredentialsAsync(cred, flags, null);
        }
        
        /// <remarks/>
        public void addSecondaryStorageManagementCredentialsAsync(managementCredentials cred, int flags, object userState) {
            if ((this.addSecondaryStorageManagementCredentialsOperationCompleted == null)) {
                this.addSecondaryStorageManagementCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddSecondaryStorageManagementCredentialsOperationCompleted);
            }
            this.InvokeAsync("addSecondaryStorageManagementCredentials", new object[] {
                        cred,
                        flags}, this.addSecondaryStorageManagementCredentialsOperationCompleted, userState);
        }
        
        private void OnaddSecondaryStorageManagementCredentialsOperationCompleted(object arg) {
            if ((this.addSecondaryStorageManagementCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addSecondaryStorageManagementCredentialsCompleted(this, new addSecondaryStorageManagementCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo enumSecondaryStorageManagementCredentials([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute("credList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out managementCredentials[] credList) {
            object[] results = this.Invoke("enumSecondaryStorageManagementCredentials", new object[] {
                        filters,
                        flags});
            credList = ((managementCredentials[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumSecondaryStorageManagementCredentials(string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumSecondaryStorageManagementCredentials", new object[] {
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndenumSecondaryStorageManagementCredentials(System.IAsyncResult asyncResult, out managementCredentials[] credList) {
            object[] results = this.EndInvoke(asyncResult);
            credList = ((managementCredentials[])(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void enumSecondaryStorageManagementCredentialsAsync(string filters, int flags) {
            this.enumSecondaryStorageManagementCredentialsAsync(filters, flags, null);
        }
        
        /// <remarks/>
        public void enumSecondaryStorageManagementCredentialsAsync(string filters, int flags, object userState) {
            if ((this.enumSecondaryStorageManagementCredentialsOperationCompleted == null)) {
                this.enumSecondaryStorageManagementCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumSecondaryStorageManagementCredentialsOperationCompleted);
            }
            this.InvokeAsync("enumSecondaryStorageManagementCredentials", new object[] {
                        filters,
                        flags}, this.enumSecondaryStorageManagementCredentialsOperationCompleted, userState);
        }
        
        private void OnenumSecondaryStorageManagementCredentialsOperationCompleted(object arg) {
            if ((this.enumSecondaryStorageManagementCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumSecondaryStorageManagementCredentialsCompleted(this, new enumSecondaryStorageManagementCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo createSRPRecoveryPool([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute("hostIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] hostIds, [System.Xml.Serialization.XmlElementAttribute("hostGroupIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] hostGroupIds, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out SRPRecoveryPoolInfo newPool) {
            object[] results = this.Invoke("createSRPRecoveryPool", new object[] {
                        name,
                        description,
                        hostIds,
                        hostGroupIds,
                        flags});
            newPool = ((SRPRecoveryPoolInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateSRPRecoveryPool(string name, string description, string[] hostIds, string[] hostGroupIds, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createSRPRecoveryPool", new object[] {
                        name,
                        description,
                        hostIds,
                        hostGroupIds,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndcreateSRPRecoveryPool(System.IAsyncResult asyncResult, out SRPRecoveryPoolInfo newPool) {
            object[] results = this.EndInvoke(asyncResult);
            newPool = ((SRPRecoveryPoolInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void createSRPRecoveryPoolAsync(string name, string description, string[] hostIds, string[] hostGroupIds, int flags) {
            this.createSRPRecoveryPoolAsync(name, description, hostIds, hostGroupIds, flags, null);
        }
        
        /// <remarks/>
        public void createSRPRecoveryPoolAsync(string name, string description, string[] hostIds, string[] hostGroupIds, int flags, object userState) {
            if ((this.createSRPRecoveryPoolOperationCompleted == null)) {
                this.createSRPRecoveryPoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSRPRecoveryPoolOperationCompleted);
            }
            this.InvokeAsync("createSRPRecoveryPool", new object[] {
                        name,
                        description,
                        hostIds,
                        hostGroupIds,
                        flags}, this.createSRPRecoveryPoolOperationCompleted, userState);
        }
        
        private void OncreateSRPRecoveryPoolOperationCompleted(object arg) {
            if ((this.createSRPRecoveryPoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSRPRecoveryPoolCompleted(this, new createSRPRecoveryPoolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo modifySRPRecoveryPool([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newDescription, [System.Xml.Serialization.XmlElementAttribute("addHostIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] addHostIds, [System.Xml.Serialization.XmlElementAttribute("removeHostIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] removeHostIds, [System.Xml.Serialization.XmlElementAttribute("addHostGroupIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] addHostGroupIds, [System.Xml.Serialization.XmlElementAttribute("removeHostGroupIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] removeHostGroupIds, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out SRPRecoveryPoolInfo modifiedPool) {
            object[] results = this.Invoke("modifySRPRecoveryPool", new object[] {
                        uuid,
                        newName,
                        newDescription,
                        addHostIds,
                        removeHostIds,
                        addHostGroupIds,
                        removeHostGroupIds,
                        flags});
            modifiedPool = ((SRPRecoveryPoolInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmodifySRPRecoveryPool(string uuid, string newName, string newDescription, string[] addHostIds, string[] removeHostIds, string[] addHostGroupIds, string[] removeHostGroupIds, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("modifySRPRecoveryPool", new object[] {
                        uuid,
                        newName,
                        newDescription,
                        addHostIds,
                        removeHostIds,
                        addHostGroupIds,
                        removeHostGroupIds,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndmodifySRPRecoveryPool(System.IAsyncResult asyncResult, out SRPRecoveryPoolInfo modifiedPool) {
            object[] results = this.EndInvoke(asyncResult);
            modifiedPool = ((SRPRecoveryPoolInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void modifySRPRecoveryPoolAsync(string uuid, string newName, string newDescription, string[] addHostIds, string[] removeHostIds, string[] addHostGroupIds, string[] removeHostGroupIds, int flags) {
            this.modifySRPRecoveryPoolAsync(uuid, newName, newDescription, addHostIds, removeHostIds, addHostGroupIds, removeHostGroupIds, flags, null);
        }
        
        /// <remarks/>
        public void modifySRPRecoveryPoolAsync(string uuid, string newName, string newDescription, string[] addHostIds, string[] removeHostIds, string[] addHostGroupIds, string[] removeHostGroupIds, int flags, object userState) {
            if ((this.modifySRPRecoveryPoolOperationCompleted == null)) {
                this.modifySRPRecoveryPoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifySRPRecoveryPoolOperationCompleted);
            }
            this.InvokeAsync("modifySRPRecoveryPool", new object[] {
                        uuid,
                        newName,
                        newDescription,
                        addHostIds,
                        removeHostIds,
                        addHostGroupIds,
                        removeHostGroupIds,
                        flags}, this.modifySRPRecoveryPoolOperationCompleted, userState);
        }
        
        private void OnmodifySRPRecoveryPoolOperationCompleted(object arg) {
            if ((this.modifySRPRecoveryPoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifySRPRecoveryPoolCompleted(this, new modifySRPRecoveryPoolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("pool", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPRecoveryPoolInfo getSRPRecoveryPoolInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeHosts) {
            object[] results = this.Invoke("getSRPRecoveryPoolInfo", new object[] {
                        uuid,
                        includeHosts});
            return ((SRPRecoveryPoolInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSRPRecoveryPoolInfo(string uuid, bool includeHosts, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSRPRecoveryPoolInfo", new object[] {
                        uuid,
                        includeHosts}, callback, asyncState);
        }
        
        /// <remarks/>
        public SRPRecoveryPoolInfo EndgetSRPRecoveryPoolInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPRecoveryPoolInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getSRPRecoveryPoolInfoAsync(string uuid, bool includeHosts) {
            this.getSRPRecoveryPoolInfoAsync(uuid, includeHosts, null);
        }
        
        /// <remarks/>
        public void getSRPRecoveryPoolInfoAsync(string uuid, bool includeHosts, object userState) {
            if ((this.getSRPRecoveryPoolInfoOperationCompleted == null)) {
                this.getSRPRecoveryPoolInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSRPRecoveryPoolInfoOperationCompleted);
            }
            this.InvokeAsync("getSRPRecoveryPoolInfo", new object[] {
                        uuid,
                        includeHosts}, this.getSRPRecoveryPoolInfoOperationCompleted, userState);
        }
        
        private void OngetSRPRecoveryPoolInfoOperationCompleted(object arg) {
            if ((this.getSRPRecoveryPoolInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSRPRecoveryPoolInfoCompleted(this, new getSRPRecoveryPoolInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("poolList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPRecoveryPoolInfo[] enumSRPRecoveryPools([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeHosts, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("enumSRPRecoveryPools", new object[] {
                        includeHosts,
                        flags});
            return ((SRPRecoveryPoolInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumSRPRecoveryPools(bool includeHosts, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumSRPRecoveryPools", new object[] {
                        includeHosts,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public SRPRecoveryPoolInfo[] EndenumSRPRecoveryPools(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPRecoveryPoolInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void enumSRPRecoveryPoolsAsync(bool includeHosts, int flags) {
            this.enumSRPRecoveryPoolsAsync(includeHosts, flags, null);
        }
        
        /// <remarks/>
        public void enumSRPRecoveryPoolsAsync(bool includeHosts, int flags, object userState) {
            if ((this.enumSRPRecoveryPoolsOperationCompleted == null)) {
                this.enumSRPRecoveryPoolsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumSRPRecoveryPoolsOperationCompleted);
            }
            this.InvokeAsync("enumSRPRecoveryPools", new object[] {
                        includeHosts,
                        flags}, this.enumSRPRecoveryPoolsOperationCompleted, userState);
        }
        
        private void OnenumSRPRecoveryPoolsOperationCompleted(object arg) {
            if ((this.enumSRPRecoveryPoolsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumSRPRecoveryPoolsCompleted(this, new enumSRPRecoveryPoolsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo destroySRPRecoveryPool([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("destroySRPRecoveryPool", new object[] {
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindestroySRPRecoveryPool(string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("destroySRPRecoveryPool", new object[] {
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddestroySRPRecoveryPool(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void destroySRPRecoveryPoolAsync(string uuid, int flags) {
            this.destroySRPRecoveryPoolAsync(uuid, flags, null);
        }
        
        /// <remarks/>
        public void destroySRPRecoveryPoolAsync(string uuid, int flags, object userState) {
            if ((this.destroySRPRecoveryPoolOperationCompleted == null)) {
                this.destroySRPRecoveryPoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OndestroySRPRecoveryPoolOperationCompleted);
            }
            this.InvokeAsync("destroySRPRecoveryPool", new object[] {
                        uuid,
                        flags}, this.destroySRPRecoveryPoolOperationCompleted, userState);
        }
        
        private void OndestroySRPRecoveryPoolOperationCompleted(object arg) {
            if ((this.destroySRPRecoveryPoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.destroySRPRecoveryPoolCompleted(this, new destroySRPRecoveryPoolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo createSRPConsistencyGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute("vmIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] vmIds, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SRPRecoveryPoolInfo recoveryPool, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string vmBootOrder, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out SRPConsistencyGroupInfo newCG) {
            object[] results = this.Invoke("createSRPConsistencyGroup", new object[] {
                        name,
                        description,
                        vmIds,
                        recoveryPool,
                        vmBootOrder,
                        flags});
            newCG = ((SRPConsistencyGroupInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateSRPConsistencyGroup(string name, string description, string[] vmIds, SRPRecoveryPoolInfo recoveryPool, string vmBootOrder, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createSRPConsistencyGroup", new object[] {
                        name,
                        description,
                        vmIds,
                        recoveryPool,
                        vmBootOrder,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndcreateSRPConsistencyGroup(System.IAsyncResult asyncResult, out SRPConsistencyGroupInfo newCG) {
            object[] results = this.EndInvoke(asyncResult);
            newCG = ((SRPConsistencyGroupInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void createSRPConsistencyGroupAsync(string name, string description, string[] vmIds, SRPRecoveryPoolInfo recoveryPool, string vmBootOrder, int flags) {
            this.createSRPConsistencyGroupAsync(name, description, vmIds, recoveryPool, vmBootOrder, flags, null);
        }
        
        /// <remarks/>
        public void createSRPConsistencyGroupAsync(string name, string description, string[] vmIds, SRPRecoveryPoolInfo recoveryPool, string vmBootOrder, int flags, object userState) {
            if ((this.createSRPConsistencyGroupOperationCompleted == null)) {
                this.createSRPConsistencyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSRPConsistencyGroupOperationCompleted);
            }
            this.InvokeAsync("createSRPConsistencyGroup", new object[] {
                        name,
                        description,
                        vmIds,
                        recoveryPool,
                        vmBootOrder,
                        flags}, this.createSRPConsistencyGroupOperationCompleted, userState);
        }
        
        private void OncreateSRPConsistencyGroupOperationCompleted(object arg) {
            if ((this.createSRPConsistencyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSRPConsistencyGroupCompleted(this, new createSRPConsistencyGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("cg", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPConsistencyGroupInfo getSRPConsistencyGroupInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool detailed) {
            object[] results = this.Invoke("getSRPConsistencyGroupInfo", new object[] {
                        uuid,
                        detailed});
            return ((SRPConsistencyGroupInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSRPConsistencyGroupInfo(string uuid, bool detailed, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSRPConsistencyGroupInfo", new object[] {
                        uuid,
                        detailed}, callback, asyncState);
        }
        
        /// <remarks/>
        public SRPConsistencyGroupInfo EndgetSRPConsistencyGroupInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPConsistencyGroupInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getSRPConsistencyGroupInfoAsync(string uuid, bool detailed) {
            this.getSRPConsistencyGroupInfoAsync(uuid, detailed, null);
        }
        
        /// <remarks/>
        public void getSRPConsistencyGroupInfoAsync(string uuid, bool detailed, object userState) {
            if ((this.getSRPConsistencyGroupInfoOperationCompleted == null)) {
                this.getSRPConsistencyGroupInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSRPConsistencyGroupInfoOperationCompleted);
            }
            this.InvokeAsync("getSRPConsistencyGroupInfo", new object[] {
                        uuid,
                        detailed}, this.getSRPConsistencyGroupInfoOperationCompleted, userState);
        }
        
        private void OngetSRPConsistencyGroupInfoOperationCompleted(object arg) {
            if ((this.getSRPConsistencyGroupInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSRPConsistencyGroupInfoCompleted(this, new getSRPConsistencyGroupInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("groupList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPConsistencyGroupInfo[] enumSRPConsistencyGroups([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool detailed, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("enumSRPConsistencyGroups", new object[] {
                        detailed,
                        filters,
                        flags});
            return ((SRPConsistencyGroupInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumSRPConsistencyGroups(bool detailed, string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumSRPConsistencyGroups", new object[] {
                        detailed,
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public SRPConsistencyGroupInfo[] EndenumSRPConsistencyGroups(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPConsistencyGroupInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void enumSRPConsistencyGroupsAsync(bool detailed, string filters, int flags) {
            this.enumSRPConsistencyGroupsAsync(detailed, filters, flags, null);
        }
        
        /// <remarks/>
        public void enumSRPConsistencyGroupsAsync(bool detailed, string filters, int flags, object userState) {
            if ((this.enumSRPConsistencyGroupsOperationCompleted == null)) {
                this.enumSRPConsistencyGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumSRPConsistencyGroupsOperationCompleted);
            }
            this.InvokeAsync("enumSRPConsistencyGroups", new object[] {
                        detailed,
                        filters,
                        flags}, this.enumSRPConsistencyGroupsOperationCompleted, userState);
        }
        
        private void OnenumSRPConsistencyGroupsOperationCompleted(object arg) {
            if ((this.enumSRPConsistencyGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumSRPConsistencyGroupsCompleted(this, new enumSRPConsistencyGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo activateSRPConsistencyGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute("noReplVolumeIDs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] noReplVolumeIDs, [System.Xml.Serialization.XmlElementAttribute("networkMap", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SRPNetworkAssoc[] networkMap, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string recoveryPoolId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("activateSRPConsistencyGroup", new object[] {
                        uuid,
                        noReplVolumeIDs,
                        networkMap,
                        recoveryPoolId,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginactivateSRPConsistencyGroup(string uuid, string[] noReplVolumeIDs, SRPNetworkAssoc[] networkMap, string recoveryPoolId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("activateSRPConsistencyGroup", new object[] {
                        uuid,
                        noReplVolumeIDs,
                        networkMap,
                        recoveryPoolId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndactivateSRPConsistencyGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void activateSRPConsistencyGroupAsync(string uuid, string[] noReplVolumeIDs, SRPNetworkAssoc[] networkMap, string recoveryPoolId, int flags) {
            this.activateSRPConsistencyGroupAsync(uuid, noReplVolumeIDs, networkMap, recoveryPoolId, flags, null);
        }
        
        /// <remarks/>
        public void activateSRPConsistencyGroupAsync(string uuid, string[] noReplVolumeIDs, SRPNetworkAssoc[] networkMap, string recoveryPoolId, int flags, object userState) {
            if ((this.activateSRPConsistencyGroupOperationCompleted == null)) {
                this.activateSRPConsistencyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactivateSRPConsistencyGroupOperationCompleted);
            }
            this.InvokeAsync("activateSRPConsistencyGroup", new object[] {
                        uuid,
                        noReplVolumeIDs,
                        networkMap,
                        recoveryPoolId,
                        flags}, this.activateSRPConsistencyGroupOperationCompleted, userState);
        }
        
        private void OnactivateSRPConsistencyGroupOperationCompleted(object arg) {
            if ((this.activateSRPConsistencyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.activateSRPConsistencyGroupCompleted(this, new activateSRPConsistencyGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo modifySRPConsistencyGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newDescription, [System.Xml.Serialization.XmlElementAttribute("addVMIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] addVMIds, [System.Xml.Serialization.XmlElementAttribute("removeVMIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] removeVMIds, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SRPRecoveryPoolInfo newRecoveryPool, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string vmBootOrder, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out SRPConsistencyGroupInfo modifiedCG) {
            object[] results = this.Invoke("modifySRPConsistencyGroup", new object[] {
                        uuid,
                        newName,
                        newDescription,
                        addVMIds,
                        removeVMIds,
                        newRecoveryPool,
                        vmBootOrder,
                        flags});
            modifiedCG = ((SRPConsistencyGroupInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmodifySRPConsistencyGroup(string uuid, string newName, string newDescription, string[] addVMIds, string[] removeVMIds, SRPRecoveryPoolInfo newRecoveryPool, string vmBootOrder, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("modifySRPConsistencyGroup", new object[] {
                        uuid,
                        newName,
                        newDescription,
                        addVMIds,
                        removeVMIds,
                        newRecoveryPool,
                        vmBootOrder,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndmodifySRPConsistencyGroup(System.IAsyncResult asyncResult, out SRPConsistencyGroupInfo modifiedCG) {
            object[] results = this.EndInvoke(asyncResult);
            modifiedCG = ((SRPConsistencyGroupInfo)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void modifySRPConsistencyGroupAsync(string uuid, string newName, string newDescription, string[] addVMIds, string[] removeVMIds, SRPRecoveryPoolInfo newRecoveryPool, string vmBootOrder, int flags) {
            this.modifySRPConsistencyGroupAsync(uuid, newName, newDescription, addVMIds, removeVMIds, newRecoveryPool, vmBootOrder, flags, null);
        }
        
        /// <remarks/>
        public void modifySRPConsistencyGroupAsync(string uuid, string newName, string newDescription, string[] addVMIds, string[] removeVMIds, SRPRecoveryPoolInfo newRecoveryPool, string vmBootOrder, int flags, object userState) {
            if ((this.modifySRPConsistencyGroupOperationCompleted == null)) {
                this.modifySRPConsistencyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifySRPConsistencyGroupOperationCompleted);
            }
            this.InvokeAsync("modifySRPConsistencyGroup", new object[] {
                        uuid,
                        newName,
                        newDescription,
                        addVMIds,
                        removeVMIds,
                        newRecoveryPool,
                        vmBootOrder,
                        flags}, this.modifySRPConsistencyGroupOperationCompleted, userState);
        }
        
        private void OnmodifySRPConsistencyGroupOperationCompleted(object arg) {
            if ((this.modifySRPConsistencyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifySRPConsistencyGroupCompleted(this, new modifySRPConsistencyGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo modifySRPConsistencyGroupMapping([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute("noReplVolumeIDs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] noReplVolumeIDs, [System.Xml.Serialization.XmlElementAttribute("networkMap", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SRPNetworkAssoc[] networkMap, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newRecoveryPoolId) {
            object[] results = this.Invoke("modifySRPConsistencyGroupMapping", new object[] {
                        uuid,
                        noReplVolumeIDs,
                        networkMap,
                        newRecoveryPoolId});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmodifySRPConsistencyGroupMapping(string uuid, string[] noReplVolumeIDs, SRPNetworkAssoc[] networkMap, string newRecoveryPoolId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("modifySRPConsistencyGroupMapping", new object[] {
                        uuid,
                        noReplVolumeIDs,
                        networkMap,
                        newRecoveryPoolId}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndmodifySRPConsistencyGroupMapping(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void modifySRPConsistencyGroupMappingAsync(string uuid, string[] noReplVolumeIDs, SRPNetworkAssoc[] networkMap, string newRecoveryPoolId) {
            this.modifySRPConsistencyGroupMappingAsync(uuid, noReplVolumeIDs, networkMap, newRecoveryPoolId, null);
        }
        
        /// <remarks/>
        public void modifySRPConsistencyGroupMappingAsync(string uuid, string[] noReplVolumeIDs, SRPNetworkAssoc[] networkMap, string newRecoveryPoolId, object userState) {
            if ((this.modifySRPConsistencyGroupMappingOperationCompleted == null)) {
                this.modifySRPConsistencyGroupMappingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifySRPConsistencyGroupMappingOperationCompleted);
            }
            this.InvokeAsync("modifySRPConsistencyGroupMapping", new object[] {
                        uuid,
                        noReplVolumeIDs,
                        networkMap,
                        newRecoveryPoolId}, this.modifySRPConsistencyGroupMappingOperationCompleted, userState);
        }
        
        private void OnmodifySRPConsistencyGroupMappingOperationCompleted(object arg) {
            if ((this.modifySRPConsistencyGroupMappingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifySRPConsistencyGroupMappingCompleted(this, new modifySRPConsistencyGroupMappingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo deactivateSRPConsistencyGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool destroyCG, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("deactivateSRPConsistencyGroup", new object[] {
                        uuid,
                        destroyCG,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeactivateSRPConsistencyGroup(string uuid, bool destroyCG, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deactivateSRPConsistencyGroup", new object[] {
                        uuid,
                        destroyCG,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddeactivateSRPConsistencyGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void deactivateSRPConsistencyGroupAsync(string uuid, bool destroyCG, int flags) {
            this.deactivateSRPConsistencyGroupAsync(uuid, destroyCG, flags, null);
        }
        
        /// <remarks/>
        public void deactivateSRPConsistencyGroupAsync(string uuid, bool destroyCG, int flags, object userState) {
            if ((this.deactivateSRPConsistencyGroupOperationCompleted == null)) {
                this.deactivateSRPConsistencyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeactivateSRPConsistencyGroupOperationCompleted);
            }
            this.InvokeAsync("deactivateSRPConsistencyGroup", new object[] {
                        uuid,
                        destroyCG,
                        flags}, this.deactivateSRPConsistencyGroupOperationCompleted, userState);
        }
        
        private void OndeactivateSRPConsistencyGroupOperationCompleted(object arg) {
            if ((this.deactivateSRPConsistencyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deactivateSRPConsistencyGroupCompleted(this, new deactivateSRPConsistencyGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo destroySRPConsistencyGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool destroyVMs, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("destroySRPConsistencyGroup", new object[] {
                        uuid,
                        destroyVMs,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindestroySRPConsistencyGroup(string uuid, bool destroyVMs, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("destroySRPConsistencyGroup", new object[] {
                        uuid,
                        destroyVMs,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnddestroySRPConsistencyGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void destroySRPConsistencyGroupAsync(string uuid, bool destroyVMs, int flags) {
            this.destroySRPConsistencyGroupAsync(uuid, destroyVMs, flags, null);
        }
        
        /// <remarks/>
        public void destroySRPConsistencyGroupAsync(string uuid, bool destroyVMs, int flags, object userState) {
            if ((this.destroySRPConsistencyGroupOperationCompleted == null)) {
                this.destroySRPConsistencyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OndestroySRPConsistencyGroupOperationCompleted);
            }
            this.InvokeAsync("destroySRPConsistencyGroup", new object[] {
                        uuid,
                        destroyVMs,
                        flags}, this.destroySRPConsistencyGroupOperationCompleted, userState);
        }
        
        private void OndestroySRPConsistencyGroupOperationCompleted(object arg) {
            if ((this.destroySRPConsistencyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.destroySRPConsistencyGroupCompleted(this, new destroySRPConsistencyGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo synchronizeSRPConsistencyGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("synchronizeSRPConsistencyGroup", new object[] {
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsynchronizeSRPConsistencyGroup(string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("synchronizeSRPConsistencyGroup", new object[] {
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndsynchronizeSRPConsistencyGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void synchronizeSRPConsistencyGroupAsync(string uuid, int flags) {
            this.synchronizeSRPConsistencyGroupAsync(uuid, flags, null);
        }
        
        /// <remarks/>
        public void synchronizeSRPConsistencyGroupAsync(string uuid, int flags, object userState) {
            if ((this.synchronizeSRPConsistencyGroupOperationCompleted == null)) {
                this.synchronizeSRPConsistencyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsynchronizeSRPConsistencyGroupOperationCompleted);
            }
            this.InvokeAsync("synchronizeSRPConsistencyGroup", new object[] {
                        uuid,
                        flags}, this.synchronizeSRPConsistencyGroupOperationCompleted, userState);
        }
        
        private void OnsynchronizeSRPConsistencyGroupOperationCompleted(object arg) {
            if ((this.synchronizeSRPConsistencyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.synchronizeSRPConsistencyGroupCompleted(this, new synchronizeSRPConsistencyGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("cgsAvailableForUpdate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPConsistencyGroupInfo[] enumSRPConsistencyGroupsAvailableForUpdate() {
            object[] results = this.Invoke("enumSRPConsistencyGroupsAvailableForUpdate", new object[0]);
            return ((SRPConsistencyGroupInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumSRPConsistencyGroupsAvailableForUpdate(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumSRPConsistencyGroupsAvailableForUpdate", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public SRPConsistencyGroupInfo[] EndenumSRPConsistencyGroupsAvailableForUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPConsistencyGroupInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void enumSRPConsistencyGroupsAvailableForUpdateAsync() {
            this.enumSRPConsistencyGroupsAvailableForUpdateAsync(null);
        }
        
        /// <remarks/>
        public void enumSRPConsistencyGroupsAvailableForUpdateAsync(object userState) {
            if ((this.enumSRPConsistencyGroupsAvailableForUpdateOperationCompleted == null)) {
                this.enumSRPConsistencyGroupsAvailableForUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumSRPConsistencyGroupsAvailableForUpdateOperationCompleted);
            }
            this.InvokeAsync("enumSRPConsistencyGroupsAvailableForUpdate", new object[0], this.enumSRPConsistencyGroupsAvailableForUpdateOperationCompleted, userState);
        }
        
        private void OnenumSRPConsistencyGroupsAvailableForUpdateOperationCompleted(object arg) {
            if ((this.enumSRPConsistencyGroupsAvailableForUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumSRPConsistencyGroupsAvailableForUpdateCompleted(this, new enumSRPConsistencyGroupsAvailableForUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo updateSRPConsistencyGroupOnSecondary([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SRPConsistencyGroupInfo cg, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("updateSRPConsistencyGroupOnSecondary", new object[] {
                        cg,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateSRPConsistencyGroupOnSecondary(SRPConsistencyGroupInfo cg, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateSRPConsistencyGroupOnSecondary", new object[] {
                        cg,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndupdateSRPConsistencyGroupOnSecondary(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void updateSRPConsistencyGroupOnSecondaryAsync(SRPConsistencyGroupInfo cg, int flags) {
            this.updateSRPConsistencyGroupOnSecondaryAsync(cg, flags, null);
        }
        
        /// <remarks/>
        public void updateSRPConsistencyGroupOnSecondaryAsync(SRPConsistencyGroupInfo cg, int flags, object userState) {
            if ((this.updateSRPConsistencyGroupOnSecondaryOperationCompleted == null)) {
                this.updateSRPConsistencyGroupOnSecondaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSRPConsistencyGroupOnSecondaryOperationCompleted);
            }
            this.InvokeAsync("updateSRPConsistencyGroupOnSecondary", new object[] {
                        cg,
                        flags}, this.updateSRPConsistencyGroupOnSecondaryOperationCompleted, userState);
        }
        
        private void OnupdateSRPConsistencyGroupOnSecondaryOperationCompleted(object arg) {
            if ((this.updateSRPConsistencyGroupOnSecondaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSRPConsistencyGroupOnSecondaryCompleted(this, new updateSRPConsistencyGroupOnSecondaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("results", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult[] getSRPConsistencyGroupConfigSyncHistory([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getSRPConsistencyGroupConfigSyncHistory", new object[] {
                        uuid,
                        filters,
                        flags});
            return ((OperationResult[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSRPConsistencyGroupConfigSyncHistory(string uuid, string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSRPConsistencyGroupConfigSyncHistory", new object[] {
                        uuid,
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public OperationResult[] EndgetSRPConsistencyGroupConfigSyncHistory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OperationResult[])(results[0]));
        }
        
        /// <remarks/>
        public void getSRPConsistencyGroupConfigSyncHistoryAsync(string uuid, string filters, int flags) {
            this.getSRPConsistencyGroupConfigSyncHistoryAsync(uuid, filters, flags, null);
        }
        
        /// <remarks/>
        public void getSRPConsistencyGroupConfigSyncHistoryAsync(string uuid, string filters, int flags, object userState) {
            if ((this.getSRPConsistencyGroupConfigSyncHistoryOperationCompleted == null)) {
                this.getSRPConsistencyGroupConfigSyncHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSRPConsistencyGroupConfigSyncHistoryOperationCompleted);
            }
            this.InvokeAsync("getSRPConsistencyGroupConfigSyncHistory", new object[] {
                        uuid,
                        filters,
                        flags}, this.getSRPConsistencyGroupConfigSyncHistoryOperationCompleted, userState);
        }
        
        private void OngetSRPConsistencyGroupConfigSyncHistoryOperationCompleted(object arg) {
            if ((this.getSRPConsistencyGroupConfigSyncHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSRPConsistencyGroupConfigSyncHistoryCompleted(this, new getSRPConsistencyGroupConfigSyncHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo addSRPConsistencyGroupAssociation([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string parentCgUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] srpconsistencygrouprelationshipt relationship, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string childCgUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out SRPConsistencyGroupAssocDetail cgAssoc) {
            object[] results = this.Invoke("addSRPConsistencyGroupAssociation", new object[] {
                        parentCgUuid,
                        relationship,
                        childCgUuid,
                        flags});
            cgAssoc = ((SRPConsistencyGroupAssocDetail)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddSRPConsistencyGroupAssociation(string parentCgUuid, srpconsistencygrouprelationshipt relationship, string childCgUuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addSRPConsistencyGroupAssociation", new object[] {
                        parentCgUuid,
                        relationship,
                        childCgUuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndaddSRPConsistencyGroupAssociation(System.IAsyncResult asyncResult, out SRPConsistencyGroupAssocDetail cgAssoc) {
            object[] results = this.EndInvoke(asyncResult);
            cgAssoc = ((SRPConsistencyGroupAssocDetail)(results[1]));
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void addSRPConsistencyGroupAssociationAsync(string parentCgUuid, srpconsistencygrouprelationshipt relationship, string childCgUuid, int flags) {
            this.addSRPConsistencyGroupAssociationAsync(parentCgUuid, relationship, childCgUuid, flags, null);
        }
        
        /// <remarks/>
        public void addSRPConsistencyGroupAssociationAsync(string parentCgUuid, srpconsistencygrouprelationshipt relationship, string childCgUuid, int flags, object userState) {
            if ((this.addSRPConsistencyGroupAssociationOperationCompleted == null)) {
                this.addSRPConsistencyGroupAssociationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddSRPConsistencyGroupAssociationOperationCompleted);
            }
            this.InvokeAsync("addSRPConsistencyGroupAssociation", new object[] {
                        parentCgUuid,
                        relationship,
                        childCgUuid,
                        flags}, this.addSRPConsistencyGroupAssociationOperationCompleted, userState);
        }
        
        private void OnaddSRPConsistencyGroupAssociationOperationCompleted(object arg) {
            if ((this.addSRPConsistencyGroupAssociationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addSRPConsistencyGroupAssociationCompleted(this, new addSRPConsistencyGroupAssociationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("cgAssocList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPConsistencyGroupAssocDetail[] getSRPConsistencyGroupAssociations([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string parentCgUuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] srpconsistencygrouprelationshipt relationship, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool detailed, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getSRPConsistencyGroupAssociations", new object[] {
                        parentCgUuid,
                        relationship,
                        detailed,
                        flags});
            return ((SRPConsistencyGroupAssocDetail[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSRPConsistencyGroupAssociations(string parentCgUuid, srpconsistencygrouprelationshipt relationship, bool detailed, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSRPConsistencyGroupAssociations", new object[] {
                        parentCgUuid,
                        relationship,
                        detailed,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public SRPConsistencyGroupAssocDetail[] EndgetSRPConsistencyGroupAssociations(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPConsistencyGroupAssocDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getSRPConsistencyGroupAssociationsAsync(string parentCgUuid, srpconsistencygrouprelationshipt relationship, bool detailed, int flags) {
            this.getSRPConsistencyGroupAssociationsAsync(parentCgUuid, relationship, detailed, flags, null);
        }
        
        /// <remarks/>
        public void getSRPConsistencyGroupAssociationsAsync(string parentCgUuid, srpconsistencygrouprelationshipt relationship, bool detailed, int flags, object userState) {
            if ((this.getSRPConsistencyGroupAssociationsOperationCompleted == null)) {
                this.getSRPConsistencyGroupAssociationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSRPConsistencyGroupAssociationsOperationCompleted);
            }
            this.InvokeAsync("getSRPConsistencyGroupAssociations", new object[] {
                        parentCgUuid,
                        relationship,
                        detailed,
                        flags}, this.getSRPConsistencyGroupAssociationsOperationCompleted, userState);
        }
        
        private void OngetSRPConsistencyGroupAssociationsOperationCompleted(object arg) {
            if ((this.getSRPConsistencyGroupAssociationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSRPConsistencyGroupAssociationsCompleted(this, new getSRPConsistencyGroupAssociationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("cgAssocList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPConsistencyGroupAssocDetail[] enumSRPConsistencyGroupAssociations([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool detailed, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("enumSRPConsistencyGroupAssociations", new object[] {
                        detailed,
                        filters,
                        flags});
            return ((SRPConsistencyGroupAssocDetail[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumSRPConsistencyGroupAssociations(bool detailed, string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumSRPConsistencyGroupAssociations", new object[] {
                        detailed,
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public SRPConsistencyGroupAssocDetail[] EndenumSRPConsistencyGroupAssociations(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPConsistencyGroupAssocDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void enumSRPConsistencyGroupAssociationsAsync(bool detailed, string filters, int flags) {
            this.enumSRPConsistencyGroupAssociationsAsync(detailed, filters, flags, null);
        }
        
        /// <remarks/>
        public void enumSRPConsistencyGroupAssociationsAsync(bool detailed, string filters, int flags, object userState) {
            if ((this.enumSRPConsistencyGroupAssociationsOperationCompleted == null)) {
                this.enumSRPConsistencyGroupAssociationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumSRPConsistencyGroupAssociationsOperationCompleted);
            }
            this.InvokeAsync("enumSRPConsistencyGroupAssociations", new object[] {
                        detailed,
                        filters,
                        flags}, this.enumSRPConsistencyGroupAssociationsOperationCompleted, userState);
        }
        
        private void OnenumSRPConsistencyGroupAssociationsOperationCompleted(object arg) {
            if ((this.enumSRPConsistencyGroupAssociationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumSRPConsistencyGroupAssociationsCompleted(this, new enumSRPConsistencyGroupAssociationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo removeSRPConsistencyGroupAssociation([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("removeSRPConsistencyGroupAssociation", new object[] {
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveSRPConsistencyGroupAssociation(string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeSRPConsistencyGroupAssociation", new object[] {
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndremoveSRPConsistencyGroupAssociation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void removeSRPConsistencyGroupAssociationAsync(string uuid, int flags) {
            this.removeSRPConsistencyGroupAssociationAsync(uuid, flags, null);
        }
        
        /// <remarks/>
        public void removeSRPConsistencyGroupAssociationAsync(string uuid, int flags, object userState) {
            if ((this.removeSRPConsistencyGroupAssociationOperationCompleted == null)) {
                this.removeSRPConsistencyGroupAssociationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveSRPConsistencyGroupAssociationOperationCompleted);
            }
            this.InvokeAsync("removeSRPConsistencyGroupAssociation", new object[] {
                        uuid,
                        flags}, this.removeSRPConsistencyGroupAssociationOperationCompleted, userState);
        }
        
        private void OnremoveSRPConsistencyGroupAssociationOperationCompleted(object arg) {
            if ((this.removeSRPConsistencyGroupAssociationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeSRPConsistencyGroupAssociationCompleted(this, new removeSRPConsistencyGroupAssociationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("cgAssoc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPConsistencyGroupAssocDetail getSRPConsistencyGroupAssociationByUuid([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool detailed, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getSRPConsistencyGroupAssociationByUuid", new object[] {
                        uuid,
                        detailed,
                        flags});
            return ((SRPConsistencyGroupAssocDetail)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSRPConsistencyGroupAssociationByUuid(string uuid, bool detailed, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSRPConsistencyGroupAssociationByUuid", new object[] {
                        uuid,
                        detailed,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public SRPConsistencyGroupAssocDetail EndgetSRPConsistencyGroupAssociationByUuid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SRPConsistencyGroupAssocDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getSRPConsistencyGroupAssociationByUuidAsync(string uuid, bool detailed, int flags) {
            this.getSRPConsistencyGroupAssociationByUuidAsync(uuid, detailed, flags, null);
        }
        
        /// <remarks/>
        public void getSRPConsistencyGroupAssociationByUuidAsync(string uuid, bool detailed, int flags, object userState) {
            if ((this.getSRPConsistencyGroupAssociationByUuidOperationCompleted == null)) {
                this.getSRPConsistencyGroupAssociationByUuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSRPConsistencyGroupAssociationByUuidOperationCompleted);
            }
            this.InvokeAsync("getSRPConsistencyGroupAssociationByUuid", new object[] {
                        uuid,
                        detailed,
                        flags}, this.getSRPConsistencyGroupAssociationByUuidOperationCompleted, userState);
        }
        
        private void OngetSRPConsistencyGroupAssociationByUuidOperationCompleted(object arg) {
            if ((this.getSRPConsistencyGroupAssociationByUuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSRPConsistencyGroupAssociationByUuidCompleted(this, new getSRPConsistencyGroupAssociationByUuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo validateSRPConsistencyGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out OperationResult results) {
            object[] results1 = this.Invoke("validateSRPConsistencyGroup", new object[] {
                        uuid,
                        flags});
            results = ((OperationResult)(results1[1]));
            return ((jobInfo)(results1[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvalidateSRPConsistencyGroup(string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("validateSRPConsistencyGroup", new object[] {
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndvalidateSRPConsistencyGroup(System.IAsyncResult asyncResult, out OperationResult results) {
            object[] results1 = this.EndInvoke(asyncResult);
            results = ((OperationResult)(results1[1]));
            return ((jobInfo)(results1[0]));
        }
        
        /// <remarks/>
        public void validateSRPConsistencyGroupAsync(string uuid, int flags) {
            this.validateSRPConsistencyGroupAsync(uuid, flags, null);
        }
        
        /// <remarks/>
        public void validateSRPConsistencyGroupAsync(string uuid, int flags, object userState) {
            if ((this.validateSRPConsistencyGroupOperationCompleted == null)) {
                this.validateSRPConsistencyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateSRPConsistencyGroupOperationCompleted);
            }
            this.InvokeAsync("validateSRPConsistencyGroup", new object[] {
                        uuid,
                        flags}, this.validateSRPConsistencyGroupOperationCompleted, userState);
        }
        
        private void OnvalidateSRPConsistencyGroupOperationCompleted(object arg) {
            if ((this.validateSRPConsistencyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateSRPConsistencyGroupCompleted(this, new validateSRPConsistencyGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("results", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult[] getSRPConsistencyGroupValidationHistory([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getSRPConsistencyGroupValidationHistory", new object[] {
                        uuid,
                        filters,
                        flags});
            return ((OperationResult[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSRPConsistencyGroupValidationHistory(string uuid, string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSRPConsistencyGroupValidationHistory", new object[] {
                        uuid,
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public OperationResult[] EndgetSRPConsistencyGroupValidationHistory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OperationResult[])(results[0]));
        }
        
        /// <remarks/>
        public void getSRPConsistencyGroupValidationHistoryAsync(string uuid, string filters, int flags) {
            this.getSRPConsistencyGroupValidationHistoryAsync(uuid, filters, flags, null);
        }
        
        /// <remarks/>
        public void getSRPConsistencyGroupValidationHistoryAsync(string uuid, string filters, int flags, object userState) {
            if ((this.getSRPConsistencyGroupValidationHistoryOperationCompleted == null)) {
                this.getSRPConsistencyGroupValidationHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSRPConsistencyGroupValidationHistoryOperationCompleted);
            }
            this.InvokeAsync("getSRPConsistencyGroupValidationHistory", new object[] {
                        uuid,
                        filters,
                        flags}, this.getSRPConsistencyGroupValidationHistoryOperationCompleted, userState);
        }
        
        private void OngetSRPConsistencyGroupValidationHistoryOperationCompleted(object arg) {
            if ((this.getSRPConsistencyGroupValidationHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSRPConsistencyGroupValidationHistoryCompleted(this, new getSRPConsistencyGroupValidationHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo clearSRPConsistencyGroupValidationHistory([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string cgUuid, [System.Xml.Serialization.XmlElementAttribute("uuids", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] uuids, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int keepCount, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("clearSRPConsistencyGroupValidationHistory", new object[] {
                        cgUuid,
                        uuids,
                        keepCount,
                        filters,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginclearSRPConsistencyGroupValidationHistory(string cgUuid, string[] uuids, int keepCount, string filters, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("clearSRPConsistencyGroupValidationHistory", new object[] {
                        cgUuid,
                        uuids,
                        keepCount,
                        filters,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndclearSRPConsistencyGroupValidationHistory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void clearSRPConsistencyGroupValidationHistoryAsync(string cgUuid, string[] uuids, int keepCount, string filters, int flags) {
            this.clearSRPConsistencyGroupValidationHistoryAsync(cgUuid, uuids, keepCount, filters, flags, null);
        }
        
        /// <remarks/>
        public void clearSRPConsistencyGroupValidationHistoryAsync(string cgUuid, string[] uuids, int keepCount, string filters, int flags, object userState) {
            if ((this.clearSRPConsistencyGroupValidationHistoryOperationCompleted == null)) {
                this.clearSRPConsistencyGroupValidationHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclearSRPConsistencyGroupValidationHistoryOperationCompleted);
            }
            this.InvokeAsync("clearSRPConsistencyGroupValidationHistory", new object[] {
                        cgUuid,
                        uuids,
                        keepCount,
                        filters,
                        flags}, this.clearSRPConsistencyGroupValidationHistoryOperationCompleted, userState);
        }
        
        private void OnclearSRPConsistencyGroupValidationHistoryOperationCompleted(object arg) {
            if ((this.clearSRPConsistencyGroupValidationHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clearSRPConsistencyGroupValidationHistoryCompleted(this, new clearSRPConsistencyGroupValidationHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo prepareSRPConsistencyGroupForFailover([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("prepareSRPConsistencyGroupForFailover", new object[] {
                        uuid,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginprepareSRPConsistencyGroupForFailover(string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("prepareSRPConsistencyGroupForFailover", new object[] {
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndprepareSRPConsistencyGroupForFailover(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void prepareSRPConsistencyGroupForFailoverAsync(string uuid, int flags) {
            this.prepareSRPConsistencyGroupForFailoverAsync(uuid, flags, null);
        }
        
        /// <remarks/>
        public void prepareSRPConsistencyGroupForFailoverAsync(string uuid, int flags, object userState) {
            if ((this.prepareSRPConsistencyGroupForFailoverOperationCompleted == null)) {
                this.prepareSRPConsistencyGroupForFailoverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprepareSRPConsistencyGroupForFailoverOperationCompleted);
            }
            this.InvokeAsync("prepareSRPConsistencyGroupForFailover", new object[] {
                        uuid,
                        flags}, this.prepareSRPConsistencyGroupForFailoverOperationCompleted, userState);
        }
        
        private void OnprepareSRPConsistencyGroupForFailoverOperationCompleted(object arg) {
            if ((this.prepareSRPConsistencyGroupForFailoverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.prepareSRPConsistencyGroupForFailoverCompleted(this, new prepareSRPConsistencyGroupForFailoverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo incarnateSRPConsistencyGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out OperationResult results, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out SRPConsistencyGroupInfo cg) {
            object[] results1 = this.Invoke("incarnateSRPConsistencyGroup", new object[] {
                        uuid,
                        flags});
            results = ((OperationResult)(results1[1]));
            cg = ((SRPConsistencyGroupInfo)(results1[2]));
            return ((jobInfo)(results1[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginincarnateSRPConsistencyGroup(string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("incarnateSRPConsistencyGroup", new object[] {
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndincarnateSRPConsistencyGroup(System.IAsyncResult asyncResult, out OperationResult results, out SRPConsistencyGroupInfo cg) {
            object[] results1 = this.EndInvoke(asyncResult);
            results = ((OperationResult)(results1[1]));
            cg = ((SRPConsistencyGroupInfo)(results1[2]));
            return ((jobInfo)(results1[0]));
        }
        
        /// <remarks/>
        public void incarnateSRPConsistencyGroupAsync(string uuid, int flags) {
            this.incarnateSRPConsistencyGroupAsync(uuid, flags, null);
        }
        
        /// <remarks/>
        public void incarnateSRPConsistencyGroupAsync(string uuid, int flags, object userState) {
            if ((this.incarnateSRPConsistencyGroupOperationCompleted == null)) {
                this.incarnateSRPConsistencyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnincarnateSRPConsistencyGroupOperationCompleted);
            }
            this.InvokeAsync("incarnateSRPConsistencyGroup", new object[] {
                        uuid,
                        flags}, this.incarnateSRPConsistencyGroupOperationCompleted, userState);
        }
        
        private void OnincarnateSRPConsistencyGroupOperationCompleted(object arg) {
            if ((this.incarnateSRPConsistencyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.incarnateSRPConsistencyGroupCompleted(this, new incarnateSRPConsistencyGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo failoverSRPConsistencyGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out OperationResult results, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out SRPConsistencyGroupInfo cg) {
            object[] results1 = this.Invoke("failoverSRPConsistencyGroup", new object[] {
                        uuid,
                        flags});
            results = ((OperationResult)(results1[1]));
            cg = ((SRPConsistencyGroupInfo)(results1[2]));
            return ((jobInfo)(results1[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfailoverSRPConsistencyGroup(string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("failoverSRPConsistencyGroup", new object[] {
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndfailoverSRPConsistencyGroup(System.IAsyncResult asyncResult, out OperationResult results, out SRPConsistencyGroupInfo cg) {
            object[] results1 = this.EndInvoke(asyncResult);
            results = ((OperationResult)(results1[1]));
            cg = ((SRPConsistencyGroupInfo)(results1[2]));
            return ((jobInfo)(results1[0]));
        }
        
        /// <remarks/>
        public void failoverSRPConsistencyGroupAsync(string uuid, int flags) {
            this.failoverSRPConsistencyGroupAsync(uuid, flags, null);
        }
        
        /// <remarks/>
        public void failoverSRPConsistencyGroupAsync(string uuid, int flags, object userState) {
            if ((this.failoverSRPConsistencyGroupOperationCompleted == null)) {
                this.failoverSRPConsistencyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfailoverSRPConsistencyGroupOperationCompleted);
            }
            this.InvokeAsync("failoverSRPConsistencyGroup", new object[] {
                        uuid,
                        flags}, this.failoverSRPConsistencyGroupOperationCompleted, userState);
        }
        
        private void OnfailoverSRPConsistencyGroupOperationCompleted(object arg) {
            if ((this.failoverSRPConsistencyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.failoverSRPConsistencyGroupCompleted(this, new failoverSRPConsistencyGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo testSRPConsistencyGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out OperationResult results, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out SRPConsistencyGroupInfo cg) {
            object[] results1 = this.Invoke("testSRPConsistencyGroup", new object[] {
                        uuid,
                        flags});
            results = ((OperationResult)(results1[1]));
            cg = ((SRPConsistencyGroupInfo)(results1[2]));
            return ((jobInfo)(results1[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegintestSRPConsistencyGroup(string uuid, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("testSRPConsistencyGroup", new object[] {
                        uuid,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndtestSRPConsistencyGroup(System.IAsyncResult asyncResult, out OperationResult results, out SRPConsistencyGroupInfo cg) {
            object[] results1 = this.EndInvoke(asyncResult);
            results = ((OperationResult)(results1[1]));
            cg = ((SRPConsistencyGroupInfo)(results1[2]));
            return ((jobInfo)(results1[0]));
        }
        
        /// <remarks/>
        public void testSRPConsistencyGroupAsync(string uuid, int flags) {
            this.testSRPConsistencyGroupAsync(uuid, flags, null);
        }
        
        /// <remarks/>
        public void testSRPConsistencyGroupAsync(string uuid, int flags, object userState) {
            if ((this.testSRPConsistencyGroupOperationCompleted == null)) {
                this.testSRPConsistencyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestSRPConsistencyGroupOperationCompleted);
            }
            this.InvokeAsync("testSRPConsistencyGroup", new object[] {
                        uuid,
                        flags}, this.testSRPConsistencyGroupOperationCompleted, userState);
        }
        
        private void OntestSRPConsistencyGroupOperationCompleted(object arg) {
            if ((this.testSRPConsistencyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testSRPConsistencyGroupCompleted(this, new testSRPConsistencyGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo errorTest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string testId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("errorTest", new object[] {
                        testId,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginerrorTest(string testId, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("errorTest", new object[] {
                        testId,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EnderrorTest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void errorTestAsync(string testId, int flags) {
            this.errorTestAsync(testId, flags, null);
        }
        
        /// <remarks/>
        public void errorTestAsync(string testId, int flags, object userState) {
            if ((this.errorTestOperationCompleted == null)) {
                this.errorTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnerrorTestOperationCompleted);
            }
            this.InvokeAsync("errorTest", new object[] {
                        testId,
                        flags}, this.errorTestOperationCompleted, userState);
        }
        
        private void OnerrorTestOperationCompleted(object arg) {
            if ((this.errorTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.errorTestCompleted(this, new errorTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void logClientError([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clientId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string componentId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int errCode, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string errMsg, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int severity, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime timeStamp) {
            this.Invoke("logClientError", new object[] {
                        clientId,
                        componentId,
                        errCode,
                        errMsg,
                        severity,
                        timeStamp});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginlogClientError(string clientId, string componentId, int errCode, string errMsg, int severity, System.DateTime timeStamp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("logClientError", new object[] {
                        clientId,
                        componentId,
                        errCode,
                        errMsg,
                        severity,
                        timeStamp}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndlogClientError(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void logClientErrorAsync(string clientId, string componentId, int errCode, string errMsg, int severity, System.DateTime timeStamp) {
            this.logClientErrorAsync(clientId, componentId, errCode, errMsg, severity, timeStamp, null);
        }
        
        /// <remarks/>
        public void logClientErrorAsync(string clientId, string componentId, int errCode, string errMsg, int severity, System.DateTime timeStamp, object userState) {
            if ((this.logClientErrorOperationCompleted == null)) {
                this.logClientErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogClientErrorOperationCompleted);
            }
            this.InvokeAsync("logClientError", new object[] {
                        clientId,
                        componentId,
                        errCode,
                        errMsg,
                        severity,
                        timeStamp}, this.logClientErrorOperationCompleted, userState);
        }
        
        private void OnlogClientErrorOperationCompleted(object arg) {
            if ((this.logClientErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logClientErrorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("data", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getSupportLogData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getSupportLogData", new object[] {
                        flags});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSupportLogData(int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSupportLogData", new object[] {
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetSupportLogData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSupportLogDataAsync(int flags) {
            this.getSupportLogDataAsync(flags, null);
        }
        
        /// <remarks/>
        public void getSupportLogDataAsync(int flags, object userState) {
            if ((this.getSupportLogDataOperationCompleted == null)) {
                this.getSupportLogDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSupportLogDataOperationCompleted);
            }
            this.InvokeAsync("getSupportLogData", new object[] {
                        flags}, this.getSupportLogDataOperationCompleted, userState);
        }
        
        private void OngetSupportLogDataOperationCompleted(object arg) {
            if ((this.getSupportLogDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSupportLogDataCompleted(this, new getSupportLogDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("data", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string enumScsiDeviceProcessors([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("enumScsiDeviceProcessors", new object[] {
                        flags});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumScsiDeviceProcessors(int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumScsiDeviceProcessors", new object[] {
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndenumScsiDeviceProcessors(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void enumScsiDeviceProcessorsAsync(int flags) {
            this.enumScsiDeviceProcessorsAsync(flags, null);
        }
        
        /// <remarks/>
        public void enumScsiDeviceProcessorsAsync(int flags, object userState) {
            if ((this.enumScsiDeviceProcessorsOperationCompleted == null)) {
                this.enumScsiDeviceProcessorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumScsiDeviceProcessorsOperationCompleted);
            }
            this.InvokeAsync("enumScsiDeviceProcessors", new object[] {
                        flags}, this.enumScsiDeviceProcessorsOperationCompleted, userState);
        }
        
        private void OnenumScsiDeviceProcessorsOperationCompleted(object arg) {
            if ((this.enumScsiDeviceProcessorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumScsiDeviceProcessorsCompleted(this, new enumScsiDeviceProcessorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("eventList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public @event[] pullEvents([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")] string serverTimeStamp, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startingEventIndex, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int maxEvents, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out int lastEventIndex, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")] out string currentServerTimeStamp) {
            object[] results = this.Invoke("pullEvents", new object[] {
                        serverTimeStamp,
                        startingEventIndex,
                        maxEvents});
            lastEventIndex = ((int)(results[1]));
            currentServerTimeStamp = ((string)(results[2]));
            return ((@event[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginpullEvents(string serverTimeStamp, int startingEventIndex, int maxEvents, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("pullEvents", new object[] {
                        serverTimeStamp,
                        startingEventIndex,
                        maxEvents}, callback, asyncState);
        }
        
        /// <remarks/>
        public @event[] EndpullEvents(System.IAsyncResult asyncResult, out int lastEventIndex, out string currentServerTimeStamp) {
            object[] results = this.EndInvoke(asyncResult);
            lastEventIndex = ((int)(results[1]));
            currentServerTimeStamp = ((string)(results[2]));
            return ((@event[])(results[0]));
        }
        
        /// <remarks/>
        public void pullEventsAsync(string serverTimeStamp, int startingEventIndex, int maxEvents) {
            this.pullEventsAsync(serverTimeStamp, startingEventIndex, maxEvents, null);
        }
        
        /// <remarks/>
        public void pullEventsAsync(string serverTimeStamp, int startingEventIndex, int maxEvents, object userState) {
            if ((this.pullEventsOperationCompleted == null)) {
                this.pullEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpullEventsOperationCompleted);
            }
            this.InvokeAsync("pullEvents", new object[] {
                        serverTimeStamp,
                        startingEventIndex,
                        maxEvents}, this.pullEventsOperationCompleted, userState);
        }
        
        private void OnpullEventsOperationCompleted(object arg) {
            if ((this.pullEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pullEventsCompleted(this, new pullEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("eventList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public @event[] registerEventListener([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callbackClient, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int callbackPort, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int maxEvents, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out int lastEvent) {
            object[] results = this.Invoke("registerEventListener", new object[] {
                        callbackClient,
                        callbackPort,
                        maxEvents});
            lastEvent = ((int)(results[1]));
            return ((@event[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginregisterEventListener(string callbackClient, int callbackPort, int maxEvents, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("registerEventListener", new object[] {
                        callbackClient,
                        callbackPort,
                        maxEvents}, callback, asyncState);
        }
        
        /// <remarks/>
        public @event[] EndregisterEventListener(System.IAsyncResult asyncResult, out int lastEvent) {
            object[] results = this.EndInvoke(asyncResult);
            lastEvent = ((int)(results[1]));
            return ((@event[])(results[0]));
        }
        
        /// <remarks/>
        public void registerEventListenerAsync(string callbackClient, int callbackPort, int maxEvents) {
            this.registerEventListenerAsync(callbackClient, callbackPort, maxEvents, null);
        }
        
        /// <remarks/>
        public void registerEventListenerAsync(string callbackClient, int callbackPort, int maxEvents, object userState) {
            if ((this.registerEventListenerOperationCompleted == null)) {
                this.registerEventListenerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterEventListenerOperationCompleted);
            }
            this.InvokeAsync("registerEventListener", new object[] {
                        callbackClient,
                        callbackPort,
                        maxEvents}, this.registerEventListenerOperationCompleted, userState);
        }
        
        private void OnregisterEventListenerOperationCompleted(object arg) {
            if ((this.registerEventListenerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerEventListenerCompleted(this, new registerEventListenerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setServicePassword([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            this.Invoke("setServicePassword", new object[] {
                        username,
                        password,
                        flags});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetServicePassword(string username, string password, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setServicePassword", new object[] {
                        username,
                        password,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndsetServicePassword(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void setServicePasswordAsync(string username, string password, int flags) {
            this.setServicePasswordAsync(username, password, flags, null);
        }
        
        /// <remarks/>
        public void setServicePasswordAsync(string username, string password, int flags, object userState) {
            if ((this.setServicePasswordOperationCompleted == null)) {
                this.setServicePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetServicePasswordOperationCompleted);
            }
            this.InvokeAsync("setServicePassword", new object[] {
                        username,
                        password,
                        flags}, this.setServicePasswordOperationCompleted, userState);
        }
        
        private void OnsetServicePasswordOperationCompleted(object arg) {
            if ((this.setServicePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setServicePasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("version", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getServiceVersion([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getServiceVersion", new object[] {
                        flags});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetServiceVersion(int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getServiceVersion", new object[] {
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetServiceVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getServiceVersionAsync(int flags) {
            this.getServiceVersionAsync(flags, null);
        }
        
        /// <remarks/>
        public void getServiceVersionAsync(int flags, object userState) {
            if ((this.getServiceVersionOperationCompleted == null)) {
                this.getServiceVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServiceVersionOperationCompleted);
            }
            this.InvokeAsync("getServiceVersion", new object[] {
                        flags}, this.getServiceVersionOperationCompleted, userState);
        }
        
        private void OngetServiceVersionOperationCompleted(object arg) {
            if ((this.getServiceVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServiceVersionCompleted(this, new getServiceVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setServiceTraceLevel([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string traceLevel, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            this.Invoke("setServiceTraceLevel", new object[] {
                        traceLevel,
                        flags});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetServiceTraceLevel(string traceLevel, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setServiceTraceLevel", new object[] {
                        traceLevel,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndsetServiceTraceLevel(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void setServiceTraceLevelAsync(string traceLevel, int flags) {
            this.setServiceTraceLevelAsync(traceLevel, flags, null);
        }
        
        /// <remarks/>
        public void setServiceTraceLevelAsync(string traceLevel, int flags, object userState) {
            if ((this.setServiceTraceLevelOperationCompleted == null)) {
                this.setServiceTraceLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetServiceTraceLevelOperationCompleted);
            }
            this.InvokeAsync("setServiceTraceLevel", new object[] {
                        traceLevel,
                        flags}, this.setServiceTraceLevelOperationCompleted, userState);
        }
        
        private void OnsetServiceTraceLevelOperationCompleted(object arg) {
            if ((this.setServiceTraceLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setServiceTraceLevelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("traceLevel", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getServiceTraceLevel([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getServiceTraceLevel", new object[] {
                        flags});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetServiceTraceLevel(int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getServiceTraceLevel", new object[] {
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetServiceTraceLevel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getServiceTraceLevelAsync(int flags) {
            this.getServiceTraceLevelAsync(flags, null);
        }
        
        /// <remarks/>
        public void getServiceTraceLevelAsync(int flags, object userState) {
            if ((this.getServiceTraceLevelOperationCompleted == null)) {
                this.getServiceTraceLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServiceTraceLevelOperationCompleted);
            }
            this.InvokeAsync("getServiceTraceLevel", new object[] {
                        flags}, this.getServiceTraceLevelOperationCompleted, userState);
        }
        
        private void OngetServiceTraceLevelOperationCompleted(object arg) {
            if ((this.getServiceTraceLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServiceTraceLevelCompleted(this, new getServiceTraceLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void logRollover([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string saveLogName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            this.Invoke("logRollover", new object[] {
                        saveLogName,
                        flags});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginlogRollover(string saveLogName, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("logRollover", new object[] {
                        saveLogName,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndlogRollover(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void logRolloverAsync(string saveLogName, int flags) {
            this.logRolloverAsync(saveLogName, flags, null);
        }
        
        /// <remarks/>
        public void logRolloverAsync(string saveLogName, int flags, object userState) {
            if ((this.logRolloverOperationCompleted == null)) {
                this.logRolloverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogRolloverOperationCompleted);
            }
            this.InvokeAsync("logRollover", new object[] {
                        saveLogName,
                        flags}, this.logRolloverOperationCompleted, userState);
        }
        
        private void OnlogRolloverOperationCompleted(object arg) {
            if ((this.logRolloverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logRolloverCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo[] enumJobs([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int jobState, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string locale, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("enumJobs", new object[] {
                        jobState,
                        locale,
                        flags});
            return ((jobInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumJobs(int jobState, string locale, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumJobs", new object[] {
                        jobState,
                        locale,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo[] EndenumJobs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void enumJobsAsync(int jobState, string locale, int flags) {
            this.enumJobsAsync(jobState, locale, flags, null);
        }
        
        /// <remarks/>
        public void enumJobsAsync(int jobState, string locale, int flags, object userState) {
            if ((this.enumJobsOperationCompleted == null)) {
                this.enumJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumJobsOperationCompleted);
            }
            this.InvokeAsync("enumJobs", new object[] {
                        jobState,
                        locale,
                        flags}, this.enumJobsOperationCompleted, userState);
        }
        
        private void OnenumJobsOperationCompleted(object arg) {
            if ((this.enumJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumJobsCompleted(this, new enumJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo[] clearJobs([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("clearJobs", new object[] {
                        flags});
            return ((jobInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginclearJobs(int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("clearJobs", new object[] {
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo[] EndclearJobs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void clearJobsAsync(int flags) {
            this.clearJobsAsync(flags, null);
        }
        
        /// <remarks/>
        public void clearJobsAsync(int flags, object userState) {
            if ((this.clearJobsOperationCompleted == null)) {
                this.clearJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclearJobsOperationCompleted);
            }
            this.InvokeAsync("clearJobs", new object[] {
                        flags}, this.clearJobsOperationCompleted, userState);
        }
        
        private void OnclearJobsOperationCompleted(object arg) {
            if ((this.clearJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clearJobsCompleted(this, new clearJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo restartJob([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string jobId) {
            object[] results = this.Invoke("restartJob", new object[] {
                        jobId});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginrestartJob(string jobId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("restartJob", new object[] {
                        jobId}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndrestartJob(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void restartJobAsync(string jobId) {
            this.restartJobAsync(jobId, null);
        }
        
        /// <remarks/>
        public void restartJobAsync(string jobId, object userState) {
            if ((this.restartJobOperationCompleted == null)) {
                this.restartJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrestartJobOperationCompleted);
            }
            this.InvokeAsync("restartJob", new object[] {
                        jobId}, this.restartJobOperationCompleted, userState);
        }
        
        private void OnrestartJobOperationCompleted(object arg) {
            if ((this.restartJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.restartJobCompleted(this, new restartJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo cancelJob([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string jobId) {
            object[] results = this.Invoke("cancelJob", new object[] {
                        jobId});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincancelJob(string jobId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("cancelJob", new object[] {
                        jobId}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndcancelJob(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void cancelJobAsync(string jobId) {
            this.cancelJobAsync(jobId, null);
        }
        
        /// <remarks/>
        public void cancelJobAsync(string jobId, object userState) {
            if ((this.cancelJobOperationCompleted == null)) {
                this.cancelJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelJobOperationCompleted);
            }
            this.InvokeAsync("cancelJob", new object[] {
                        jobId}, this.cancelJobOperationCompleted, userState);
        }
        
        private void OncancelJobOperationCompleted(object arg) {
            if ((this.cancelJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelJobCompleted(this, new cancelJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("jobInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobInfo getJobInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string jobId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string locale, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getJobInfo", new object[] {
                        jobId,
                        locale,
                        flags});
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetJobInfo(string jobId, string locale, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getJobInfo", new object[] {
                        jobId,
                        locale,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public jobInfo EndgetJobInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((jobInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getJobInfoAsync(string jobId, string locale, int flags) {
            this.getJobInfoAsync(jobId, locale, flags, null);
        }
        
        /// <remarks/>
        public void getJobInfoAsync(string jobId, string locale, int flags, object userState) {
            if ((this.getJobInfoOperationCompleted == null)) {
                this.getJobInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetJobInfoOperationCompleted);
            }
            this.InvokeAsync("getJobInfo", new object[] {
                        jobId,
                        locale,
                        flags}, this.getJobInfoOperationCompleted, userState);
        }
        
        private void OngetJobInfoOperationCompleted(object arg) {
            if ((this.getJobInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getJobInfoCompleted(this, new getJobInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("group", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public licenseGroupInfo createLicenseGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string osType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string osVersion, [System.Xml.Serialization.XmlElementAttribute("keyList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] keyList) {
            object[] results = this.Invoke("createLicenseGroup", new object[] {
                        name,
                        osType,
                        osVersion,
                        keyList});
            return ((licenseGroupInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateLicenseGroup(string name, string osType, string osVersion, string[] keyList, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createLicenseGroup", new object[] {
                        name,
                        osType,
                        osVersion,
                        keyList}, callback, asyncState);
        }
        
        /// <remarks/>
        public licenseGroupInfo EndcreateLicenseGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((licenseGroupInfo)(results[0]));
        }
        
        /// <remarks/>
        public void createLicenseGroupAsync(string name, string osType, string osVersion, string[] keyList) {
            this.createLicenseGroupAsync(name, osType, osVersion, keyList, null);
        }
        
        /// <remarks/>
        public void createLicenseGroupAsync(string name, string osType, string osVersion, string[] keyList, object userState) {
            if ((this.createLicenseGroupOperationCompleted == null)) {
                this.createLicenseGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateLicenseGroupOperationCompleted);
            }
            this.InvokeAsync("createLicenseGroup", new object[] {
                        name,
                        osType,
                        osVersion,
                        keyList}, this.createLicenseGroupOperationCompleted, userState);
        }
        
        private void OncreateLicenseGroupOperationCompleted(object arg) {
            if ((this.createLicenseGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createLicenseGroupCompleted(this, new createLicenseGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteLicenseGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string name) {
            this.Invoke("deleteLicenseGroup", new object[] {
                        name});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteLicenseGroup(string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteLicenseGroup", new object[] {
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeleteLicenseGroup(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void deleteLicenseGroupAsync(string name) {
            this.deleteLicenseGroupAsync(name, null);
        }
        
        /// <remarks/>
        public void deleteLicenseGroupAsync(string name, object userState) {
            if ((this.deleteLicenseGroupOperationCompleted == null)) {
                this.deleteLicenseGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteLicenseGroupOperationCompleted);
            }
            this.InvokeAsync("deleteLicenseGroup", new object[] {
                        name}, this.deleteLicenseGroupOperationCompleted, userState);
        }
        
        private void OndeleteLicenseGroupOperationCompleted(object arg) {
            if ((this.deleteLicenseGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteLicenseGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public licenseGroupInfo[] enumLicenseGroups() {
            object[] results = this.Invoke("enumLicenseGroups", new object[0]);
            return ((licenseGroupInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumLicenseGroups(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumLicenseGroups", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public licenseGroupInfo[] EndenumLicenseGroups(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((licenseGroupInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void enumLicenseGroupsAsync() {
            this.enumLicenseGroupsAsync(null);
        }
        
        /// <remarks/>
        public void enumLicenseGroupsAsync(object userState) {
            if ((this.enumLicenseGroupsOperationCompleted == null)) {
                this.enumLicenseGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumLicenseGroupsOperationCompleted);
            }
            this.InvokeAsync("enumLicenseGroups", new object[0], this.enumLicenseGroupsOperationCompleted, userState);
        }
        
        private void OnenumLicenseGroupsOperationCompleted(object arg) {
            if ((this.enumLicenseGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumLicenseGroupsCompleted(this, new enumLicenseGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public tagInfo addTag([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string tag, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int objectType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string value, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int valueType) {
            object[] results = this.Invoke("addTag", new object[] {
                        tag,
                        objectId,
                        objectType,
                        value,
                        valueType});
            return ((tagInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTag(string tag, string objectId, int objectType, string value, int valueType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addTag", new object[] {
                        tag,
                        objectId,
                        objectType,
                        value,
                        valueType}, callback, asyncState);
        }
        
        /// <remarks/>
        public tagInfo EndaddTag(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((tagInfo)(results[0]));
        }
        
        /// <remarks/>
        public void addTagAsync(string tag, string objectId, int objectType, string value, int valueType) {
            this.addTagAsync(tag, objectId, objectType, value, valueType, null);
        }
        
        /// <remarks/>
        public void addTagAsync(string tag, string objectId, int objectType, string value, int valueType, object userState) {
            if ((this.addTagOperationCompleted == null)) {
                this.addTagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTagOperationCompleted);
            }
            this.InvokeAsync("addTag", new object[] {
                        tag,
                        objectId,
                        objectType,
                        value,
                        valueType}, this.addTagOperationCompleted, userState);
        }
        
        private void OnaddTagOperationCompleted(object arg) {
            if ((this.addTagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTagCompleted(this, new addTagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public tagInfo removeTag([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string tag, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int objectType) {
            object[] results = this.Invoke("removeTag", new object[] {
                        tag,
                        objectId,
                        objectType});
            return ((tagInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveTag(string tag, string objectId, int objectType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeTag", new object[] {
                        tag,
                        objectId,
                        objectType}, callback, asyncState);
        }
        
        /// <remarks/>
        public tagInfo EndremoveTag(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((tagInfo)(results[0]));
        }
        
        /// <remarks/>
        public void removeTagAsync(string tag, string objectId, int objectType) {
            this.removeTagAsync(tag, objectId, objectType, null);
        }
        
        /// <remarks/>
        public void removeTagAsync(string tag, string objectId, int objectType, object userState) {
            if ((this.removeTagOperationCompleted == null)) {
                this.removeTagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveTagOperationCompleted);
            }
            this.InvokeAsync("removeTag", new object[] {
                        tag,
                        objectId,
                        objectType}, this.removeTagOperationCompleted, userState);
        }
        
        private void OnremoveTagOperationCompleted(object arg) {
            if ((this.removeTagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeTagCompleted(this, new removeTagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public tagInfo[] enumTags([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string tag, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int objectType) {
            object[] results = this.Invoke("enumTags", new object[] {
                        tag,
                        objectId,
                        objectType});
            return ((tagInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumTags(string tag, string objectId, int objectType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumTags", new object[] {
                        tag,
                        objectId,
                        objectType}, callback, asyncState);
        }
        
        /// <remarks/>
        public tagInfo[] EndenumTags(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((tagInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void enumTagsAsync(string tag, string objectId, int objectType) {
            this.enumTagsAsync(tag, objectId, objectType, null);
        }
        
        /// <remarks/>
        public void enumTagsAsync(string tag, string objectId, int objectType, object userState) {
            if ((this.enumTagsOperationCompleted == null)) {
                this.enumTagsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumTagsOperationCompleted);
            }
            this.InvokeAsync("enumTags", new object[] {
                        tag,
                        objectId,
                        objectType}, this.enumTagsOperationCompleted, userState);
        }
        
        private void OnenumTagsOperationCompleted(object arg) {
            if ((this.enumTagsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumTagsCompleted(this, new enumTagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public alertInfo[] enumAlerts([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string locale, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("enumAlerts", new object[] {
                        locale,
                        flags});
            return ((alertInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumAlerts(string locale, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumAlerts", new object[] {
                        locale,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public alertInfo[] EndenumAlerts(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((alertInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void enumAlertsAsync(string locale, int flags) {
            this.enumAlertsAsync(locale, flags, null);
        }
        
        /// <remarks/>
        public void enumAlertsAsync(string locale, int flags, object userState) {
            if ((this.enumAlertsOperationCompleted == null)) {
                this.enumAlertsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumAlertsOperationCompleted);
            }
            this.InvokeAsync("enumAlerts", new object[] {
                        locale,
                        flags}, this.enumAlertsOperationCompleted, userState);
        }
        
        private void OnenumAlertsOperationCompleted(object arg) {
            if ((this.enumAlertsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumAlertsCompleted(this, new enumAlertsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public alertInfo getAlertInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string locale, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getAlertInfo", new object[] {
                        uuid,
                        locale,
                        flags});
            return ((alertInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAlertInfo(string uuid, string locale, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAlertInfo", new object[] {
                        uuid,
                        locale,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public alertInfo EndgetAlertInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((alertInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getAlertInfoAsync(string uuid, string locale, int flags) {
            this.getAlertInfoAsync(uuid, locale, flags, null);
        }
        
        /// <remarks/>
        public void getAlertInfoAsync(string uuid, string locale, int flags, object userState) {
            if ((this.getAlertInfoOperationCompleted == null)) {
                this.getAlertInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAlertInfoOperationCompleted);
            }
            this.InvokeAsync("getAlertInfo", new object[] {
                        uuid,
                        locale,
                        flags}, this.getAlertInfoOperationCompleted, userState);
        }
        
        private void OngetAlertInfoOperationCompleted(object arg) {
            if ((this.getAlertInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAlertInfoCompleted(this, new getAlertInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void clearAlerts([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid) {
            this.Invoke("clearAlerts", new object[] {
                        uuid});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginclearAlerts(string uuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("clearAlerts", new object[] {
                        uuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndclearAlerts(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void clearAlertsAsync(string uuid) {
            this.clearAlertsAsync(uuid, null);
        }
        
        /// <remarks/>
        public void clearAlertsAsync(string uuid, object userState) {
            if ((this.clearAlertsOperationCompleted == null)) {
                this.clearAlertsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclearAlertsOperationCompleted);
            }
            this.InvokeAsync("clearAlerts", new object[] {
                        uuid}, this.clearAlertsOperationCompleted, userState);
        }
        
        private void OnclearAlertsOperationCompleted(object arg) {
            if ((this.clearAlertsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clearAlertsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("licServerInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public licenseServerInfo getLicenseServerInfo() {
            object[] results = this.Invoke("getLicenseServerInfo", new object[0]);
            return ((licenseServerInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetLicenseServerInfo(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getLicenseServerInfo", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public licenseServerInfo EndgetLicenseServerInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((licenseServerInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getLicenseServerInfoAsync() {
            this.getLicenseServerInfoAsync(null);
        }
        
        /// <remarks/>
        public void getLicenseServerInfoAsync(object userState) {
            if ((this.getLicenseServerInfoOperationCompleted == null)) {
                this.getLicenseServerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLicenseServerInfoOperationCompleted);
            }
            this.InvokeAsync("getLicenseServerInfo", new object[0], this.getLicenseServerInfoOperationCompleted, userState);
        }
        
        private void OngetLicenseServerInfoOperationCompleted(object arg) {
            if ((this.getLicenseServerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLicenseServerInfoCompleted(this, new getLicenseServerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setLicenseServerInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string server, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int port) {
            this.Invoke("setLicenseServerInfo", new object[] {
                        server,
                        port});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetLicenseServerInfo(string server, int port, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setLicenseServerInfo", new object[] {
                        server,
                        port}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndsetLicenseServerInfo(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void setLicenseServerInfoAsync(string server, int port) {
            this.setLicenseServerInfoAsync(server, port, null);
        }
        
        /// <remarks/>
        public void setLicenseServerInfoAsync(string server, int port, object userState) {
            if ((this.setLicenseServerInfoOperationCompleted == null)) {
                this.setLicenseServerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLicenseServerInfoOperationCompleted);
            }
            this.InvokeAsync("setLicenseServerInfo", new object[] {
                        server,
                        port}, this.setLicenseServerInfoOperationCompleted, userState);
        }
        
        private void OnsetLicenseServerInfoOperationCompleted(object arg) {
            if ((this.setLicenseServerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLicenseServerInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("localizedMessage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getLocalizedMessageString([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] i18nString message, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string locale) {
            object[] results = this.Invoke("getLocalizedMessageString", new object[] {
                        message,
                        locale});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetLocalizedMessageString(i18nString message, string locale, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getLocalizedMessageString", new object[] {
                        message,
                        locale}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetLocalizedMessageString(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLocalizedMessageStringAsync(i18nString message, string locale) {
            this.getLocalizedMessageStringAsync(message, locale, null);
        }
        
        /// <remarks/>
        public void getLocalizedMessageStringAsync(i18nString message, string locale, object userState) {
            if ((this.getLocalizedMessageStringOperationCompleted == null)) {
                this.getLocalizedMessageStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLocalizedMessageStringOperationCompleted);
            }
            this.InvokeAsync("getLocalizedMessageString", new object[] {
                        message,
                        locale}, this.getLocalizedMessageStringOperationCompleted, userState);
        }
        
        private void OngetLocalizedMessageStringOperationCompleted(object arg) {
            if ((this.getLocalizedMessageStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLocalizedMessageStringCompleted(this, new getLocalizedMessageStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("list", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userInfo[] enumUsers([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("enumUsers", new object[] {
                        flags});
            return ((userInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumUsers(int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumUsers", new object[] {
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public userInfo[] EndenumUsers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((userInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void enumUsersAsync(int flags) {
            this.enumUsersAsync(flags, null);
        }
        
        /// <remarks/>
        public void enumUsersAsync(int flags, object userState) {
            if ((this.enumUsersOperationCompleted == null)) {
                this.enumUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumUsersOperationCompleted);
            }
            this.InvokeAsync("enumUsers", new object[] {
                        flags}, this.enumUsersOperationCompleted, userState);
        }
        
        private void OnenumUsersOperationCompleted(object arg) {
            if ((this.enumUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumUsersCompleted(this, new enumUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userInfo getUserInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("getUserInfo", new object[] {
                        username,
                        flags});
            return ((userInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUserInfo(string username, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUserInfo", new object[] {
                        username,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public userInfo EndgetUserInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((userInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInfoAsync(string username, int flags) {
            this.getUserInfoAsync(username, flags, null);
        }
        
        /// <remarks/>
        public void getUserInfoAsync(string username, int flags, object userState) {
            if ((this.getUserInfoOperationCompleted == null)) {
                this.getUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInfoOperationCompleted);
            }
            this.InvokeAsync("getUserInfo", new object[] {
                        username,
                        flags}, this.getUserInfoOperationCompleted, userState);
        }
        
        private void OngetUserInfoOperationCompleted(object arg) {
            if ((this.getUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInfoCompleted(this, new getUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userInfo addUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string roleId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] uint isEnabled, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("addUser", new object[] {
                        username,
                        password,
                        description,
                        roleId,
                        isEnabled,
                        flags});
            return ((userInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddUser(string username, string password, string description, string roleId, uint isEnabled, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addUser", new object[] {
                        username,
                        password,
                        description,
                        roleId,
                        isEnabled,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public userInfo EndaddUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((userInfo)(results[0]));
        }
        
        /// <remarks/>
        public void addUserAsync(string username, string password, string description, string roleId, uint isEnabled, int flags) {
            this.addUserAsync(username, password, description, roleId, isEnabled, flags, null);
        }
        
        /// <remarks/>
        public void addUserAsync(string username, string password, string description, string roleId, uint isEnabled, int flags, object userState) {
            if ((this.addUserOperationCompleted == null)) {
                this.addUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserOperationCompleted);
            }
            this.InvokeAsync("addUser", new object[] {
                        username,
                        password,
                        description,
                        roleId,
                        isEnabled,
                        flags}, this.addUserOperationCompleted, userState);
        }
        
        private void OnaddUserOperationCompleted(object arg) {
            if ((this.addUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserCompleted(this, new addUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userInfo changeUserPassword([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string oldPassword, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newPassword) {
            object[] results = this.Invoke("changeUserPassword", new object[] {
                        username,
                        oldPassword,
                        newPassword});
            return ((userInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginchangeUserPassword(string username, string oldPassword, string newPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("changeUserPassword", new object[] {
                        username,
                        oldPassword,
                        newPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public userInfo EndchangeUserPassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((userInfo)(results[0]));
        }
        
        /// <remarks/>
        public void changeUserPasswordAsync(string username, string oldPassword, string newPassword) {
            this.changeUserPasswordAsync(username, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void changeUserPasswordAsync(string username, string oldPassword, string newPassword, object userState) {
            if ((this.changeUserPasswordOperationCompleted == null)) {
                this.changeUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeUserPasswordOperationCompleted);
            }
            this.InvokeAsync("changeUserPassword", new object[] {
                        username,
                        oldPassword,
                        newPassword}, this.changeUserPasswordOperationCompleted, userState);
        }
        
        private void OnchangeUserPasswordOperationCompleted(object arg) {
            if ((this.changeUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeUserPasswordCompleted(this, new changeUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userInfo modifyUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string roleId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int isEnabled, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flags) {
            object[] results = this.Invoke("modifyUser", new object[] {
                        username,
                        description,
                        roleId,
                        isEnabled,
                        flags});
            return ((userInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmodifyUser(string username, string description, string roleId, int isEnabled, int flags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("modifyUser", new object[] {
                        username,
                        description,
                        roleId,
                        isEnabled,
                        flags}, callback, asyncState);
        }
        
        /// <remarks/>
        public userInfo EndmodifyUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((userInfo)(results[0]));
        }
        
        /// <remarks/>
        public void modifyUserAsync(string username, string description, string roleId, int isEnabled, int flags) {
            this.modifyUserAsync(username, description, roleId, isEnabled, flags, null);
        }
        
        /// <remarks/>
        public void modifyUserAsync(string username, string description, string roleId, int isEnabled, int flags, object userState) {
            if ((this.modifyUserOperationCompleted == null)) {
                this.modifyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyUserOperationCompleted);
            }
            this.InvokeAsync("modifyUser", new object[] {
                        username,
                        description,
                        roleId,
                        isEnabled,
                        flags}, this.modifyUserOperationCompleted, userState);
        }
        
        private void OnmodifyUserOperationCompleted(object arg) {
            if ((this.modifyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyUserCompleted(this, new modifyUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.citrix.com/storagelink/csl.xsd", ResponseNamespace="http://www.citrix.com/storagelink/csl.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("info", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userInfo removeUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username) {
            object[] results = this.Invoke("removeUser", new object[] {
                        username});
            return ((userInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveUser(string username, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeUser", new object[] {
                        username}, callback, asyncState);
        }
        
        /// <remarks/>
        public userInfo EndremoveUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((userInfo)(results[0]));
        }
        
        /// <remarks/>
        public void removeUserAsync(string username) {
            this.removeUserAsync(username, null);
        }
        
        /// <remarks/>
        public void removeUserAsync(string username, object userState) {
            if ((this.removeUserOperationCompleted == null)) {
                this.removeUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveUserOperationCompleted);
            }
            this.InvokeAsync("removeUser", new object[] {
                        username}, this.removeUserOperationCompleted, userState);
        }
        
        private void OnremoveUserOperationCompleted(object arg) {
            if ((this.removeUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeUserCompleted(this, new removeUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class fabricConfigurationInfo : objectInfo {
        
        private int managementPolicyField;
        
        private string zoneAliasSuffixField;
        
        private string zoneAliasPrefixField;
        
        private string zoneSuffixField;
        
        private string zonePrefixField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int managementPolicy {
            get {
                return this.managementPolicyField;
            }
            set {
                this.managementPolicyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zoneAliasSuffix {
            get {
                return this.zoneAliasSuffixField;
            }
            set {
                this.zoneAliasSuffixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zoneAliasPrefix {
            get {
                return this.zoneAliasPrefixField;
            }
            set {
                this.zoneAliasPrefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zoneSuffix {
            get {
                return this.zoneSuffixField;
            }
            set {
                this.zoneSuffixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zonePrefix {
            get {
                return this.zonePrefixField;
            }
            set {
                this.zonePrefixField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(alertInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(jobInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPGlobalConfiguration))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OperationResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OperationResultStep))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPNetworkAssoc))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPStorageRepositoryAssoc))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPStorageRepositoryAssocDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPConsistencyGroupAssoc))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPConsistencyGroupAssocDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPConsistencyGroupMinimal))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPConsistencyGroupInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPRecoveryPoolInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(virtualMachineSRPInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPSiteInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPStateInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(zoneAliasInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(zoneInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(zoneSetInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fabricInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fabricConfigurationInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(storageAdapterInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(virtualMachineTemplateInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(storageManifestInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(storageManifestProvisionInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(hostGroupInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(storageRepositoryInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(storageRepositoryNodeInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(catalogInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(storageProfileInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(storageProfileNodeInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(sysPrepRepository))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(sysPrepProfile))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(hardwareProfileInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(licenseGroupInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(storageSystemInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(storagePoolInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(hostInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(virtualMachineInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(virtualMachineHostNetworkInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(vmBootDiskInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(virtualMachineStorageDeviceInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(hostStorageDeviceInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(hostCredentialsInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(snapshotSessionInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(snapshotAssocInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPStorageVolumeAssoc))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPStorageVolumeAssocDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(snapshotMethodInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(storageAssignmentInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(targetPortInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(initiatorPortInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(vmNetworkMapInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(vmNetworkInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(vmStorageMapInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(vmStorageInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(diskDriveScsiIdInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(storageVolumeInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(storageVolumeVhdAssoc))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(hostNetworkInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(hostInitiatorInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(hostInitiatorPortInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(iscsiSessionInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(iscsiTargetID))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(managementCredentials))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(userInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(resourceGroupInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(roleInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/xcmn.xsd")]
    public partial class objectInfo {
        
        private string displayNameField;
        
        private string objectIdField;
        
        private string parentIdField;
        
        private int objectTypeField;
        
        private int objStateField;
        
        private keyValuePair[] tagsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string objectId {
            get {
                return this.objectIdField;
            }
            set {
                this.objectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string parentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int objectType {
            get {
                return this.objectTypeField;
            }
            set {
                this.objectTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int objState {
            get {
                return this.objStateField;
            }
            set {
                this.objStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tags", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public keyValuePair[] tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/xcmn.xsd")]
    public partial class keyValuePair {
        
        private string strKeyField;
        
        private string strValueField;
        
        private int intDataTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string strKey {
            get {
                return this.strKeyField;
            }
            set {
                this.strKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string strValue {
            get {
                return this.strValueField;
            }
            set {
                this.strValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int intDataType {
            get {
                return this.intDataTypeField;
            }
            set {
                this.intDataTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class licenseServerInfo {
        
        private string serverField;
        
        private long portField;
        
        private bool activeField;
        
        private long licensetypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long licensetype {
            get {
                return this.licensetypeField;
            }
            set {
                this.licensetypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/xcmn.xsd")]
    public partial class tagInfo {
        
        private string objIdField;
        
        private int objTypeField;
        
        private keyValuePair[] tagsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string objId {
            get {
                return this.objIdField;
            }
            set {
                this.objIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int objType {
            get {
                return this.objTypeField;
            }
            set {
                this.objTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tags", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public keyValuePair[] tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/xcmn.xsd")]
    public partial class @event {
        
        private System.DateTime serverTimeStampField;
        
        private int eventCounterField;
        
        private string eventIdField;
        
        private keyValuePair[] paramsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime serverTimeStamp {
            get {
                return this.serverTimeStampField;
            }
            set {
                this.serverTimeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int eventCounter {
            get {
                return this.eventCounterField;
            }
            set {
                this.eventCounterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string eventId {
            get {
                return this.eventIdField;
            }
            set {
                this.eventIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("params", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public keyValuePair[] @params {
            get {
                return this.paramsField;
            }
            set {
                this.paramsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/xcmn.xsd")]
    public partial class alertParam {
        
        private string jobIdField;
        
        private string paramKeyField;
        
        private string paramValueField;
        
        private int dataTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string jobId {
            get {
                return this.jobIdField;
            }
            set {
                this.jobIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string paramKey {
            get {
                return this.paramKeyField;
            }
            set {
                this.paramKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string paramValue {
            get {
                return this.paramValueField;
            }
            set {
                this.paramValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int dataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/xcmn.xsd")]
    public partial class objectLockInfo {
        
        private string lockIdField;
        
        private string objectIdField;
        
        private string parentIdField;
        
        private int objectTypeField;
        
        private int lockTypeField;
        
        private string jobIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lockId {
            get {
                return this.lockIdField;
            }
            set {
                this.lockIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string objectId {
            get {
                return this.objectIdField;
            }
            set {
                this.objectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string parentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int objectType {
            get {
                return this.objectTypeField;
            }
            set {
                this.objectTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int lockType {
            get {
                return this.lockTypeField;
            }
            set {
                this.lockTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string jobId {
            get {
                return this.jobIdField;
            }
            set {
                this.jobIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/xcmn.xsd")]
    public partial class jobParam {
        
        private string jobIdField;
        
        private string paramKeyField;
        
        private string paramValueField;
        
        private int dataTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string jobId {
            get {
                return this.jobIdField;
            }
            set {
                this.jobIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string paramKey {
            get {
                return this.paramKeyField;
            }
            set {
                this.paramKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string paramValue {
            get {
                return this.paramValueField;
            }
            set {
                this.paramValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int dataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/xcmn.xsd")]
    public partial class i18nString {
        
        private string messageIdField;
        
        private string defaultMessageField;
        
        private keyValuePair[] messageParamsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string defaultMessage {
            get {
                return this.defaultMessageField;
            }
            set {
                this.defaultMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("messageParams", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public keyValuePair[] messageParams {
            get {
                return this.messageParamsField;
            }
            set {
                this.messageParamsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/xcmn.xsd")]
    public partial class errorInfo {
        
        private i18nString errorMessageField;
        
        private uint errorCodeField;
        
        private uint severityField;
        
        private int errorLineField;
        
        private string errorFileField;
        
        private string errorFunctionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public i18nString errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int errorLine {
            get {
                return this.errorLineField;
            }
            set {
                this.errorLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string errorFile {
            get {
                return this.errorFileField;
            }
            set {
                this.errorFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string errorFunction {
            get {
                return this.errorFunctionField;
            }
            set {
                this.errorFunctionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class sysPrepProfileParam {
        
        private string paramKeyField;
        
        private string paramDefaultValueField;
        
        private string sysPrepProfileUuidField;
        
        private long paramValueTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string paramKey {
            get {
                return this.paramKeyField;
            }
            set {
                this.paramKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string paramDefaultValue {
            get {
                return this.paramDefaultValueField;
            }
            set {
                this.paramDefaultValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sysPrepProfileUuid {
            get {
                return this.sysPrepProfileUuidField;
            }
            set {
                this.sysPrepProfileUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long paramValueType {
            get {
                return this.paramValueTypeField;
            }
            set {
                this.paramValueTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class raidTypeInfo {
        
        private string friendlyNameField;
        
        private uint raidTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint raidType {
            get {
                return this.raidTypeField;
            }
            set {
                this.raidTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class storageVolumeLunInfo {
        
        private string storageVolumeIdField;
        
        private string lunIqnField;
        
        private int lunField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageVolumeId {
            get {
                return this.storageVolumeIdField;
            }
            set {
                this.storageVolumeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lunIqn {
            get {
                return this.lunIqnField;
            }
            set {
                this.lunIqnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int lun {
            get {
                return this.lunField;
            }
            set {
                this.lunField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/xcmn.xsd")]
    public partial class alertInfo : objectInfo {
        
        private string uuidField;
        
        private i18nString descriptionField;
        
        private System.DateTime dateStampField;
        
        private errorInfo errInfoField;
        
        private alertParam[] paramsField;
        
        private string associatedJobIdField;
        
        private long flagsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public i18nString description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime dateStamp {
            get {
                return this.dateStampField;
            }
            set {
                this.dateStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public errorInfo errInfo {
            get {
                return this.errInfoField;
            }
            set {
                this.errInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("params", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public alertParam[] @params {
            get {
                return this.paramsField;
            }
            set {
                this.paramsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string associatedJobId {
            get {
                return this.associatedJobIdField;
            }
            set {
                this.associatedJobIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/xcmn.xsd")]
    public partial class jobInfo : objectInfo {
        
        private string jobIdField;
        
        private string parentJobIdField;
        
        private string jobTypeField;
        
        private i18nString nameField;
        
        private i18nString descriptionField;
        
        private jobParam[] paramsField;
        
        private long flagsField;
        
        private long jobStatusField;
        
        private long progressField;
        
        private long jobIndexField;
        
        private System.DateTime dateStampField;
        
        private System.DateTime completedDateStampField;
        
        private errorInfo errInfoField;
        
        private objectLockInfo[] locksField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string jobId {
            get {
                return this.jobIdField;
            }
            set {
                this.jobIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string parentJobId {
            get {
                return this.parentJobIdField;
            }
            set {
                this.parentJobIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string jobType {
            get {
                return this.jobTypeField;
            }
            set {
                this.jobTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public i18nString name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public i18nString description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("params", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public jobParam[] @params {
            get {
                return this.paramsField;
            }
            set {
                this.paramsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long jobStatus {
            get {
                return this.jobStatusField;
            }
            set {
                this.jobStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long progress {
            get {
                return this.progressField;
            }
            set {
                this.progressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long jobIndex {
            get {
                return this.jobIndexField;
            }
            set {
                this.jobIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime dateStamp {
            get {
                return this.dateStampField;
            }
            set {
                this.dateStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime completedDateStamp {
            get {
                return this.completedDateStampField;
            }
            set {
                this.completedDateStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public errorInfo errInfo {
            get {
                return this.errInfoField;
            }
            set {
                this.errInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locks", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectLockInfo[] locks {
            get {
                return this.locksField;
            }
            set {
                this.locksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class SRPGlobalConfiguration : objectInfo {
        
        private SRPSiteInfo localSiteField;
        
        private SRPSiteInfo remoteSiteField;
        
        private managementCredentials[] localCredentialsField;
        
        private managementCredentials[] remoteCredentialsField;
        
        private storageRepositoryInfo[] localSRsField;
        
        private storageRepositoryInfo[] remoteSRsField;
        
        private SRPStorageRepositoryAssoc[] srMappingsField;
        
        private SRPStorageVolumeAssoc[] svMappingsField;
        
        private SRPNetworkAssoc[] networkMappingsField;
        
        private SRPConsistencyGroupMinimal[] consistencyGroupsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPSiteInfo localSite {
            get {
                return this.localSiteField;
            }
            set {
                this.localSiteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPSiteInfo remoteSite {
            get {
                return this.remoteSiteField;
            }
            set {
                this.remoteSiteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("localCredentials", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public managementCredentials[] localCredentials {
            get {
                return this.localCredentialsField;
            }
            set {
                this.localCredentialsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("remoteCredentials", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public managementCredentials[] remoteCredentials {
            get {
                return this.remoteCredentialsField;
            }
            set {
                this.remoteCredentialsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("localSRs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageRepositoryInfo[] localSRs {
            get {
                return this.localSRsField;
            }
            set {
                this.localSRsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("remoteSRs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageRepositoryInfo[] remoteSRs {
            get {
                return this.remoteSRsField;
            }
            set {
                this.remoteSRsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("srMappings", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPStorageRepositoryAssoc[] srMappings {
            get {
                return this.srMappingsField;
            }
            set {
                this.srMappingsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("svMappings", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPStorageVolumeAssoc[] svMappings {
            get {
                return this.svMappingsField;
            }
            set {
                this.svMappingsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("networkMappings", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPNetworkAssoc[] networkMappings {
            get {
                return this.networkMappingsField;
            }
            set {
                this.networkMappingsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("consistencyGroups", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPConsistencyGroupMinimal[] consistencyGroups {
            get {
                return this.consistencyGroupsField;
            }
            set {
                this.consistencyGroupsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class SRPSiteInfo : objectInfo {
        
        private string uuidField;
        
        private bool enabledField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string serviceAddressField;
        
        private int portField;
        
        private bool useSSLField;
        
        private string usernameField;
        
        private string passwordField;
        
        private uint modeField;
        
        private string srpPersistPathField;
        
        private hostInfo[] hostsField;
        
        private hostNetworkInfo[] networksField;
        
        private storageSystemInfo[] storageSystemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serviceAddress {
            get {
                return this.serviceAddressField;
            }
            set {
                this.serviceAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool useSSL {
            get {
                return this.useSSLField;
            }
            set {
                this.useSSLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string srpPersistPath {
            get {
                return this.srpPersistPathField;
            }
            set {
                this.srpPersistPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("hosts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hostInfo[] hosts {
            get {
                return this.hostsField;
            }
            set {
                this.hostsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("networks", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hostNetworkInfo[] networks {
            get {
                return this.networksField;
            }
            set {
                this.networksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("storageSystems", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageSystemInfo[] storageSystems {
            get {
                return this.storageSystemsField;
            }
            set {
                this.storageSystemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class hostInfo : objectInfo {
        
        private string hostnameField;
        
        private string ipAddressField;
        
        private string osTypeField;
        
        private string osVersionField;
        
        private string usernameField;
        
        private string passwordField;
        
        private string uuidField;
        
        private string hostGroupUuidField;
        
        private string hostGroupNameField;
        
        private uint cpuCountField;
        
        private uint memSizeInMBField;
        
        private uint stateField;
        
        private uint hyperVisorTypeField;
        
        private string macAddressesField;
        
        private uint licenseTypeField;
        
        private string recoveryPoolUuidField;
        
        private hostInitiatorInfo[] hostInitiatorInfoListField;
        
        private storageVolumeInfo[] storageVolumeInfoListField;
        
        private diskDriveScsiIdInfo[] diskDriveScsiIdListField;
        
        private vmNetworkMapInfo[] vmNetworkMapInfoListField;
        
        private virtualMachineInfo[] virtualMachineInfoListField;
        
        private hostNetworkInfo[] hostNetworkInfoListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hostname {
            get {
                return this.hostnameField;
            }
            set {
                this.hostnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ipAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string osType {
            get {
                return this.osTypeField;
            }
            set {
                this.osTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string osVersion {
            get {
                return this.osVersionField;
            }
            set {
                this.osVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hostGroupUuid {
            get {
                return this.hostGroupUuidField;
            }
            set {
                this.hostGroupUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hostGroupName {
            get {
                return this.hostGroupNameField;
            }
            set {
                this.hostGroupNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint cpuCount {
            get {
                return this.cpuCountField;
            }
            set {
                this.cpuCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint memSizeInMB {
            get {
                return this.memSizeInMBField;
            }
            set {
                this.memSizeInMBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint hyperVisorType {
            get {
                return this.hyperVisorTypeField;
            }
            set {
                this.hyperVisorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string macAddresses {
            get {
                return this.macAddressesField;
            }
            set {
                this.macAddressesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint licenseType {
            get {
                return this.licenseTypeField;
            }
            set {
                this.licenseTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string recoveryPoolUuid {
            get {
                return this.recoveryPoolUuidField;
            }
            set {
                this.recoveryPoolUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("hostInitiatorInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hostInitiatorInfo[] hostInitiatorInfoList {
            get {
                return this.hostInitiatorInfoListField;
            }
            set {
                this.hostInitiatorInfoListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("storageVolumeInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageVolumeInfo[] storageVolumeInfoList {
            get {
                return this.storageVolumeInfoListField;
            }
            set {
                this.storageVolumeInfoListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("diskDriveScsiIdList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public diskDriveScsiIdInfo[] diskDriveScsiIdList {
            get {
                return this.diskDriveScsiIdListField;
            }
            set {
                this.diskDriveScsiIdListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vmNetworkMapInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public vmNetworkMapInfo[] vmNetworkMapInfoList {
            get {
                return this.vmNetworkMapInfoListField;
            }
            set {
                this.vmNetworkMapInfoListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("virtualMachineInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public virtualMachineInfo[] virtualMachineInfoList {
            get {
                return this.virtualMachineInfoListField;
            }
            set {
                this.virtualMachineInfoListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("hostNetworkInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hostNetworkInfo[] hostNetworkInfoList {
            get {
                return this.hostNetworkInfoListField;
            }
            set {
                this.hostNetworkInfoListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class hostInitiatorInfo : objectInfo {
        
        private string hostNameField;
        
        private string nameField;
        
        private string tagField;
        
        private uint initiatorTypeField;
        
        private bool isVirtualField;
        
        private bool isDisabledField;
        
        private string chapUsernameField;
        
        private string chapPasswordField;
        
        private string manufacturerField;
        
        private string mfgDomainField;
        
        private string modelField;
        
        private string serialNumberField;
        
        private string nodeSymbolicNameField;
        
        private hostInitiatorPortInfo[] initiatorPortListField;
        
        private iscsiSessionInfo[] iscsiSessionListField;
        
        private string uuidField;
        
        private string hostUuidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hostName {
            get {
                return this.hostNameField;
            }
            set {
                this.hostNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint initiatorType {
            get {
                return this.initiatorTypeField;
            }
            set {
                this.initiatorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isVirtual {
            get {
                return this.isVirtualField;
            }
            set {
                this.isVirtualField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isDisabled {
            get {
                return this.isDisabledField;
            }
            set {
                this.isDisabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string chapUsername {
            get {
                return this.chapUsernameField;
            }
            set {
                this.chapUsernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string chapPassword {
            get {
                return this.chapPasswordField;
            }
            set {
                this.chapPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mfgDomain {
            get {
                return this.mfgDomainField;
            }
            set {
                this.mfgDomainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string nodeSymbolicName {
            get {
                return this.nodeSymbolicNameField;
            }
            set {
                this.nodeSymbolicNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("initiatorPortList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hostInitiatorPortInfo[] initiatorPortList {
            get {
                return this.initiatorPortListField;
            }
            set {
                this.initiatorPortListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("iscsiSessionList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public iscsiSessionInfo[] iscsiSessionList {
            get {
                return this.iscsiSessionListField;
            }
            set {
                this.iscsiSessionListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hostUuid {
            get {
                return this.hostUuidField;
            }
            set {
                this.hostUuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class hostInitiatorPortInfo : objectInfo {
        
        private string initiatorPortNameField;
        
        private int portStateField;
        
        private string fabricNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string initiatorPortName {
            get {
                return this.initiatorPortNameField;
            }
            set {
                this.initiatorPortNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int portState {
            get {
                return this.portStateField;
            }
            set {
                this.portStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fabricName {
            get {
                return this.fabricNameField;
            }
            set {
                this.fabricNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class iscsiSessionInfo : objectInfo {
        
        private string initiatorNameField;
        
        private string targetNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string initiatorName {
            get {
                return this.initiatorNameField;
            }
            set {
                this.initiatorNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetName {
            get {
                return this.targetNameField;
            }
            set {
                this.targetNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class storageVolumeInfo : objectInfo {
        
        private string storageVolumeIdField;
        
        private string storageSystemIdField;
        
        private string storagePoolIdField;
        
        private string friendlyNameField;
        
        private string serialNumField;
        
        private int statusField;
        
        private uint accessPermissionsField;
        
        private uint volumeTypeField;
        
        private uint sizeInMBField;
        
        private uint usedSpaceInMBField;
        
        private bool isSnapshotField;
        
        private uint snapshotFlagsField;
        
        private string lunIqnField;
        
        private string[] childStorageVolumeListField;
        
        private string assignedToUserField;
        
        private uint assignedToHostField;
        
        private storageVolumeVhdAssoc[] storageVolumeVhdAssocListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageVolumeId {
            get {
                return this.storageVolumeIdField;
            }
            set {
                this.storageVolumeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageSystemId {
            get {
                return this.storageSystemIdField;
            }
            set {
                this.storageSystemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storagePoolId {
            get {
                return this.storagePoolIdField;
            }
            set {
                this.storagePoolIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNum {
            get {
                return this.serialNumField;
            }
            set {
                this.serialNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint accessPermissions {
            get {
                return this.accessPermissionsField;
            }
            set {
                this.accessPermissionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint volumeType {
            get {
                return this.volumeTypeField;
            }
            set {
                this.volumeTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint sizeInMB {
            get {
                return this.sizeInMBField;
            }
            set {
                this.sizeInMBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint usedSpaceInMB {
            get {
                return this.usedSpaceInMBField;
            }
            set {
                this.usedSpaceInMBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isSnapshot {
            get {
                return this.isSnapshotField;
            }
            set {
                this.isSnapshotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint snapshotFlags {
            get {
                return this.snapshotFlagsField;
            }
            set {
                this.snapshotFlagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lunIqn {
            get {
                return this.lunIqnField;
            }
            set {
                this.lunIqnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("childStorageVolumeList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] childStorageVolumeList {
            get {
                return this.childStorageVolumeListField;
            }
            set {
                this.childStorageVolumeListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string assignedToUser {
            get {
                return this.assignedToUserField;
            }
            set {
                this.assignedToUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint assignedToHost {
            get {
                return this.assignedToHostField;
            }
            set {
                this.assignedToHostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("storageVolumeVhdAssocList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageVolumeVhdAssoc[] storageVolumeVhdAssocList {
            get {
                return this.storageVolumeVhdAssocListField;
            }
            set {
                this.storageVolumeVhdAssocListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class storageVolumeVhdAssoc : objectInfo {
        
        private string storageVolumeIdField;
        
        private string virtualDeviceFilePathField;
        
        private uint fileTypeField;
        
        private uint fileSizeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageVolumeId {
            get {
                return this.storageVolumeIdField;
            }
            set {
                this.storageVolumeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string virtualDeviceFilePath {
            get {
                return this.virtualDeviceFilePathField;
            }
            set {
                this.virtualDeviceFilePathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint fileType {
            get {
                return this.fileTypeField;
            }
            set {
                this.fileTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint fileSize {
            get {
                return this.fileSizeField;
            }
            set {
                this.fileSizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class diskDriveScsiIdInfo : objectInfo {
        
        private string hostNameField;
        
        private string nameField;
        
        private string tagField;
        
        private ulong indexField;
        
        private ulong portField;
        
        private ulong busField;
        
        private ulong targetField;
        
        private ulong lunField;
        
        private string vendorIDField;
        
        private string productIDField;
        
        private string enclosureIDField;
        
        private string deviceIDField;
        
        private string snidField;
        
        private bool isAvailableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hostName {
            get {
                return this.hostNameField;
            }
            set {
                this.hostNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ulong index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ulong port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ulong bus {
            get {
                return this.busField;
            }
            set {
                this.busField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ulong target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ulong lun {
            get {
                return this.lunField;
            }
            set {
                this.lunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string vendorID {
            get {
                return this.vendorIDField;
            }
            set {
                this.vendorIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string productID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string enclosureID {
            get {
                return this.enclosureIDField;
            }
            set {
                this.enclosureIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string snid {
            get {
                return this.snidField;
            }
            set {
                this.snidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isAvailable {
            get {
                return this.isAvailableField;
            }
            set {
                this.isAvailableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class vmNetworkMapInfo : objectInfo {
        
        private string vmNameField;
        
        private string guidField;
        
        private vmNetworkInfo[] vmNetworkInfosField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string vmName {
            get {
                return this.vmNameField;
            }
            set {
                this.vmNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vmNetworkInfos", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public vmNetworkInfo[] vmNetworkInfos {
            get {
                return this.vmNetworkInfosField;
            }
            set {
                this.vmNetworkInfosField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class vmNetworkInfo : objectInfo {
        
        private string uuidField;
        
        private string vmUuidField;
        
        private string networkNameField;
        
        private string deviceNameField;
        
        private string mACField;
        
        private string networkTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string vmUuid {
            get {
                return this.vmUuidField;
            }
            set {
                this.vmUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string networkName {
            get {
                return this.networkNameField;
            }
            set {
                this.networkNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deviceName {
            get {
                return this.deviceNameField;
            }
            set {
                this.deviceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MAC {
            get {
                return this.mACField;
            }
            set {
                this.mACField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string networkType {
            get {
                return this.networkTypeField;
            }
            set {
                this.networkTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class virtualMachineInfo : objectInfo {
        
        private string sourceTemplateField;
        
        private string hostnameField;
        
        private string ipAddressField;
        
        private uint hyperVisorTypeField;
        
        private string uuidField;
        
        private string osTypeField;
        
        private string osVersionField;
        
        private uint cpuCountField;
        
        private uint memSizeInMBField;
        
        private string biosBootOrderField;
        
        private uint hasDvdDriveField;
        
        private uint hasScsiControllerField;
        
        private uint hasLegacyNetworkField;
        
        private string parentHostUuidField;
        
        private uint stateField;
        
        private string consistencyGroupUuidField;
        
        private bool pvField;
        
        private uint flagsField;
        
        private string srpSiteUuidField;
        
        private hostInitiatorInfo[] hostInitiatorInfoListField;
        
        private virtualMachineStorageDeviceInfo[] vmStorageDeviceInfoListField;
        
        private vmNetworkInfo[] vmNetworkInfosField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sourceTemplate {
            get {
                return this.sourceTemplateField;
            }
            set {
                this.sourceTemplateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hostname {
            get {
                return this.hostnameField;
            }
            set {
                this.hostnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ipAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint hyperVisorType {
            get {
                return this.hyperVisorTypeField;
            }
            set {
                this.hyperVisorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string osType {
            get {
                return this.osTypeField;
            }
            set {
                this.osTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string osVersion {
            get {
                return this.osVersionField;
            }
            set {
                this.osVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint cpuCount {
            get {
                return this.cpuCountField;
            }
            set {
                this.cpuCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint memSizeInMB {
            get {
                return this.memSizeInMBField;
            }
            set {
                this.memSizeInMBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string biosBootOrder {
            get {
                return this.biosBootOrderField;
            }
            set {
                this.biosBootOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint hasDvdDrive {
            get {
                return this.hasDvdDriveField;
            }
            set {
                this.hasDvdDriveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint hasScsiController {
            get {
                return this.hasScsiControllerField;
            }
            set {
                this.hasScsiControllerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint hasLegacyNetwork {
            get {
                return this.hasLegacyNetworkField;
            }
            set {
                this.hasLegacyNetworkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string parentHostUuid {
            get {
                return this.parentHostUuidField;
            }
            set {
                this.parentHostUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string consistencyGroupUuid {
            get {
                return this.consistencyGroupUuidField;
            }
            set {
                this.consistencyGroupUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool pv {
            get {
                return this.pvField;
            }
            set {
                this.pvField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string srpSiteUuid {
            get {
                return this.srpSiteUuidField;
            }
            set {
                this.srpSiteUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("hostInitiatorInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hostInitiatorInfo[] hostInitiatorInfoList {
            get {
                return this.hostInitiatorInfoListField;
            }
            set {
                this.hostInitiatorInfoListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vmStorageDeviceInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public virtualMachineStorageDeviceInfo[] vmStorageDeviceInfoList {
            get {
                return this.vmStorageDeviceInfoListField;
            }
            set {
                this.vmStorageDeviceInfoListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vmNetworkInfos", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public vmNetworkInfo[] vmNetworkInfos {
            get {
                return this.vmNetworkInfosField;
            }
            set {
                this.vmNetworkInfosField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class virtualMachineStorageDeviceInfo : objectInfo {
        
        private string vmUuidField;
        
        private string vmStorageDeviceInfoIdField;
        
        private string hostStorageDeviceInfoIdField;
        
        private vmvirtualcontrollertypet virtualControllerTypeField;
        
        private uint virtualControllerIndexField;
        
        private uint virtualDeviceIndexField;
        
        private bool isBootDeviceField;
        
        private storageconnectiontypet vmStorageTypeField;
        
        private string vhdPathField;
        
        private string metadataLunNameField;
        
        private hostStorageDeviceInfo hostStorageDeviceInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string vmUuid {
            get {
                return this.vmUuidField;
            }
            set {
                this.vmUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string vmStorageDeviceInfoId {
            get {
                return this.vmStorageDeviceInfoIdField;
            }
            set {
                this.vmStorageDeviceInfoIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hostStorageDeviceInfoId {
            get {
                return this.hostStorageDeviceInfoIdField;
            }
            set {
                this.hostStorageDeviceInfoIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public vmvirtualcontrollertypet virtualControllerType {
            get {
                return this.virtualControllerTypeField;
            }
            set {
                this.virtualControllerTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint virtualControllerIndex {
            get {
                return this.virtualControllerIndexField;
            }
            set {
                this.virtualControllerIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint virtualDeviceIndex {
            get {
                return this.virtualDeviceIndexField;
            }
            set {
                this.virtualDeviceIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isBootDevice {
            get {
                return this.isBootDeviceField;
            }
            set {
                this.isBootDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageconnectiontypet vmStorageType {
            get {
                return this.vmStorageTypeField;
            }
            set {
                this.vmStorageTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string vhdPath {
            get {
                return this.vhdPathField;
            }
            set {
                this.vhdPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string metadataLunName {
            get {
                return this.metadataLunNameField;
            }
            set {
                this.metadataLunNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hostStorageDeviceInfo hostStorageDeviceInfo {
            get {
                return this.hostStorageDeviceInfoField;
            }
            set {
                this.hostStorageDeviceInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="vm-virtual-controller-type-t", Namespace="http://www.citrix.com/storagelink/xcmn.xsd")]
    public enum vmvirtualcontrollertypet {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("XCMN-VM-VIRTUAL-CONTROLLER-TYPE-IDE")]
        XCMNVMVIRTUALCONTROLLERTYPEIDE,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("XCMN-VM-VIRTUAL-CONTROLLER-TYPE-SCSI")]
        XCMNVMVIRTUALCONTROLLERTYPESCSI,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="storage-connection-type-t", Namespace="http://www.citrix.com/storagelink/xcmn.xsd")]
    public enum storageconnectiontypet {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("XCMN-RAW-LUN")]
        XCMNRAWLUN,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("XCMN-VHD")]
        XCMNVHD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("XCMN-METADATA-LUN")]
        XCMNMETADATALUN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class hostStorageDeviceInfo : objectInfo {
        
        private string hostUuidField;
        
        private string hostStorageDeviceInfoIdField;
        
        private string storageVolumeIdField;
        
        private uint diskIndexField;
        
        private string devicePathField;
        
        private string mountPointField;
        
        private string volumeIdField;
        
        private string initiatorNameField;
        
        private initiatorPortInfo initiatorPortInfoField;
        
        private storageVolumeInfo storageVolumeInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hostUuid {
            get {
                return this.hostUuidField;
            }
            set {
                this.hostUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hostStorageDeviceInfoId {
            get {
                return this.hostStorageDeviceInfoIdField;
            }
            set {
                this.hostStorageDeviceInfoIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageVolumeId {
            get {
                return this.storageVolumeIdField;
            }
            set {
                this.storageVolumeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint diskIndex {
            get {
                return this.diskIndexField;
            }
            set {
                this.diskIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string devicePath {
            get {
                return this.devicePathField;
            }
            set {
                this.devicePathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mountPoint {
            get {
                return this.mountPointField;
            }
            set {
                this.mountPointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string volumeId {
            get {
                return this.volumeIdField;
            }
            set {
                this.volumeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string initiatorName {
            get {
                return this.initiatorNameField;
            }
            set {
                this.initiatorNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public initiatorPortInfo initiatorPortInfo {
            get {
                return this.initiatorPortInfoField;
            }
            set {
                this.initiatorPortInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageVolumeInfo storageVolumeInfo {
            get {
                return this.storageVolumeInfoField;
            }
            set {
                this.storageVolumeInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class initiatorPortInfo : objectInfo {
        
        private string storageSystemIdField;
        
        private string portIdField;
        
        private string friendlyNameField;
        
        private uint protocolTypeField;
        
        private uint hostTypeField;
        
        private uint connectionStateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageSystemId {
            get {
                return this.storageSystemIdField;
            }
            set {
                this.storageSystemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string portId {
            get {
                return this.portIdField;
            }
            set {
                this.portIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint protocolType {
            get {
                return this.protocolTypeField;
            }
            set {
                this.protocolTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint hostType {
            get {
                return this.hostTypeField;
            }
            set {
                this.hostTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint connectionState {
            get {
                return this.connectionStateField;
            }
            set {
                this.connectionStateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class hostNetworkInfo : objectInfo {
        
        private string nameField;
        
        private string descriptionField;
        
        private string tagField;
        
        private uint typeField;
        
        private uint statusField;
        
        private string uuidField;
        
        private string hostUuidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hostUuid {
            get {
                return this.hostUuidField;
            }
            set {
                this.hostUuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class storageSystemInfo : objectInfo {
        
        private string storageSystemIdField;
        
        private string storageAdapterIdField;
        
        private string friendlyNameField;
        
        private string serialNumField;
        
        private string vendorField;
        
        private string modelField;
        
        private uint capabilitiesField;
        
        private string srpSiteUuidField;
        
        private string[] recoveryPoolUuidListField;
        
        private snapshotMethodInfo[] snapshotMethodListField;
        
        private raidTypeInfo[] raidTypeListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageSystemId {
            get {
                return this.storageSystemIdField;
            }
            set {
                this.storageSystemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageAdapterId {
            get {
                return this.storageAdapterIdField;
            }
            set {
                this.storageAdapterIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serialNum {
            get {
                return this.serialNumField;
            }
            set {
                this.serialNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string vendor {
            get {
                return this.vendorField;
            }
            set {
                this.vendorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint capabilities {
            get {
                return this.capabilitiesField;
            }
            set {
                this.capabilitiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string srpSiteUuid {
            get {
                return this.srpSiteUuidField;
            }
            set {
                this.srpSiteUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("recoveryPoolUuidList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] recoveryPoolUuidList {
            get {
                return this.recoveryPoolUuidListField;
            }
            set {
                this.recoveryPoolUuidListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("snapshotMethodList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public snapshotMethodInfo[] snapshotMethodList {
            get {
                return this.snapshotMethodListField;
            }
            set {
                this.snapshotMethodListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("raidTypeList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public raidTypeInfo[] raidTypeList {
            get {
                return this.raidTypeListField;
            }
            set {
                this.raidTypeListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class snapshotMethodInfo : objectInfo {
        
        private string nameField;
        
        private uint snapshotTypeField;
        
        private uint snapshotCapabilitiesField;
        
        private uint nodeTypesField;
        
        private uint maxSnapshotsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint snapshotType {
            get {
                return this.snapshotTypeField;
            }
            set {
                this.snapshotTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint snapshotCapabilities {
            get {
                return this.snapshotCapabilitiesField;
            }
            set {
                this.snapshotCapabilitiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint nodeTypes {
            get {
                return this.nodeTypesField;
            }
            set {
                this.nodeTypesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint maxSnapshots {
            get {
                return this.maxSnapshotsField;
            }
            set {
                this.maxSnapshotsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class managementCredentials : objectInfo {
        
        private string friendlyNameField;
        
        private string uuidField;
        
        private string storageAdapterIdField;
        
        private string ipAddressField;
        
        private int portNumberField;
        
        private string usernameField;
        
        private string passwordField;
        
        private string contextField;
        
        private string nsField;
        
        private string srpSiteUuidField;
        
        private string[] ssidListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageAdapterId {
            get {
                return this.storageAdapterIdField;
            }
            set {
                this.storageAdapterIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ipAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int portNumber {
            get {
                return this.portNumberField;
            }
            set {
                this.portNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ns {
            get {
                return this.nsField;
            }
            set {
                this.nsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string srpSiteUuid {
            get {
                return this.srpSiteUuidField;
            }
            set {
                this.srpSiteUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ssidList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] ssidList {
            get {
                return this.ssidListField;
            }
            set {
                this.ssidListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class storageRepositoryInfo : objectInfo {
        
        private string uuidField;
        
        private string friendlyNameField;
        
        private string storageSystemIdField;
        
        private string storagePoolIdField;
        
        private uint raidTypeField;
        
        private uint protocolTypeField;
        
        private string descriptionField;
        
        private uint provisioningTypeField;
        
        private string hostGroupUuidField;
        
        private string chapUsernameField;
        
        private string chapPasswordField;
        
        private uint typeField;
        
        private uint poolCountField;
        
        private uint useDeduplicationField;
        
        private string srpSiteUuidField;
        
        private storageRepositoryNodeInfo[] storageRepositoryNodeInfoListField;
        
        private string managedByField;
        
        private storagePoolInfo storagePoolInfoField;
        
        private storageSystemInfo storageSystemInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageSystemId {
            get {
                return this.storageSystemIdField;
            }
            set {
                this.storageSystemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storagePoolId {
            get {
                return this.storagePoolIdField;
            }
            set {
                this.storagePoolIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint raidType {
            get {
                return this.raidTypeField;
            }
            set {
                this.raidTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint protocolType {
            get {
                return this.protocolTypeField;
            }
            set {
                this.protocolTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint provisioningType {
            get {
                return this.provisioningTypeField;
            }
            set {
                this.provisioningTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hostGroupUuid {
            get {
                return this.hostGroupUuidField;
            }
            set {
                this.hostGroupUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string chapUsername {
            get {
                return this.chapUsernameField;
            }
            set {
                this.chapUsernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string chapPassword {
            get {
                return this.chapPasswordField;
            }
            set {
                this.chapPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint poolCount {
            get {
                return this.poolCountField;
            }
            set {
                this.poolCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint useDeduplication {
            get {
                return this.useDeduplicationField;
            }
            set {
                this.useDeduplicationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string srpSiteUuid {
            get {
                return this.srpSiteUuidField;
            }
            set {
                this.srpSiteUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("storageRepositoryNodeInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageRepositoryNodeInfo[] storageRepositoryNodeInfoList {
            get {
                return this.storageRepositoryNodeInfoListField;
            }
            set {
                this.storageRepositoryNodeInfoListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string managedBy {
            get {
                return this.managedByField;
            }
            set {
                this.managedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storagePoolInfo storagePoolInfo {
            get {
                return this.storagePoolInfoField;
            }
            set {
                this.storagePoolInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageSystemInfo storageSystemInfo {
            get {
                return this.storageSystemInfoField;
            }
            set {
                this.storageSystemInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class storageRepositoryNodeInfo : objectInfo {
        
        private string virtualDeviceFilePathField;
        
        private string storageVolumeIdField;
        
        private string storageRepositoryUuidField;
        
        private storageVolumeInfo storageVolumeInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string virtualDeviceFilePath {
            get {
                return this.virtualDeviceFilePathField;
            }
            set {
                this.virtualDeviceFilePathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageVolumeId {
            get {
                return this.storageVolumeIdField;
            }
            set {
                this.storageVolumeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageRepositoryUuid {
            get {
                return this.storageRepositoryUuidField;
            }
            set {
                this.storageRepositoryUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageVolumeInfo storageVolumeInfo {
            get {
                return this.storageVolumeInfoField;
            }
            set {
                this.storageVolumeInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class storagePoolInfo : objectInfo {
        
        private string friendlyNameField;
        
        private string storagePoolIdField;
        
        private string storageSystemIdField;
        
        private string parentPoolField;
        
        private uint sizeInMBField;
        
        private uint freeSpaceInMBField;
        
        private uint availableFreeSpaceInMBField;
        
        private uint supportedRaidTypesField;
        
        private uint supportedNodeTypesField;
        
        private uint supportedProvisioningTypesField;
        
        private bool isDefaultField;
        
        private uint statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storagePoolId {
            get {
                return this.storagePoolIdField;
            }
            set {
                this.storagePoolIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageSystemId {
            get {
                return this.storageSystemIdField;
            }
            set {
                this.storageSystemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string parentPool {
            get {
                return this.parentPoolField;
            }
            set {
                this.parentPoolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint sizeInMB {
            get {
                return this.sizeInMBField;
            }
            set {
                this.sizeInMBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint freeSpaceInMB {
            get {
                return this.freeSpaceInMBField;
            }
            set {
                this.freeSpaceInMBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint availableFreeSpaceInMB {
            get {
                return this.availableFreeSpaceInMBField;
            }
            set {
                this.availableFreeSpaceInMBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint supportedRaidTypes {
            get {
                return this.supportedRaidTypesField;
            }
            set {
                this.supportedRaidTypesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint supportedNodeTypes {
            get {
                return this.supportedNodeTypesField;
            }
            set {
                this.supportedNodeTypesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint supportedProvisioningTypes {
            get {
                return this.supportedProvisioningTypesField;
            }
            set {
                this.supportedProvisioningTypesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isDefault {
            get {
                return this.isDefaultField;
            }
            set {
                this.isDefaultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPStorageRepositoryAssocDetail))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class SRPStorageRepositoryAssoc : objectInfo {
        
        private string uuidField;
        
        private string sourceStorageRepositoryUuidField;
        
        private string targetStorageRepositoryUuidField;
        
        private string srpSiteUuidField;
        
        private string remoteSiteUuidField;
        
        private bool optimizeReplicationsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sourceStorageRepositoryUuid {
            get {
                return this.sourceStorageRepositoryUuidField;
            }
            set {
                this.sourceStorageRepositoryUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetStorageRepositoryUuid {
            get {
                return this.targetStorageRepositoryUuidField;
            }
            set {
                this.targetStorageRepositoryUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string srpSiteUuid {
            get {
                return this.srpSiteUuidField;
            }
            set {
                this.srpSiteUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string remoteSiteUuid {
            get {
                return this.remoteSiteUuidField;
            }
            set {
                this.remoteSiteUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool optimizeReplications {
            get {
                return this.optimizeReplicationsField;
            }
            set {
                this.optimizeReplicationsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class SRPStorageRepositoryAssocDetail : SRPStorageRepositoryAssoc {
        
        private storageRepositoryInfo sourceStorageRepositoryField;
        
        private storageRepositoryInfo targetStorageRepositoryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageRepositoryInfo sourceStorageRepository {
            get {
                return this.sourceStorageRepositoryField;
            }
            set {
                this.sourceStorageRepositoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageRepositoryInfo targetStorageRepository {
            get {
                return this.targetStorageRepositoryField;
            }
            set {
                this.targetStorageRepositoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPStorageVolumeAssocDetail))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class SRPStorageVolumeAssoc : snapshotAssocInfo {
        
        private string uuidField;
        
        private string sourceStorageVolumeFriendlyNameField;
        
        private string targetStorageVolumeFriendlyNameField;
        
        private string sourceStoragePoolIdField;
        
        private string targetStoragePoolIdField;
        
        private string storageRepositoryAssocIdField;
        
        private string srpSiteUuidField;
        
        private string targetSiteUuidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sourceStorageVolumeFriendlyName {
            get {
                return this.sourceStorageVolumeFriendlyNameField;
            }
            set {
                this.sourceStorageVolumeFriendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetStorageVolumeFriendlyName {
            get {
                return this.targetStorageVolumeFriendlyNameField;
            }
            set {
                this.targetStorageVolumeFriendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sourceStoragePoolId {
            get {
                return this.sourceStoragePoolIdField;
            }
            set {
                this.sourceStoragePoolIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetStoragePoolId {
            get {
                return this.targetStoragePoolIdField;
            }
            set {
                this.targetStoragePoolIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageRepositoryAssocId {
            get {
                return this.storageRepositoryAssocIdField;
            }
            set {
                this.storageRepositoryAssocIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string srpSiteUuid {
            get {
                return this.srpSiteUuidField;
            }
            set {
                this.srpSiteUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetSiteUuid {
            get {
                return this.targetSiteUuidField;
            }
            set {
                this.targetSiteUuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPStorageVolumeAssoc))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPStorageVolumeAssocDetail))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class snapshotAssocInfo : objectInfo {
        
        private string sourceStorageVolumeIdField;
        
        private string sourceStorageSystemIdField;
        
        private string targetStorageVolumeIdField;
        
        private string targetStorageSystemIdField;
        
        private string targetSnapshotBackingStoreIdField;
        
        private string groupIdField;
        
        private uint snapshotStateField;
        
        private uint snapshotTypeField;
        
        private uint operationField;
        
        private int progressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sourceStorageVolumeId {
            get {
                return this.sourceStorageVolumeIdField;
            }
            set {
                this.sourceStorageVolumeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sourceStorageSystemId {
            get {
                return this.sourceStorageSystemIdField;
            }
            set {
                this.sourceStorageSystemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetStorageVolumeId {
            get {
                return this.targetStorageVolumeIdField;
            }
            set {
                this.targetStorageVolumeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetStorageSystemId {
            get {
                return this.targetStorageSystemIdField;
            }
            set {
                this.targetStorageSystemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetSnapshotBackingStoreId {
            get {
                return this.targetSnapshotBackingStoreIdField;
            }
            set {
                this.targetSnapshotBackingStoreIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string groupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint snapshotState {
            get {
                return this.snapshotStateField;
            }
            set {
                this.snapshotStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint snapshotType {
            get {
                return this.snapshotTypeField;
            }
            set {
                this.snapshotTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int progress {
            get {
                return this.progressField;
            }
            set {
                this.progressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class SRPStorageVolumeAssocDetail : SRPStorageVolumeAssoc {
        
        private storageVolumeInfo sourceStorageVolumeField;
        
        private storageVolumeInfo targetStorageVolumeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageVolumeInfo sourceStorageVolume {
            get {
                return this.sourceStorageVolumeField;
            }
            set {
                this.sourceStorageVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageVolumeInfo targetStorageVolume {
            get {
                return this.targetStorageVolumeField;
            }
            set {
                this.targetStorageVolumeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class SRPNetworkAssoc : objectInfo {
        
        private string primaryNetworkIdField;
        
        private string secondaryNetworkIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string primaryNetworkId {
            get {
                return this.primaryNetworkIdField;
            }
            set {
                this.primaryNetworkIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string secondaryNetworkId {
            get {
                return this.secondaryNetworkIdField;
            }
            set {
                this.secondaryNetworkIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPConsistencyGroupInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class SRPConsistencyGroupMinimal : objectInfo {
        
        private string uuidField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class SRPConsistencyGroupInfo : SRPConsistencyGroupMinimal {
        
        private string descriptionField;
        
        private string vmBootOrderField;
        
        private uint stateField;
        
        private string srpSiteUuidField;
        
        private string recoveryPoolUuidField;
        
        private string remoteRecoveryPoolNameField;
        
        private string remoteRecoveryPoolDescriptionField;
        
        private virtualMachineSRPInfo[] protectedVMsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string vmBootOrder {
            get {
                return this.vmBootOrderField;
            }
            set {
                this.vmBootOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string srpSiteUuid {
            get {
                return this.srpSiteUuidField;
            }
            set {
                this.srpSiteUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string recoveryPoolUuid {
            get {
                return this.recoveryPoolUuidField;
            }
            set {
                this.recoveryPoolUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string remoteRecoveryPoolName {
            get {
                return this.remoteRecoveryPoolNameField;
            }
            set {
                this.remoteRecoveryPoolNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string remoteRecoveryPoolDescription {
            get {
                return this.remoteRecoveryPoolDescriptionField;
            }
            set {
                this.remoteRecoveryPoolDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("protectedVMs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public virtualMachineSRPInfo[] protectedVMs {
            get {
                return this.protectedVMsField;
            }
            set {
                this.protectedVMsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class virtualMachineSRPInfo : objectInfo {
        
        private bool autoStartOnFailoverField;
        
        private virtualMachineInfo vmField;
        
        public virtualMachineSRPInfo() {
            this.autoStartOnFailoverField = false;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool autoStartOnFailover {
            get {
                return this.autoStartOnFailoverField;
            }
            set {
                this.autoStartOnFailoverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public virtualMachineInfo vm {
            get {
                return this.vmField;
            }
            set {
                this.vmField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class OperationResult : objectInfo {
        
        private string uuidField;
        
        private string operandIdField;
        
        private string operandTypeField;
        
        private System.DateTime timestampField;
        
        private string operationField;
        
        private string descriptionField;
        
        private operationstatust statusField;
        
        private string detailsField;
        
        private OperationResultStep[] stepsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string operandId {
            get {
                return this.operandIdField;
            }
            set {
                this.operandIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string operandType {
            get {
                return this.operandTypeField;
            }
            set {
                this.operandTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public operationstatust status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("steps", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResultStep[] steps {
            get {
                return this.stepsField;
            }
            set {
                this.stepsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="operation-status-t", Namespace="http://www.citrix.com/storagelink/xcmn.xsd")]
    public enum operationstatust {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("XCMN-OPERATION-STATUS-NONE")]
        XCMNOPERATIONSTATUSNONE,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("XCMN-OPERATION-STATUS-SUCCESS")]
        XCMNOPERATIONSTATUSSUCCESS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("XCMN-OPERATION-STATUS-FAILURE")]
        XCMNOPERATIONSTATUSFAILURE,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("XCMN-OPERATION-STATUS-SUCCESS-WITH-WARNINGS")]
        XCMNOPERATIONSTATUSSUCCESSWITHWARNINGS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class OperationResultStep : objectInfo {
        
        private string operationResultUuidField;
        
        private uint stepNumberField;
        
        private System.DateTime timestampField;
        
        private string nameField;
        
        private operationstatust statusField;
        
        private string detailsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string operationResultUuid {
            get {
                return this.operationResultUuidField;
            }
            set {
                this.operationResultUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint stepNumber {
            get {
                return this.stepNumberField;
            }
            set {
                this.stepNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public operationstatust status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRPConsistencyGroupAssocDetail))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class SRPConsistencyGroupAssoc : objectInfo {
        
        private string uuidField;
        
        private string srpSiteUuidField;
        
        private string parentCgUuidField;
        
        private string childCgUuidField;
        
        private uint relationshipField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string srpSiteUuid {
            get {
                return this.srpSiteUuidField;
            }
            set {
                this.srpSiteUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string parentCgUuid {
            get {
                return this.parentCgUuidField;
            }
            set {
                this.parentCgUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string childCgUuid {
            get {
                return this.childCgUuidField;
            }
            set {
                this.childCgUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint relationship {
            get {
                return this.relationshipField;
            }
            set {
                this.relationshipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class SRPConsistencyGroupAssocDetail : SRPConsistencyGroupAssoc {
        
        private SRPConsistencyGroupInfo parentCgField;
        
        private SRPConsistencyGroupInfo childCgField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPConsistencyGroupInfo parentCg {
            get {
                return this.parentCgField;
            }
            set {
                this.parentCgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SRPConsistencyGroupInfo childCg {
            get {
                return this.childCgField;
            }
            set {
                this.childCgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class SRPRecoveryPoolInfo : objectInfo {
        
        private string uuidField;
        
        private string nameField;
        
        private string descriptionField;
        
        private hostInfo[] hostsField;
        
        private hostGroupInfo[] hostGroupsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("hosts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hostInfo[] hosts {
            get {
                return this.hostsField;
            }
            set {
                this.hostsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("hostGroups", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hostGroupInfo[] hostGroups {
            get {
                return this.hostGroupsField;
            }
            set {
                this.hostGroupsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class hostGroupInfo : objectInfo {
        
        private string uuidField;
        
        private string friendlyNameField;
        
        private uint typeField;
        
        private string recoveryPoolUuidField;
        
        private hostInfo[] hostInfoListField;
        
        private storageRepositoryInfo[] storageRepositoryInfoListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string recoveryPoolUuid {
            get {
                return this.recoveryPoolUuidField;
            }
            set {
                this.recoveryPoolUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("hostInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hostInfo[] hostInfoList {
            get {
                return this.hostInfoListField;
            }
            set {
                this.hostInfoListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("storageRepositoryInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageRepositoryInfo[] storageRepositoryInfoList {
            get {
                return this.storageRepositoryInfoListField;
            }
            set {
                this.storageRepositoryInfoListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class SRPStateInfo : objectInfo {
        
        private bool localSiteExistsField;
        
        private bool remoteSiteExistsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool localSiteExists {
            get {
                return this.localSiteExistsField;
            }
            set {
                this.localSiteExistsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool remoteSiteExists {
            get {
                return this.remoteSiteExistsField;
            }
            set {
                this.remoteSiteExistsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class zoneAliasInfo : objectInfo {
        
        private string zoneAliasIdField;
        
        private string friendlyNameField;
        
        private string altKeyField;
        
        private string fabricIdField;
        
        private string aliasNameField;
        
        private string[] memberIdsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zoneAliasId {
            get {
                return this.zoneAliasIdField;
            }
            set {
                this.zoneAliasIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string altKey {
            get {
                return this.altKeyField;
            }
            set {
                this.altKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fabricId {
            get {
                return this.fabricIdField;
            }
            set {
                this.fabricIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string aliasName {
            get {
                return this.aliasNameField;
            }
            set {
                this.aliasNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("memberIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] memberIds {
            get {
                return this.memberIdsField;
            }
            set {
                this.memberIdsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class zoneInfo : objectInfo {
        
        private string zoneIdField;
        
        private string friendlyNameField;
        
        private string altKeyField;
        
        private string fabricIdField;
        
        private bool isActiveField;
        
        private string[] memberIdsField;
        
        private string[] aliasIdsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zoneId {
            get {
                return this.zoneIdField;
            }
            set {
                this.zoneIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string altKey {
            get {
                return this.altKeyField;
            }
            set {
                this.altKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fabricId {
            get {
                return this.fabricIdField;
            }
            set {
                this.fabricIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("memberIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] memberIds {
            get {
                return this.memberIdsField;
            }
            set {
                this.memberIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aliasIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] aliasIds {
            get {
                return this.aliasIdsField;
            }
            set {
                this.aliasIdsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class zoneSetInfo : objectInfo {
        
        private string zoneSetIdField;
        
        private string friendlyNameField;
        
        private string altKeyField;
        
        private string fabricIdField;
        
        private bool isActiveField;
        
        private string[] zoneIdsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zoneSetId {
            get {
                return this.zoneSetIdField;
            }
            set {
                this.zoneSetIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string altKey {
            get {
                return this.altKeyField;
            }
            set {
                this.altKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fabricId {
            get {
                return this.fabricIdField;
            }
            set {
                this.fabricIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("zoneIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] zoneIds {
            get {
                return this.zoneIdsField;
            }
            set {
                this.zoneIdsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class switchInfo : objectInfo {
        
        private string switchIdField;
        
        private string friendlyNameField;
        
        private string altKeyField;
        
        private string fabricIdField;
        
        private string vendorField;
        
        private string modelField;
        
        private uint capabilitiesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string switchId {
            get {
                return this.switchIdField;
            }
            set {
                this.switchIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string altKey {
            get {
                return this.altKeyField;
            }
            set {
                this.altKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fabricId {
            get {
                return this.fabricIdField;
            }
            set {
                this.fabricIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string vendor {
            get {
                return this.vendorField;
            }
            set {
                this.vendorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint capabilities {
            get {
                return this.capabilitiesField;
            }
            set {
                this.capabilitiesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class fabricInfo : objectInfo {
        
        private string fabricIdField;
        
        private string friendlyNameField;
        
        private string altKeyField;
        
        private uint capabilitiesField;
        
        private string[] endpointIdsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fabricId {
            get {
                return this.fabricIdField;
            }
            set {
                this.fabricIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string altKey {
            get {
                return this.altKeyField;
            }
            set {
                this.altKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint capabilities {
            get {
                return this.capabilitiesField;
            }
            set {
                this.capabilitiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("endpointIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] endpointIds {
            get {
                return this.endpointIdsField;
            }
            set {
                this.endpointIdsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class storageAdapterInfo : objectInfo {
        
        private string nameField;
        
        private string friendlyNameField;
        
        private errorInfo initErrorField;
        
        private string defaultNamespaceField;
        
        private int defaultPortNumberField;
        
        private bool isSMISField;
        
        private string descField;
        
        private string libNameField;
        
        private bool isInitializedField;
        
        private uint storageAdapterCredInputOptionsField;
        
        private uint typeField;
        
        private int versionMajorField;
        
        private int versionMinorField;
        
        private string ipAddressField;
        
        private uint portNumberField;
        
        private string usernameField;
        
        private string passwordField;
        
        private uint protocolTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public errorInfo initError {
            get {
                return this.initErrorField;
            }
            set {
                this.initErrorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string defaultNamespace {
            get {
                return this.defaultNamespaceField;
            }
            set {
                this.defaultNamespaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int defaultPortNumber {
            get {
                return this.defaultPortNumberField;
            }
            set {
                this.defaultPortNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isSMIS {
            get {
                return this.isSMISField;
            }
            set {
                this.isSMISField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string desc {
            get {
                return this.descField;
            }
            set {
                this.descField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string libName {
            get {
                return this.libNameField;
            }
            set {
                this.libNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isInitialized {
            get {
                return this.isInitializedField;
            }
            set {
                this.isInitializedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint storageAdapterCredInputOptions {
            get {
                return this.storageAdapterCredInputOptionsField;
            }
            set {
                this.storageAdapterCredInputOptionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int versionMajor {
            get {
                return this.versionMajorField;
            }
            set {
                this.versionMajorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int versionMinor {
            get {
                return this.versionMinorField;
            }
            set {
                this.versionMinorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ipAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint portNumber {
            get {
                return this.portNumberField;
            }
            set {
                this.portNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint protocolType {
            get {
                return this.protocolTypeField;
            }
            set {
                this.protocolTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class virtualMachineTemplateInfo : objectInfo {
        
        private string uuidField;
        
        private string friendlyNameField;
        
        private string sysPrepProfileUuidField;
        
        private string storageManifestUuidField;
        
        private string storageProfileUuidField;
        
        private string hardwareProfileUuidField;
        
        private string metadataStorageRepositoryUuidField;
        
        private string descriptionField;
        
        private sysPrepProfile sysPrepProfileField;
        
        private storageManifestInfo storageManifestInfoField;
        
        private storageProfileInfo storageProfileInfoField;
        
        private hardwareProfileInfo hardwareProfileField;
        
        private storageRepositoryInfo metadataStorageRepositoryInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sysPrepProfileUuid {
            get {
                return this.sysPrepProfileUuidField;
            }
            set {
                this.sysPrepProfileUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageManifestUuid {
            get {
                return this.storageManifestUuidField;
            }
            set {
                this.storageManifestUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageProfileUuid {
            get {
                return this.storageProfileUuidField;
            }
            set {
                this.storageProfileUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hardwareProfileUuid {
            get {
                return this.hardwareProfileUuidField;
            }
            set {
                this.hardwareProfileUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string metadataStorageRepositoryUuid {
            get {
                return this.metadataStorageRepositoryUuidField;
            }
            set {
                this.metadataStorageRepositoryUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public sysPrepProfile sysPrepProfile {
            get {
                return this.sysPrepProfileField;
            }
            set {
                this.sysPrepProfileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageManifestInfo storageManifestInfo {
            get {
                return this.storageManifestInfoField;
            }
            set {
                this.storageManifestInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageProfileInfo storageProfileInfo {
            get {
                return this.storageProfileInfoField;
            }
            set {
                this.storageProfileInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hardwareProfileInfo hardwareProfile {
            get {
                return this.hardwareProfileField;
            }
            set {
                this.hardwareProfileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageRepositoryInfo metadataStorageRepositoryInfo {
            get {
                return this.metadataStorageRepositoryInfoField;
            }
            set {
                this.metadataStorageRepositoryInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class sysPrepProfile : objectInfo {
        
        private string uuidField;
        
        private string friendlyNameField;
        
        private string osTypeField;
        
        private string sysPrepFileIdField;
        
        private sysPrepProfileParam[] sysPrepParamsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string osType {
            get {
                return this.osTypeField;
            }
            set {
                this.osTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sysPrepFileId {
            get {
                return this.sysPrepFileIdField;
            }
            set {
                this.sysPrepFileIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sysPrepParams", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public sysPrepProfileParam[] sysPrepParams {
            get {
                return this.sysPrepParamsField;
            }
            set {
                this.sysPrepParamsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class storageManifestInfo : objectInfo {
        
        private string uuidField;
        
        private string friendlyNameField;
        
        private string descriptionField;
        
        private uint flagsField;
        
        private storageManifestProvisionInfo[] provisionListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("provisionList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageManifestProvisionInfo[] provisionList {
            get {
                return this.provisionListField;
            }
            set {
                this.provisionListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class storageManifestProvisionInfo : objectInfo {
        
        private string uuidField;
        
        private string storageManifestUuidField;
        
        private string storageRepositoryUuidField;
        
        private uint isBootDeviceField;
        
        private string friendlyNameField;
        
        private uint sizeInMBField;
        
        private string virtualDeviceFilePathField;
        
        private uint fsTypeField;
        
        private string descriptionField;
        
        private uint flagsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageManifestUuid {
            get {
                return this.storageManifestUuidField;
            }
            set {
                this.storageManifestUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageRepositoryUuid {
            get {
                return this.storageRepositoryUuidField;
            }
            set {
                this.storageRepositoryUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint isBootDevice {
            get {
                return this.isBootDeviceField;
            }
            set {
                this.isBootDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint sizeInMB {
            get {
                return this.sizeInMBField;
            }
            set {
                this.sizeInMBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string virtualDeviceFilePath {
            get {
                return this.virtualDeviceFilePathField;
            }
            set {
                this.virtualDeviceFilePathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint fsType {
            get {
                return this.fsTypeField;
            }
            set {
                this.fsTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class storageProfileInfo : objectInfo {
        
        private string uuidField;
        
        private string friendlyNameField;
        
        private string descriptionField;
        
        private string bootStorageVolumeIdField;
        
        private storageProfileNodeInfo[] storageProfileNodeInfoListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bootStorageVolumeId {
            get {
                return this.bootStorageVolumeIdField;
            }
            set {
                this.bootStorageVolumeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("storageProfileNodeInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageProfileNodeInfo[] storageProfileNodeInfoList {
            get {
                return this.storageProfileNodeInfoListField;
            }
            set {
                this.storageProfileNodeInfoListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class storageProfileNodeInfo : objectInfo {
        
        private string storageVolumeIdField;
        
        private string storageProfileUuidField;
        
        private string virtualDeviceFilePathField;
        
        private string storageRepositoryUuidField;
        
        private storageVolumeInfo storageVolumeInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageVolumeId {
            get {
                return this.storageVolumeIdField;
            }
            set {
                this.storageVolumeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageProfileUuid {
            get {
                return this.storageProfileUuidField;
            }
            set {
                this.storageProfileUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string virtualDeviceFilePath {
            get {
                return this.virtualDeviceFilePathField;
            }
            set {
                this.virtualDeviceFilePathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageRepositoryUuid {
            get {
                return this.storageRepositoryUuidField;
            }
            set {
                this.storageRepositoryUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageVolumeInfo storageVolumeInfo {
            get {
                return this.storageVolumeInfoField;
            }
            set {
                this.storageVolumeInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class hardwareProfileInfo : objectInfo {
        
        private string uuidField;
        
        private string friendlyNameField;
        
        private string descriptionField;
        
        private string biosBootOrderField;
        
        private uint cpuCountField;
        
        private uint nicPolicyField;
        
        private uint memSizeInMBField;
        
        private bool createMetadataDeviceField;
        
        private bool addLegacyNetworkField;
        
        private bool addDvdDriveField;
        
        private bool addScsiControllerField;
        
        private bool isProcessorCompatibilityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string biosBootOrder {
            get {
                return this.biosBootOrderField;
            }
            set {
                this.biosBootOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint cpuCount {
            get {
                return this.cpuCountField;
            }
            set {
                this.cpuCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint nicPolicy {
            get {
                return this.nicPolicyField;
            }
            set {
                this.nicPolicyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint memSizeInMB {
            get {
                return this.memSizeInMBField;
            }
            set {
                this.memSizeInMBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool createMetadataDevice {
            get {
                return this.createMetadataDeviceField;
            }
            set {
                this.createMetadataDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool addLegacyNetwork {
            get {
                return this.addLegacyNetworkField;
            }
            set {
                this.addLegacyNetworkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool addDvdDrive {
            get {
                return this.addDvdDriveField;
            }
            set {
                this.addDvdDriveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool addScsiController {
            get {
                return this.addScsiControllerField;
            }
            set {
                this.addScsiControllerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isProcessorCompatibility {
            get {
                return this.isProcessorCompatibilityField;
            }
            set {
                this.isProcessorCompatibilityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class catalogInfo : objectInfo {
        
        private string uuidField;
        
        private string typeField;
        
        private string friendlyNameField;
        
        private string descriptionField;
        
        private uint flagsField;
        
        private string[] objectUuidListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("objectUuidList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] objectUuidList {
            get {
                return this.objectUuidListField;
            }
            set {
                this.objectUuidListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class sysPrepRepository : objectInfo {
        
        private string repositoryNameField;
        
        private string[] sysPrepFilesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string repositoryName {
            get {
                return this.repositoryNameField;
            }
            set {
                this.repositoryNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sysPrepFiles", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] sysPrepFiles {
            get {
                return this.sysPrepFilesField;
            }
            set {
                this.sysPrepFilesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class licenseGroupInfo : objectInfo {
        
        private string uuidField;
        
        private string friendlyNameField;
        
        private string osTypeField;
        
        private string osVersionField;
        
        private string[] keyListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string osType {
            get {
                return this.osTypeField;
            }
            set {
                this.osTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string osVersion {
            get {
                return this.osVersionField;
            }
            set {
                this.osVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("keyList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] keyList {
            get {
                return this.keyListField;
            }
            set {
                this.keyListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class virtualMachineHostNetworkInfo : objectInfo {
        
        private string vmUuidField;
        
        private hostNetworkInfo hostNetworkInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string vmUuid {
            get {
                return this.vmUuidField;
            }
            set {
                this.vmUuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hostNetworkInfo hostNetworkInfo {
            get {
                return this.hostNetworkInfoField;
            }
            set {
                this.hostNetworkInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class vmBootDiskInfo : objectInfo {
        
        private string storageVolumeIDField;
        
        private uint virtualControllerIndexField;
        
        private uint virtualDeviceIndexField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageVolumeID {
            get {
                return this.storageVolumeIDField;
            }
            set {
                this.storageVolumeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint virtualControllerIndex {
            get {
                return this.virtualControllerIndexField;
            }
            set {
                this.virtualControllerIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint virtualDeviceIndex {
            get {
                return this.virtualDeviceIndexField;
            }
            set {
                this.virtualDeviceIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class hostCredentialsInfo : objectInfo {
        
        private string usernameField;
        
        private string passwordField;
        
        private string hostnameField;
        
        private string ipAddressField;
        
        private int hypervisorTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hostname {
            get {
                return this.hostnameField;
            }
            set {
                this.hostnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ipAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int hypervisorType {
            get {
                return this.hypervisorTypeField;
            }
            set {
                this.hypervisorTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class snapshotSessionInfo : objectInfo {
        
        private string sessionIdField;
        
        private string sourceStorageSystemIdField;
        
        private string targetStorageSystemIdField;
        
        private string targetStoragePoolIdField;
        
        private string targetRaidLevelField;
        
        private string snapshotMethodField;
        
        private uint snapshotTypeField;
        
        private uint provisioningTypeField;
        
        private uint snapshotOperationField;
        
        private snapshotAssocInfo[] snapshotAssocInfoListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sourceStorageSystemId {
            get {
                return this.sourceStorageSystemIdField;
            }
            set {
                this.sourceStorageSystemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetStorageSystemId {
            get {
                return this.targetStorageSystemIdField;
            }
            set {
                this.targetStorageSystemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetStoragePoolId {
            get {
                return this.targetStoragePoolIdField;
            }
            set {
                this.targetStoragePoolIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetRaidLevel {
            get {
                return this.targetRaidLevelField;
            }
            set {
                this.targetRaidLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string snapshotMethod {
            get {
                return this.snapshotMethodField;
            }
            set {
                this.snapshotMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint snapshotType {
            get {
                return this.snapshotTypeField;
            }
            set {
                this.snapshotTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint provisioningType {
            get {
                return this.provisioningTypeField;
            }
            set {
                this.provisioningTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint snapshotOperation {
            get {
                return this.snapshotOperationField;
            }
            set {
                this.snapshotOperationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("snapshotAssocInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public snapshotAssocInfo[] snapshotAssocInfoList {
            get {
                return this.snapshotAssocInfoListField;
            }
            set {
                this.snapshotAssocInfoListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class storageAssignmentInfo : objectInfo {
        
        private string storageSystemIdField;
        
        private string nameField;
        
        private string friendlyNameField;
        
        private uint hostTypeField;
        
        private initiatorPortInfo[] initiatorPortListField;
        
        private targetPortInfo[] targetPortListField;
        
        private storageVolumeLunInfo[] storageVolumeLunInfoListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageSystemId {
            get {
                return this.storageSystemIdField;
            }
            set {
                this.storageSystemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint hostType {
            get {
                return this.hostTypeField;
            }
            set {
                this.hostTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("initiatorPortList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public initiatorPortInfo[] initiatorPortList {
            get {
                return this.initiatorPortListField;
            }
            set {
                this.initiatorPortListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("targetPortList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public targetPortInfo[] targetPortList {
            get {
                return this.targetPortListField;
            }
            set {
                this.targetPortListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("storageVolumeLunInfoList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageVolumeLunInfo[] storageVolumeLunInfoList {
            get {
                return this.storageVolumeLunInfoListField;
            }
            set {
                this.storageVolumeLunInfoListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class targetPortInfo : objectInfo {
        
        private string storageSystemIdField;
        
        private string portIdField;
        
        private string portIqnField;
        
        private string friendlyNameField;
        
        private string connectionTypeField;
        
        private uint protocolTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storageSystemId {
            get {
                return this.storageSystemIdField;
            }
            set {
                this.storageSystemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string portId {
            get {
                return this.portIdField;
            }
            set {
                this.portIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string portIqn {
            get {
                return this.portIqnField;
            }
            set {
                this.portIqnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectionType {
            get {
                return this.connectionTypeField;
            }
            set {
                this.connectionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint protocolType {
            get {
                return this.protocolTypeField;
            }
            set {
                this.protocolTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class vmStorageMapInfo : objectInfo {
        
        private string vmNameField;
        
        private string guidField;
        
        private vmStorageInfo[] vmStorageInfosField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string vmName {
            get {
                return this.vmNameField;
            }
            set {
                this.vmNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vmStorageInfos", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public vmStorageInfo[] vmStorageInfos {
            get {
                return this.vmStorageInfosField;
            }
            set {
                this.vmStorageInfosField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class vmStorageInfo : objectInfo {
        
        private storageconnectiontypet vmStorageTypeField;
        
        private ulong diskIndexField;
        
        private string vhdPathField;
        
        private string volumeNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public storageconnectiontypet vmStorageType {
            get {
                return this.vmStorageTypeField;
            }
            set {
                this.vmStorageTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ulong diskIndex {
            get {
                return this.diskIndexField;
            }
            set {
                this.diskIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string vhdPath {
            get {
                return this.vhdPathField;
            }
            set {
                this.vhdPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string volumeName {
            get {
                return this.volumeNameField;
            }
            set {
                this.volumeNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class iscsiTargetID : objectInfo {
        
        private string iqnNameField;
        
        private string addressField;
        
        private string portField;
        
        private string chapUsernameField;
        
        private string chapPasswordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string iqnName {
            get {
                return this.iqnNameField;
            }
            set {
                this.iqnNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string chapUsername {
            get {
                return this.chapUsernameField;
            }
            set {
                this.chapUsernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string chapPassword {
            get {
                return this.chapPasswordField;
            }
            set {
                this.chapPasswordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class userInfo : objectInfo {
        
        private string usernameField;
        
        private string passwordField;
        
        private string descriptionField;
        
        private uint isEnabledField;
        
        private string roleIdField;
        
        private roleInfo roleInfoField;
        
        private keyValuePair[] permissionListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint isEnabled {
            get {
                return this.isEnabledField;
            }
            set {
                this.isEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string roleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public roleInfo roleInfo {
            get {
                return this.roleInfoField;
            }
            set {
                this.roleInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("permissionList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public keyValuePair[] permissionList {
            get {
                return this.permissionListField;
            }
            set {
                this.permissionListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class roleInfo : objectInfo {
        
        private string friendlyNameField;
        
        private string descriptionField;
        
        private string uuidField;
        
        private keyValuePair[] permissionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("permissions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public keyValuePair[] permissions {
            get {
                return this.permissionsField;
            }
            set {
                this.permissionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.citrix.com/storagelink/csl.xsd")]
    public partial class resourceGroupInfo : objectInfo {
        
        private string friendlyNameField;
        
        private string descriptionField;
        
        private string uuidField;
        
        private keyValuePair[] resourcesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string friendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("resources", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public keyValuePair[] resources {
            get {
                return this.resourcesField;
            }
            set {
                this.resourcesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="srp-site-mode-t", Namespace="http://www.citrix.com/storagelink/xcmn.xsd")]
    public enum srpsitemodet {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("XCMN-SRP-SITE-MODE-LOCAL-PRIMARY")]
        XCMNSRPSITEMODELOCALPRIMARY,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("XCMN-SRP-SITE-MODE-LOCAL-SECONDARY")]
        XCMNSRPSITEMODELOCALSECONDARY,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("XCMN-SRP-SITE-MODE-REMOTE-SECONDARY")]
        XCMNSRPSITEMODEREMOTESECONDARY,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("XCMN-SRP-SITE-MODE-REMOTE-PRIMARY")]
        XCMNSRPSITEMODEREMOTEPRIMARY,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="srp-consistency-group-relationship-t", Namespace="http://www.citrix.com/storagelink/xcmn.xsd")]
    public enum srpconsistencygrouprelationshipt {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("XCMN-SRP-CONSISTENCY-GROUP-RELATIONSHIP-DEPENDS-ON")]
        XCMNSRPCONSISTENCYGROUPRELATIONSHIPDEPENDSON,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("XCMN-SRP-CONSISTENCY-GROUP-RELATIONSHIP-STAGE")]
        XCMNSRPCONSISTENCYGROUPRELATIONSHIPSTAGE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getFabricConfigurationOptionsCompletedEventHandler(object sender, getFabricConfigurationOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFabricConfigurationOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFabricConfigurationOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public fabricConfigurationInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((fabricConfigurationInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void setFabricConfigurationOptionsCompletedEventHandler(object sender, setFabricConfigurationOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setFabricConfigurationOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setFabricConfigurationOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public fabricConfigurationInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((fabricConfigurationInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumFabricsCompletedEventHandler(object sender, enumFabricsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumFabricsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumFabricsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public fabricInfo[] list {
            get {
                this.RaiseExceptionIfNecessary();
                return ((fabricInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getFabricInfoCompletedEventHandler(object sender, getFabricInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFabricInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFabricInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public fabricInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((fabricInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumSwitchesCompletedEventHandler(object sender, enumSwitchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumSwitchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumSwitchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public switchInfo[] list {
            get {
                this.RaiseExceptionIfNecessary();
                return ((switchInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getSwitchInfoCompletedEventHandler(object sender, getSwitchInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSwitchInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSwitchInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public switchInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((switchInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumZonesCompletedEventHandler(object sender, enumZonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumZonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumZonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public zoneInfo[] list {
            get {
                this.RaiseExceptionIfNecessary();
                return ((zoneInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getZoneInfoCompletedEventHandler(object sender, getZoneInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getZoneInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getZoneInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public zoneInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((zoneInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumZoneAliasesCompletedEventHandler(object sender, enumZoneAliasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumZoneAliasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumZoneAliasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public zoneAliasInfo[] list {
            get {
                this.RaiseExceptionIfNecessary();
                return ((zoneAliasInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getZoneAliasInfoCompletedEventHandler(object sender, getZoneAliasInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getZoneAliasInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getZoneAliasInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public zoneAliasInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((zoneAliasInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumZoneSetsCompletedEventHandler(object sender, enumZoneSetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumZoneSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumZoneSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public zoneSetInfo[] list {
            get {
                this.RaiseExceptionIfNecessary();
                return ((zoneSetInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getZoneSetInfoCompletedEventHandler(object sender, getZoneSetInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getZoneSetInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getZoneSetInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public zoneSetInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((zoneSetInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void autoZoneCompletedEventHandler(object sender, autoZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class autoZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal autoZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public zoneInfo[] zoneList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((zoneInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void verifyZoningCompletedEventHandler(object sender, verifyZoningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class verifyZoningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal verifyZoningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public zoneInfo[] zoneList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((zoneInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void createHardwareProfileCompletedEventHandler(object sender, createHardwareProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createHardwareProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createHardwareProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public hardwareProfileInfo profile {
            get {
                this.RaiseExceptionIfNecessary();
                return ((hardwareProfileInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void modifyHardwareProfileCompletedEventHandler(object sender, modifyHardwareProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyHardwareProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyHardwareProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public hardwareProfileInfo profile {
            get {
                this.RaiseExceptionIfNecessary();
                return ((hardwareProfileInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void deleteHardwareProfileCompletedEventHandler(object sender, deleteHardwareProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteHardwareProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteHardwareProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumHardwareProfilesCompletedEventHandler(object sender, enumHardwareProfilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumHardwareProfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumHardwareProfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public hardwareProfileInfo[] list {
            get {
                this.RaiseExceptionIfNecessary();
                return ((hardwareProfileInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getHardwareProfileInfoCompletedEventHandler(object sender, getHardwareProfileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHardwareProfileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHardwareProfileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public hardwareProfileInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((hardwareProfileInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void removeHostGroupCompletedEventHandler(object sender, removeHostGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeHostGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeHostGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumHostGroupsCompletedEventHandler(object sender, enumHostGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumHostGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumHostGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public hostGroupInfo[] hostGroupInfoList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((hostGroupInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getHostGroupInfoCompletedEventHandler(object sender, getHostGroupInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHostGroupInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHostGroupInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public hostGroupInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((hostGroupInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void addHostCompletedEventHandler(object sender, addHostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addHostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addHostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public hostInfo info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((hostInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void removeHostCompletedEventHandler(object sender, removeHostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeHostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeHostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumHostsCompletedEventHandler(object sender, enumHostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumHostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumHostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public hostInfo[] hostInfoList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((hostInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getHostInfoCompletedEventHandler(object sender, getHostInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHostInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHostInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public hostInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((hostInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumVirtualMachinesCompletedEventHandler(object sender, enumVirtualMachinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumVirtualMachinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumVirtualMachinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public virtualMachineInfo[] vmInfoList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((virtualMachineInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getVirtualMachineInfoCompletedEventHandler(object sender, getVirtualMachineInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVirtualMachineInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVirtualMachineInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public virtualMachineInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((virtualMachineInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumHostInitiatorsCompletedEventHandler(object sender, enumHostInitiatorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumHostInitiatorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumHostInitiatorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public hostInitiatorInfo[] initInfoList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((hostInitiatorInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void addHostInitiatorCompletedEventHandler(object sender, addHostInitiatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addHostInitiatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addHostInitiatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public hostInitiatorInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((hostInitiatorInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void removeHostInitiatorCompletedEventHandler(object sender, removeHostInitiatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeHostInitiatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeHostInitiatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enableHostInitiatorCompletedEventHandler(object sender, enableHostInitiatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enableHostInitiatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enableHostInitiatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void disableHostInitiatorCompletedEventHandler(object sender, disableHostInitiatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class disableHostInitiatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal disableHostInitiatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumHostNetworksCompletedEventHandler(object sender, enumHostNetworksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumHostNetworksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumHostNetworksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public hostNetworkInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((hostNetworkInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumHostDeviceIDCompletedEventHandler(object sender, enumHostDeviceIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumHostDeviceIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumHostDeviceIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public diskDriveScsiIdInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((diskDriveScsiIdInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void deleteStorageManifestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void createStorageManifestCompletedEventHandler(object sender, createStorageManifestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createStorageManifestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createStorageManifestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public storageManifestInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageManifestInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void modifyStorageManifestCompletedEventHandler(object sender, modifyStorageManifestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyStorageManifestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyStorageManifestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public storageManifestInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageManifestInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumStorageManifestsCompletedEventHandler(object sender, enumStorageManifestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumStorageManifestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumStorageManifestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public storageManifestInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageManifestInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getStorageManifestInfoCompletedEventHandler(object sender, getStorageManifestInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStorageManifestInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStorageManifestInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public storageManifestInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageManifestInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void addProvisionToManifestCompletedEventHandler(object sender, addProvisionToManifestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addProvisionToManifestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addProvisionToManifestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public storageManifestInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageManifestInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void removeProvisionFromManifestCompletedEventHandler(object sender, removeProvisionFromManifestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeProvisionFromManifestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeProvisionFromManifestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public storageManifestInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageManifestInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void allocateStorageCompletedEventHandler(object sender, allocateStorageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class allocateStorageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal allocateStorageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storageVolumeInfo storageVolumeInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageVolumeInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void deleteStorageCompletedEventHandler(object sender, deleteStorageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteStorageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteStorageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void resizeStorageCompletedEventHandler(object sender, resizeStorageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resizeStorageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal resizeStorageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storageVolumeInfo storageVolumeInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageVolumeInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void assignStorageCompletedEventHandler(object sender, assignStorageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assignStorageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assignStorageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storageAssignmentInfo[] saInfoList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageAssignmentInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void unassignStorageCompletedEventHandler(object sender, unassignStorageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unassignStorageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal unassignStorageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storageAssignmentInfo[] saInfoList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageAssignmentInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void mountStorageCompletedEventHandler(object sender, mountStorageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mountStorageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mountStorageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string mountPoint {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void unmountStorageCompletedEventHandler(object sender, unmountStorageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unmountStorageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal unmountStorageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void snapshotSetupCompletedEventHandler(object sender, snapshotSetupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class snapshotSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal snapshotSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public snapshotSessionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((snapshotSessionInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void snapshotPrepareCompletedEventHandler(object sender, snapshotPrepareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class snapshotPrepareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal snapshotPrepareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public snapshotSessionInfo session {
            get {
                this.RaiseExceptionIfNecessary();
                return ((snapshotSessionInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void snapshotCreateCompletedEventHandler(object sender, snapshotCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class snapshotCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal snapshotCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public snapshotSessionInfo session {
            get {
                this.RaiseExceptionIfNecessary();
                return ((snapshotSessionInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void snapshotUpdateStatusCompletedEventHandler(object sender, snapshotUpdateStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class snapshotUpdateStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal snapshotUpdateStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public snapshotSessionInfo session {
            get {
                this.RaiseExceptionIfNecessary();
                return ((snapshotSessionInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void snapshotRestoreCompletedEventHandler(object sender, snapshotRestoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class snapshotRestoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal snapshotRestoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public snapshotSessionInfo session {
            get {
                this.RaiseExceptionIfNecessary();
                return ((snapshotSessionInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void snapshotDeleteCompletedEventHandler(object sender, snapshotDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class snapshotDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal snapshotDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public snapshotSessionInfo session {
            get {
                this.RaiseExceptionIfNecessary();
                return ((snapshotSessionInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumStorageAdaptersCompletedEventHandler(object sender, enumStorageAdaptersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumStorageAdaptersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumStorageAdaptersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public storageAdapterInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageAdapterInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void customMethodCompletedEventHandler(object sender, customMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class customMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal customMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public keyValuePair[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((keyValuePair[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void addRemoteStorageAdapterCompletedEventHandler(object sender, addRemoteStorageAdapterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addRemoteStorageAdapterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addRemoteStorageAdapterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public storageAdapterInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageAdapterInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void removeRemoteStorageAdapterCompletedEventHandler(object sender, removeRemoteStorageAdapterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeRemoteStorageAdapterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeRemoteStorageAdapterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public storageAdapterInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageAdapterInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumStorageManagementCredentialsCompletedEventHandler(object sender, enumStorageManagementCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumStorageManagementCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumStorageManagementCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public managementCredentials[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((managementCredentials[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getStorageManagementCredentialInfoCompletedEventHandler(object sender, getStorageManagementCredentialInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStorageManagementCredentialInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStorageManagementCredentialInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public managementCredentials Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((managementCredentials)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void addStorageManagementCredentialsCompletedEventHandler(object sender, addStorageManagementCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addStorageManagementCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addStorageManagementCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public managementCredentials info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((managementCredentials)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void updateStorageManagementCredentialsCompletedEventHandler(object sender, updateStorageManagementCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateStorageManagementCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateStorageManagementCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public managementCredentials info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((managementCredentials)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void removeStorageManagementCredentialsCompletedEventHandler(object sender, removeStorageManagementCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeStorageManagementCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeStorageManagementCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getStorageVolumeInfoCompletedEventHandler(object sender, getStorageVolumeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStorageVolumeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStorageVolumeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public storageVolumeInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageVolumeInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumStorageNodesCompletedEventHandler(object sender, enumStorageNodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumStorageNodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumStorageNodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storageVolumeInfo[] snInfoList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageVolumeInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getStoragePoolInfoCompletedEventHandler(object sender, getStoragePoolInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStoragePoolInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStoragePoolInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public storagePoolInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storagePoolInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void createStoragePoolCompletedEventHandler(object sender, createStoragePoolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createStoragePoolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createStoragePoolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storagePoolInfo spInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storagePoolInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void deleteStoragePoolCompletedEventHandler(object sender, deleteStoragePoolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteStoragePoolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteStoragePoolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enableStorageAdvancedOptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumStoragePoolsCompletedEventHandler(object sender, enumStoragePoolsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumStoragePoolsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumStoragePoolsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storagePoolInfo[] spInfoList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storagePoolInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumStorageSystemInitiatorPortsCompletedEventHandler(object sender, enumStorageSystemInitiatorPortsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumStorageSystemInitiatorPortsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumStorageSystemInitiatorPortsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public initiatorPortInfo[] portList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((initiatorPortInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumStorageSystemTargetPortsCompletedEventHandler(object sender, enumStorageSystemTargetPortsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumStorageSystemTargetPortsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumStorageSystemTargetPortsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public targetPortInfo[] portList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((targetPortInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumStorageSystemsCompletedEventHandler(object sender, enumStorageSystemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumStorageSystemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumStorageSystemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storageSystemInfo[] storageSystemInfoList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageSystemInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void doesObjectExistCompletedEventHandler(object sender, doesObjectExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doesObjectExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doesObjectExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool doesExist {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumStorageAssignmentsCompletedEventHandler(object sender, enumStorageAssignmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumStorageAssignmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumStorageAssignmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storageAssignmentInfo[] saInfoList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageAssignmentInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumSnapshotAssociationsCompletedEventHandler(object sender, enumSnapshotAssociationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumSnapshotAssociationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumSnapshotAssociationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public snapshotAssocInfo[] snapshotAssocInfoList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((snapshotAssocInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getStorageSystemInfoCompletedEventHandler(object sender, getStorageSystemInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStorageSystemInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStorageSystemInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public storageSystemInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageSystemInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void discoverVhdOnStorageVolumeCompletedEventHandler(object sender, discoverVhdOnStorageVolumeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class discoverVhdOnStorageVolumeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal discoverVhdOnStorageVolumeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storageVolumeVhdAssoc[] storageVolumeVhdAssocList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageVolumeVhdAssoc[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void createStorageProfileCompletedEventHandler(object sender, createStorageProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createStorageProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createStorageProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storageProfileInfo info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageProfileInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void deleteStorageProfileCompletedEventHandler(object sender, deleteStorageProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteStorageProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteStorageProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void modifyStorageProfileCompletedEventHandler(object sender, modifyStorageProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyStorageProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyStorageProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storageProfileInfo info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageProfileInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumStorageProfilesCompletedEventHandler(object sender, enumStorageProfilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumStorageProfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumStorageProfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public storageProfileInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageProfileInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getStorageProfileInfoCompletedEventHandler(object sender, getStorageProfileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStorageProfileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStorageProfileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public storageProfileInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageProfileInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void addStorageToStorageProfileCompletedEventHandler(object sender, addStorageToStorageProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addStorageToStorageProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addStorageToStorageProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storageProfileInfo info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageProfileInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void removeStorageFromStorageProfileCompletedEventHandler(object sender, removeStorageFromStorageProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeStorageFromStorageProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeStorageFromStorageProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storageProfileInfo info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageProfileInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void createStorageRepositoryCompletedEventHandler(object sender, createStorageRepositoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createStorageRepositoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createStorageRepositoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storageRepositoryInfo info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageRepositoryInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void deleteStorageRepositoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void destroyStorageRepositoryCompletedEventHandler(object sender, destroyStorageRepositoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class destroyStorageRepositoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal destroyStorageRepositoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void modifyStorageRepositoryCompletedEventHandler(object sender, modifyStorageRepositoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyStorageRepositoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyStorageRepositoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storageRepositoryInfo info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageRepositoryInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumStorageRepositoriesCompletedEventHandler(object sender, enumStorageRepositoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumStorageRepositoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumStorageRepositoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storageRepositoryInfo[] list {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageRepositoryInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getStorageRepositoryInfoCompletedEventHandler(object sender, getStorageRepositoryInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStorageRepositoryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStorageRepositoryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public storageRepositoryInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageRepositoryInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void allocateStorageFromRepositoryCompletedEventHandler(object sender, allocateStorageFromRepositoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class allocateStorageFromRepositoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal allocateStorageFromRepositoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storageVolumeInfo info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageVolumeInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void deallocateStorageFromRepositoryCompletedEventHandler(object sender, deallocateStorageFromRepositoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deallocateStorageFromRepositoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deallocateStorageFromRepositoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public storageRepositoryInfo info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageRepositoryInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void addStorageToRepositoryCompletedEventHandler(object sender, addStorageToRepositoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addStorageToRepositoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addStorageToRepositoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public storageRepositoryInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageRepositoryInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void removeStorageFromRepositoryCompletedEventHandler(object sender, removeStorageFromRepositoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeStorageFromRepositoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeStorageFromRepositoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public storageRepositoryInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((storageRepositoryInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void createSysPrepProfileCompletedEventHandler(object sender, createSysPrepProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSysPrepProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSysPrepProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public sysPrepProfile profile {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sysPrepProfile)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void modifySysPrepProfileCompletedEventHandler(object sender, modifySysPrepProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifySysPrepProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifySysPrepProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public sysPrepProfile profile {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sysPrepProfile)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getSysPrepProfileInfoCompletedEventHandler(object sender, getSysPrepProfileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSysPrepProfileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSysPrepProfileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public sysPrepProfile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sysPrepProfile)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void deleteSysPrepProfileCompletedEventHandler(object sender, deleteSysPrepProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteSysPrepProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteSysPrepProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumSysPrepProfilesCompletedEventHandler(object sender, enumSysPrepProfilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumSysPrepProfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumSysPrepProfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public sysPrepProfile[] list {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sysPrepProfile[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumSysPrepRepositoriesCompletedEventHandler(object sender, enumSysPrepRepositoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumSysPrepRepositoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumSysPrepRepositoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public sysPrepRepository[] list {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sysPrepRepository[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumSysPrepMasterFileKeysCompletedEventHandler(object sender, enumSysPrepMasterFileKeysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumSysPrepMasterFileKeysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumSysPrepMasterFileKeysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] keys {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void importStorageToVMCompletedEventHandler(object sender, importStorageToVMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importStorageToVMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importStorageToVMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void importStorageToVMExCompletedEventHandler(object sender, importStorageToVMExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importStorageToVMExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importStorageToVMExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void importStorageToHostCompletedEventHandler(object sender, importStorageToHostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importStorageToHostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importStorageToHostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void createVirtualMachineFromTemplateCompletedEventHandler(object sender, createVirtualMachineFromTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createVirtualMachineFromTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createVirtualMachineFromTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public virtualMachineInfo[] vmList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((virtualMachineInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void snapshotVirtualMachineCompletedEventHandler(object sender, snapshotVirtualMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class snapshotVirtualMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal snapshotVirtualMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public virtualMachineInfo[] vmList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((virtualMachineInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void deleteVirtualMachineCompletedEventHandler(object sender, deleteVirtualMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteVirtualMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteVirtualMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void destroyVirtualMachineCompletedEventHandler(object sender, destroyVirtualMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class destroyVirtualMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal destroyVirtualMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void startVirtualMachineCompletedEventHandler(object sender, startVirtualMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class startVirtualMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal startVirtualMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void shutdownVirtualMachineCompletedEventHandler(object sender, shutdownVirtualMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class shutdownVirtualMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal shutdownVirtualMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void pauseVirtualMachineCompletedEventHandler(object sender, pauseVirtualMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pauseVirtualMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pauseVirtualMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void rebootVirtualMachineCompletedEventHandler(object sender, rebootVirtualMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rebootVirtualMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rebootVirtualMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void stopVirtualMachineCompletedEventHandler(object sender, stopVirtualMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class stopVirtualMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal stopVirtualMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void saveVirtualMachineCompletedEventHandler(object sender, saveVirtualMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveVirtualMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveVirtualMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumVirtualMachineNetworksCompletedEventHandler(object sender, enumVirtualMachineNetworksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumVirtualMachineNetworksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumVirtualMachineNetworksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public vmNetworkInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((vmNetworkInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void turnoffVirtualMachineCompletedEventHandler(object sender, turnoffVirtualMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class turnoffVirtualMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal turnoffVirtualMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void moveVirtualMachineCompletedEventHandler(object sender, moveVirtualMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveVirtualMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveVirtualMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public virtualMachineInfo vmInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((virtualMachineInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void personalizeVirtualMachineCompletedEventHandler(object sender, personalizeVirtualMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class personalizeVirtualMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal personalizeVirtualMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void createVirtualMachineTemplateCompletedEventHandler(object sender, createVirtualMachineTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createVirtualMachineTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createVirtualMachineTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public virtualMachineTemplateInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((virtualMachineTemplateInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void deleteVirtualMachineTemplateCompletedEventHandler(object sender, deleteVirtualMachineTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteVirtualMachineTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteVirtualMachineTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void modifyVirtualMachineTemplateCompletedEventHandler(object sender, modifyVirtualMachineTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyVirtualMachineTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyVirtualMachineTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public virtualMachineTemplateInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((virtualMachineTemplateInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getVirtualMachineTemplateInfoCompletedEventHandler(object sender, getVirtualMachineTemplateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVirtualMachineTemplateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVirtualMachineTemplateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public virtualMachineTemplateInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((virtualMachineTemplateInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumVirtualMachineTemplatesCompletedEventHandler(object sender, enumVirtualMachineTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumVirtualMachineTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumVirtualMachineTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public virtualMachineTemplateInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((virtualMachineTemplateInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void deployTemplateAsVirtualMachineCompletedEventHandler(object sender, deployTemplateAsVirtualMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deployTemplateAsVirtualMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deployTemplateAsVirtualMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public virtualMachineInfo vmInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((virtualMachineInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getDefaultExportPathCompletedEventHandler(object sender, getDefaultExportPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDefaultExportPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDefaultExportPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enableSRPCompletedEventHandler(object sender, enableSRPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enableSRPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enableSRPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SRPSiteInfo siteInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPSiteInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void destroySRPCompletedEventHandler(object sender, destroySRPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class destroySRPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal destroySRPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void modifySRPSiteCompletedEventHandler(object sender, modifySRPSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifySRPSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifySRPSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SRPSiteInfo modifiedSiteInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPSiteInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void switchSRPSiteModeCompletedEventHandler(object sender, switchSRPSiteModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class switchSRPSiteModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal switchSRPSiteModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SRPSiteInfo modifiedSiteInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPSiteInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void disableSRPCompletedEventHandler(object sender, disableSRPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class disableSRPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal disableSRPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getSRPSiteInfoCompletedEventHandler(object sender, getSRPSiteInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSRPSiteInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSRPSiteInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPSiteInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPSiteInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getSRPStateCompletedEventHandler(object sender, getSRPStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSRPStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSRPStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPStateInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPStateInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void addRemoteSRPSiteCompletedEventHandler(object sender, addRemoteSRPSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addRemoteSRPSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addRemoteSRPSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SRPSiteInfo siteInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPSiteInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getRemoteSRPSiteInfoCompletedEventHandler(object sender, getRemoteSRPSiteInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRemoteSRPSiteInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRemoteSRPSiteInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPSiteInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPSiteInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void modifyRemoteSRPSiteCompletedEventHandler(object sender, modifyRemoteSRPSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyRemoteSRPSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyRemoteSRPSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SRPSiteInfo modifiedSiteInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPSiteInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void removeRemoteSRPSiteCompletedEventHandler(object sender, removeRemoteSRPSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeRemoteSRPSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeRemoteSRPSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getSRPSiteInfoByUuidCompletedEventHandler(object sender, getSRPSiteInfoByUuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSRPSiteInfoByUuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSRPSiteInfoByUuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPSiteInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPSiteInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void addSRPStorageRepositoryAssociationCompletedEventHandler(object sender, addSRPStorageRepositoryAssociationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addSRPStorageRepositoryAssociationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addSRPStorageRepositoryAssociationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SRPStorageRepositoryAssocDetail srAssoc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPStorageRepositoryAssocDetail)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumSRPStorageRepositoryAssociationsCompletedEventHandler(object sender, enumSRPStorageRepositoryAssociationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumSRPStorageRepositoryAssociationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumSRPStorageRepositoryAssociationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPStorageRepositoryAssocDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPStorageRepositoryAssocDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getSRPStorageRepositoryAssociationsCompletedEventHandler(object sender, getSRPStorageRepositoryAssociationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSRPStorageRepositoryAssociationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSRPStorageRepositoryAssociationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPStorageRepositoryAssocDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPStorageRepositoryAssocDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void removeSRPStorageRepositoryAssociationCompletedEventHandler(object sender, removeSRPStorageRepositoryAssociationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeSRPStorageRepositoryAssociationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeSRPStorageRepositoryAssociationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getSRPStorageRepositoryAssociationByUuidCompletedEventHandler(object sender, getSRPStorageRepositoryAssociationByUuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSRPStorageRepositoryAssociationByUuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSRPStorageRepositoryAssociationByUuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPStorageRepositoryAssocDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPStorageRepositoryAssocDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void removeSRPStorageVolumeAssociationCompletedEventHandler(object sender, removeSRPStorageVolumeAssociationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeSRPStorageVolumeAssociationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeSRPStorageVolumeAssociationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumSRPStorageVolumeAssociationsCompletedEventHandler(object sender, enumSRPStorageVolumeAssociationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumSRPStorageVolumeAssociationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumSRPStorageVolumeAssociationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPStorageVolumeAssocDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPStorageVolumeAssocDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getSRPStorageVolumeAssociationsCompletedEventHandler(object sender, getSRPStorageVolumeAssociationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSRPStorageVolumeAssociationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSRPStorageVolumeAssociationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPStorageVolumeAssocDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPStorageVolumeAssocDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getSRPStorageVolumeAssociationByUuidCompletedEventHandler(object sender, getSRPStorageVolumeAssociationByUuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSRPStorageVolumeAssociationByUuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSRPStorageVolumeAssociationByUuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPStorageVolumeAssocDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPStorageVolumeAssocDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void addSecondaryStorageManagementCredentialsCompletedEventHandler(object sender, addSecondaryStorageManagementCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addSecondaryStorageManagementCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addSecondaryStorageManagementCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public managementCredentials info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((managementCredentials)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumSecondaryStorageManagementCredentialsCompletedEventHandler(object sender, enumSecondaryStorageManagementCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumSecondaryStorageManagementCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumSecondaryStorageManagementCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public managementCredentials[] credList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((managementCredentials[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void createSRPRecoveryPoolCompletedEventHandler(object sender, createSRPRecoveryPoolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSRPRecoveryPoolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSRPRecoveryPoolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SRPRecoveryPoolInfo newPool {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPRecoveryPoolInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void modifySRPRecoveryPoolCompletedEventHandler(object sender, modifySRPRecoveryPoolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifySRPRecoveryPoolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifySRPRecoveryPoolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SRPRecoveryPoolInfo modifiedPool {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPRecoveryPoolInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getSRPRecoveryPoolInfoCompletedEventHandler(object sender, getSRPRecoveryPoolInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSRPRecoveryPoolInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSRPRecoveryPoolInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPRecoveryPoolInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPRecoveryPoolInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumSRPRecoveryPoolsCompletedEventHandler(object sender, enumSRPRecoveryPoolsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumSRPRecoveryPoolsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumSRPRecoveryPoolsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPRecoveryPoolInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPRecoveryPoolInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void destroySRPRecoveryPoolCompletedEventHandler(object sender, destroySRPRecoveryPoolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class destroySRPRecoveryPoolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal destroySRPRecoveryPoolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void createSRPConsistencyGroupCompletedEventHandler(object sender, createSRPConsistencyGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSRPConsistencyGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSRPConsistencyGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SRPConsistencyGroupInfo newCG {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPConsistencyGroupInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getSRPConsistencyGroupInfoCompletedEventHandler(object sender, getSRPConsistencyGroupInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSRPConsistencyGroupInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSRPConsistencyGroupInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPConsistencyGroupInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPConsistencyGroupInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumSRPConsistencyGroupsCompletedEventHandler(object sender, enumSRPConsistencyGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumSRPConsistencyGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumSRPConsistencyGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPConsistencyGroupInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPConsistencyGroupInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void activateSRPConsistencyGroupCompletedEventHandler(object sender, activateSRPConsistencyGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class activateSRPConsistencyGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal activateSRPConsistencyGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void modifySRPConsistencyGroupCompletedEventHandler(object sender, modifySRPConsistencyGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifySRPConsistencyGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifySRPConsistencyGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SRPConsistencyGroupInfo modifiedCG {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPConsistencyGroupInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void modifySRPConsistencyGroupMappingCompletedEventHandler(object sender, modifySRPConsistencyGroupMappingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifySRPConsistencyGroupMappingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifySRPConsistencyGroupMappingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void deactivateSRPConsistencyGroupCompletedEventHandler(object sender, deactivateSRPConsistencyGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deactivateSRPConsistencyGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deactivateSRPConsistencyGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void destroySRPConsistencyGroupCompletedEventHandler(object sender, destroySRPConsistencyGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class destroySRPConsistencyGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal destroySRPConsistencyGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void synchronizeSRPConsistencyGroupCompletedEventHandler(object sender, synchronizeSRPConsistencyGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class synchronizeSRPConsistencyGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal synchronizeSRPConsistencyGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumSRPConsistencyGroupsAvailableForUpdateCompletedEventHandler(object sender, enumSRPConsistencyGroupsAvailableForUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumSRPConsistencyGroupsAvailableForUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumSRPConsistencyGroupsAvailableForUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPConsistencyGroupInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPConsistencyGroupInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void updateSRPConsistencyGroupOnSecondaryCompletedEventHandler(object sender, updateSRPConsistencyGroupOnSecondaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateSRPConsistencyGroupOnSecondaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateSRPConsistencyGroupOnSecondaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getSRPConsistencyGroupConfigSyncHistoryCompletedEventHandler(object sender, getSRPConsistencyGroupConfigSyncHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSRPConsistencyGroupConfigSyncHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSRPConsistencyGroupConfigSyncHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void addSRPConsistencyGroupAssociationCompletedEventHandler(object sender, addSRPConsistencyGroupAssociationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addSRPConsistencyGroupAssociationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addSRPConsistencyGroupAssociationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SRPConsistencyGroupAssocDetail cgAssoc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPConsistencyGroupAssocDetail)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getSRPConsistencyGroupAssociationsCompletedEventHandler(object sender, getSRPConsistencyGroupAssociationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSRPConsistencyGroupAssociationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSRPConsistencyGroupAssociationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPConsistencyGroupAssocDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPConsistencyGroupAssocDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumSRPConsistencyGroupAssociationsCompletedEventHandler(object sender, enumSRPConsistencyGroupAssociationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumSRPConsistencyGroupAssociationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumSRPConsistencyGroupAssociationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPConsistencyGroupAssocDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPConsistencyGroupAssocDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void removeSRPConsistencyGroupAssociationCompletedEventHandler(object sender, removeSRPConsistencyGroupAssociationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeSRPConsistencyGroupAssociationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeSRPConsistencyGroupAssociationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getSRPConsistencyGroupAssociationByUuidCompletedEventHandler(object sender, getSRPConsistencyGroupAssociationByUuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSRPConsistencyGroupAssociationByUuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSRPConsistencyGroupAssociationByUuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRPConsistencyGroupAssocDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPConsistencyGroupAssocDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void validateSRPConsistencyGroupCompletedEventHandler(object sender, validateSRPConsistencyGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateSRPConsistencyGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results1;
        
        internal validateSRPConsistencyGroupCompletedEventArgs(object[] results1, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results1 = results1;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results1[0]));
            }
        }
        
        /// <remarks/>
        public OperationResult results {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results1[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getSRPConsistencyGroupValidationHistoryCompletedEventHandler(object sender, getSRPConsistencyGroupValidationHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSRPConsistencyGroupValidationHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSRPConsistencyGroupValidationHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void clearSRPConsistencyGroupValidationHistoryCompletedEventHandler(object sender, clearSRPConsistencyGroupValidationHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class clearSRPConsistencyGroupValidationHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal clearSRPConsistencyGroupValidationHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void prepareSRPConsistencyGroupForFailoverCompletedEventHandler(object sender, prepareSRPConsistencyGroupForFailoverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class prepareSRPConsistencyGroupForFailoverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal prepareSRPConsistencyGroupForFailoverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void incarnateSRPConsistencyGroupCompletedEventHandler(object sender, incarnateSRPConsistencyGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class incarnateSRPConsistencyGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results1;
        
        internal incarnateSRPConsistencyGroupCompletedEventArgs(object[] results1, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results1 = results1;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results1[0]));
            }
        }
        
        /// <remarks/>
        public OperationResult results {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results1[1]));
            }
        }
        
        /// <remarks/>
        public SRPConsistencyGroupInfo cg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPConsistencyGroupInfo)(this.results1[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void failoverSRPConsistencyGroupCompletedEventHandler(object sender, failoverSRPConsistencyGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class failoverSRPConsistencyGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results1;
        
        internal failoverSRPConsistencyGroupCompletedEventArgs(object[] results1, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results1 = results1;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results1[0]));
            }
        }
        
        /// <remarks/>
        public OperationResult results {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results1[1]));
            }
        }
        
        /// <remarks/>
        public SRPConsistencyGroupInfo cg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPConsistencyGroupInfo)(this.results1[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void testSRPConsistencyGroupCompletedEventHandler(object sender, testSRPConsistencyGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testSRPConsistencyGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results1;
        
        internal testSRPConsistencyGroupCompletedEventArgs(object[] results1, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results1 = results1;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results1[0]));
            }
        }
        
        /// <remarks/>
        public OperationResult results {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results1[1]));
            }
        }
        
        /// <remarks/>
        public SRPConsistencyGroupInfo cg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRPConsistencyGroupInfo)(this.results1[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void errorTestCompletedEventHandler(object sender, errorTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class errorTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal errorTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void logClientErrorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getSupportLogDataCompletedEventHandler(object sender, getSupportLogDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSupportLogDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSupportLogDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumScsiDeviceProcessorsCompletedEventHandler(object sender, enumScsiDeviceProcessorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumScsiDeviceProcessorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumScsiDeviceProcessorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void pullEventsCompletedEventHandler(object sender, pullEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pullEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pullEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public @event[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((@event[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int lastEventIndex {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string currentServerTimeStamp {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void registerEventListenerCompletedEventHandler(object sender, registerEventListenerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registerEventListenerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registerEventListenerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public @event[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((@event[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int lastEvent {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void setServicePasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getServiceVersionCompletedEventHandler(object sender, getServiceVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServiceVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServiceVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void setServiceTraceLevelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getServiceTraceLevelCompletedEventHandler(object sender, getServiceTraceLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServiceTraceLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServiceTraceLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void logRolloverCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumJobsCompletedEventHandler(object sender, enumJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void clearJobsCompletedEventHandler(object sender, clearJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class clearJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal clearJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void restartJobCompletedEventHandler(object sender, restartJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class restartJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal restartJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void cancelJobCompletedEventHandler(object sender, cancelJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getJobInfoCompletedEventHandler(object sender, getJobInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getJobInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getJobInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jobInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jobInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void createLicenseGroupCompletedEventHandler(object sender, createLicenseGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createLicenseGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createLicenseGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public licenseGroupInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((licenseGroupInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void deleteLicenseGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumLicenseGroupsCompletedEventHandler(object sender, enumLicenseGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumLicenseGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumLicenseGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public licenseGroupInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((licenseGroupInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void addTagCompletedEventHandler(object sender, addTagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tagInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tagInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void removeTagCompletedEventHandler(object sender, removeTagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tagInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tagInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumTagsCompletedEventHandler(object sender, enumTagsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumTagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumTagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tagInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tagInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumAlertsCompletedEventHandler(object sender, enumAlertsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumAlertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumAlertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public alertInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((alertInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getAlertInfoCompletedEventHandler(object sender, getAlertInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAlertInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAlertInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public alertInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((alertInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void clearAlertsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getLicenseServerInfoCompletedEventHandler(object sender, getLicenseServerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLicenseServerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLicenseServerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public licenseServerInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((licenseServerInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void setLicenseServerInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getLocalizedMessageStringCompletedEventHandler(object sender, getLocalizedMessageStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLocalizedMessageStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLocalizedMessageStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void enumUsersCompletedEventHandler(object sender, enumUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getUserInfoCompletedEventHandler(object sender, getUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void addUserCompletedEventHandler(object sender, addUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void changeUserPasswordCompletedEventHandler(object sender, changeUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changeUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changeUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void modifyUserCompletedEventHandler(object sender, modifyUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void removeUserCompletedEventHandler(object sender, removeUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userInfo)(this.results[0]));
            }
        }
    }
}
